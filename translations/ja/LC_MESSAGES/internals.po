# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# 
# Translators:
# Eiichi Sugiyama <barcarunrunbiscabarca@gmail.com>, 2018
# TSUTSUI, Kazuo <kzt206@gmail.com>, 2019
# matsuand, 2018
# TAKAHASHI Shuuji <shuuji3@gmail.com>, 2017,2019
# TAKAHASHI Shuuji <shuuji3@gmail.com>, 2016
# Takashi Sugawara <aimaimokomoko@gmail.com>, 2018
# Takuya N <takninnovationresearch@gmail.com>, 2020
# Takuya N <takninnovationresearch@gmail.com>, 2018
msgid ""
msgstr ""
"Project-Id-Version: django-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-28 13:42-0500\n"
"PO-Revision-Date: 2020-08-24 19:17+0000\n"
"Last-Translator: Transifex Bot <>\n"
"Language-Team: Japanese (http://www.transifex.com/django/django-docs/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:3
msgid "Reporting bugs and requesting features"
msgstr "バグレポートと機能のリクエスト"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:7
#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:7
msgid ""
"Please report security issues **only** to security@djangoproject.com.  This "
"is a private list only open to long-time, highly trusted Django developers, "
"and its archives are not public. For further details, please see :doc:`our "
"security policies </internals/security>`."
msgstr "セキュリティイシューは security@djangoproject.com に **のみ** 報告してください。これは長年にわたり信頼性の高いDjango開発者のみに公開されているプライベートなリストであり、そのアーカイブは公開されていません。詳細は :doc:`our security policies </internals/security>` を見てください。"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:13
msgid ""
"Otherwise, before reporting a bug or requesting a new feature on the `ticket"
" tracker <https://code.djangoproject.com/>`_, consider these points:"
msgstr "そうでなければ、 `ticket tracker <https://code.djangoproject.com/>`_ にバグ報告や新機能提案をする前に、以下のことを検討してください："

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:16
msgid ""
"Check that someone hasn't already filed the bug or feature request by "
"`searching`_ or running `custom queries`_ in the ticket tracker."
msgstr "ticket tracker で、`searching`_または`custom queries`を動かすことで、ほかの人がバグや機能のリクエストをファイルしていないことを確認してください。"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:19
msgid ""
"Don't use the ticket system to ask support questions. Use the |django-users|"
" list or the `#django`_ IRC channel for that."
msgstr "ticketシステムをサポート問い合わせに使用しないでください。django-users リスト、もしくはIRCチャンネルにて#djangoを使用してください。"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:22
msgid ""
"Don't reopen issues that have been marked \"wontfix\" without finding "
"consensus to do so on |django-developers|."
msgstr "\"wontfix\" とマークされた issue は、|django-developers| に相談せずに reopen しないでください。"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:25
msgid ""
"Don't use the ticket tracker for lengthy discussions, because they're likely"
" to get lost. If a particular ticket is controversial, please move the "
"discussion to |django-developers|."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:32
msgid "Reporting bugs"
msgstr "バグレポート"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:34
msgid ""
"Well-written bug reports are *incredibly* helpful. However, there's a "
"certain amount of overhead involved in working with any bug tracking system "
"so your help in keeping our ticket tracker as useful as possible is "
"appreciated. In particular:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:39
msgid ""
"**Do** read the :doc:`FAQ </faq/index>` to see if your issue might be a "
"well-known question."
msgstr "あなたの疑問が一般的なものである可能性がある際は、FAQを読んでください。"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:42
msgid ""
"**Do** ask on |django-users| or `#django`_ *first* if you're not sure if "
"what you're seeing is a bug."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:45
msgid ""
"**Do** write complete, reproducible, specific bug reports. You must include "
"a clear, concise description of the problem, and a set of instructions for "
"replicating it. Add as much debug information as you can: code snippets, "
"test cases, exception backtraces, screenshots, etc. A nice small test case "
"is the best way to report a bug, as it gives us a helpful way to confirm the"
" bug quickly."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:52
msgid ""
"**Don't** post to |django-developers| only to announce that you have filed a"
" bug report. All the tickets are mailed to another list, |django-updates|, "
"which is tracked by developers and interested community members; we see them"
" as they are filed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:57
msgid ""
"To understand the lifecycle of your ticket once you have created it, refer "
"to :doc:`triaging-tickets`."
msgstr "以前に作成されたticketのライフサイクルを理解するため、ドキュメントのtriaging-tiketsを参照してください。"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:61
msgid "Reporting user interface bugs and features"
msgstr "ユーザーインターフェイスのバグや機能について報告する"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:63
msgid ""
"If your bug or feature request touches on anything visual in nature, there "
"are a few additional guidelines to follow:"
msgstr "あなたが報告するバグや機能が何らかの視覚的に確認できるものである場合は、以下の追加のガイドラインに従ってください。"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:66
msgid ""
"Include screenshots in your ticket which are the visual equivalent of a "
"minimal testcase. Show off the issue, not the crazy customizations you've "
"made to your browser."
msgstr "最小限のテストケースを視覚的に表現することができるため、チケットにスクリーンショットを加えるようにしてください。問題を投稿するときは、ブラウザのカスタマイズを必ず無効化して確認してください。"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:70
msgid ""
"If the issue is difficult to show off using a still image, consider "
"capturing a *brief* screencast. If your software permits it, capture only "
"the relevant area of the screen."
msgstr "問題をスクリーンショットで示すのが難しい場合は、 *簡潔な* スクリーンキャストを撮影することを検討してください。可能なソフトウェアなら、問題に関連する領域のみを撮影するようにしてください。"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:74
msgid ""
"If you're offering a patch which changes the look or behavior of Django's "
"UI, you **must** attach before *and* after screenshots/screencasts. Tickets "
"lacking these are difficult for triagers to assess quickly."
msgstr "見た目や Django の UI を変更するようなパッチを提供する場合、変更前 *および* 変更後のスクリーンショット/スクリーンキャストを **絶対に** 添付しなければなりません。これらの情報が不足しているチケットは、早期に解決することが難しいです。"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:78
msgid ""
"Screenshots don't absolve you of other good reporting practices. Make sure "
"to include URLs, code snippets, and step-by-step instructions on how to "
"reproduce the behavior visible in the screenshots."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:82
msgid ""
"Make sure to set the UI/UX flag on the ticket so interested parties can find"
" your ticket."
msgstr "チケットに UI/UX フラグを設定するのを忘れないでください。このフラグがあると、関係する人たちがチケットをすぐに発見することができます。"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:86
msgid "Requesting features"
msgstr "機能のリクエスト"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:88
msgid ""
"We're always trying to make Django better, and your feature requests are a "
"key part of that. Here are some tips on how to make a request most "
"effectively:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:91
msgid ""
"Make sure the feature actually requires changes in Django's core. If your "
"idea can be developed as an independent application or module — for "
"instance, you want to support another database engine — we'll probably "
"suggest that you develop it independently. Then, if your project gathers "
"sufficient community support, we may consider it for inclusion in Django."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:97
msgid ""
"First request the feature on the |django-developers| list, not in the ticket"
" tracker. It'll get read more closely if it's on the mailing list. This is "
"even more important for large-scale feature requests. We like to discuss any"
" big changes to Django's core on the mailing list before actually working on"
" them."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:103
msgid ""
"Describe clearly and concisely what the missing feature is and how you'd "
"like to see it implemented. Include example code (non-functional is OK) if "
"possible."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:107
msgid ""
"Explain *why* you'd like the feature. Explaining a minimal use case will "
"help others understand where it fits in, and if there are already other ways"
" of achieving the same thing."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:111
msgid ""
"If there's a consensus agreement on the feature, then it's appropriate to "
"create a ticket. Include a link the discussion on |django-developers| in the"
" ticket description."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:115
msgid ""
"As with most open-source projects, code talks. If you are willing to write "
"the code for the feature yourself or, even better, if you've already written"
" it, it's much more likely to be accepted. Fork Django on GitHub, create a "
"feature branch, and show us your work!"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:120
msgid "See also: :ref:`documenting-new-features`."
msgstr ":ref:`documenting-new-features`. も参照してください。"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:125
msgid "How we make decisions"
msgstr "どのように決定が下されるか"

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:127
msgid ""
"Whenever possible, we strive for a rough consensus. To that end, we'll often"
" have informal votes on |django-developers| about a feature. In these votes "
"we follow the voting style invented by Apache and used on Python itself, "
"where votes are given as +1, +0, -0, or -1. Roughly translated, these votes "
"mean:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:132
msgid "+1: \"I love the idea and I'm strongly committed to it.\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:134
msgid "+0: \"Sounds OK to me.\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:136
msgid "-0: \"I'm not thrilled, but I won't stand in the way.\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:138
msgid ""
"-1: \"I strongly disagree and would be very unhappy to see the idea turn "
"into reality.\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:141
msgid ""
"Although these votes on |django-developers| are informal, they'll be taken "
"very seriously. After a suitable voting period, if an obvious consensus "
"arises we'll follow the votes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:145
msgid ""
"However, consensus is not always possible. If consensus cannot be reached, "
"or if the discussion towards a consensus fizzles out without a concrete "
"decision, the decision may be deferred to the :ref:`technical board "
"<technical-board>`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:149
msgid ""
"Internally, the technical board will use the same voting mechanism. A "
"proposition will be considered carried if:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:152
msgid "There are at least three \"+1\" votes from members of the technical board."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:154
msgid "There is no \"-1\" vote from any member of the technical board."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:156
msgid "Votes should be submitted within a week."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:158
msgid ""
"Since this process allows any technical board member to veto a proposal, a "
"\"-1\" vote should be accompanied by an explanation of what it would take to"
" convert that \"-1\" into at least a \"+0\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/bugs-and-features.txt:162
msgid ""
"Votes on technical matters should be announced and held in public on the "
"|django-developers| mailing list."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:3
msgid "Committing code"
msgstr "コードのコミット"

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:5
msgid ""
"This section is addressed to the committers and to anyone interested in "
"knowing how code gets committed into Django. If you're a community member "
"who wants to contribute code to Django, look at :doc:`writing-code/working-"
"with-git` instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:12
msgid "Handling pull requests"
msgstr "プルリクエストの取り扱い"

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:14
msgid ""
"Since Django is hosted on GitHub, patches are provided in the form of pull "
"requests."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:17
msgid ""
"When committing a pull request, make sure each individual commit matches the"
" commit guidelines described below. Contributors are expected to provide the"
" best pull requests possible. In practice however, committers - who will "
"likely be more familiar with the commit guidelines - may decide to bring a "
"commit up to standard themselves."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:23
msgid ""
"You may want to have Jenkins test the pull request with one of the pull "
"request builders that doesn't run automatically, such as Oracle or Selenium."
" See the `Jenkins wiki page`_ for instructions."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:29
msgid ""
"If you find yourself checking out pull requests locally more often, this git"
" alias will be helpful::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:35
msgid ""
"Add it to your ``~/.gitconfig``, and set ``upstream`` to be "
"``django/django``. Then you can run ``git pr ####`` to checkout the "
"corresponding pull request."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:38
msgid ""
"At this point, you can work on the code. Use ``git rebase -i`` and ``git "
"commit --amend`` to make sure the commits have the expected level of "
"quality. Once you're ready:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:62
msgid ""
"Force push to the branch after rebasing on master but before merging and "
"pushing to upstream. This allows the commit hashes on master and the branch "
"to match which automatically closes the pull request."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:66
msgid ""
"If a pull request doesn't need to be merged as multiple commits, you can use"
" GitHub's \"Squash and merge\" button on the website. Edit the commit "
"message as needed to conform to :ref:`the guidelines <committing-"
"guidelines>` and remove the pull request number that's automatically "
"appended to the message's first line."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:72
msgid ""
"When rewriting the commit history of a pull request, the goal is to make "
"Django's commit history as usable as possible:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:75
msgid ""
"If a patch contains back-and-forth commits, then rewrite those into one. For"
" example, if a commit adds some code and a second commit fixes stylistic "
"issues introduced in the first commit, those commits should be squashed "
"before merging."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:80
msgid ""
"Separate changes to different commits by logical grouping: if you do a "
"stylistic cleanup at the same time as you do other changes to a file, "
"separating the changes into two different commits will make reviewing "
"history easier."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:85
msgid "Beware of merges of upstream branches in the pull requests."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:87
msgid ""
"Tests should pass and docs should build after each commit. Neither the tests"
" nor the docs should emit warnings."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:90
msgid ""
"Trivial and small patches usually are best done in one commit. Medium to "
"large work may be split into multiple commits if it makes sense."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:93
msgid ""
"Practicality beats purity, so it is up to each committer to decide how much "
"history mangling to do for a pull request. The main points are engaging the "
"community, getting work done, and having a usable commit history."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:100
msgid "Committing guidelines"
msgstr "コミットガイドライン"

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:102
msgid ""
"In addition, please follow the following guidelines when committing code to "
"Django's Git repository:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:105
msgid ""
"Never change the published history of ``django/django`` branches by force "
"pushing. If you absolutely must (for security reasons for example), first "
"discuss the situation with the team."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:109
msgid ""
"For any medium-to-big changes, where \"medium-to-big\" is according to your "
"judgment, please bring things up on the |django-developers| mailing list "
"before making the change."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:113
msgid ""
"If you bring something up on |django-developers| and nobody responds, please"
" don't take that to mean your idea is great and should be implemented "
"immediately because nobody contested it. Everyone doesn't always have a lot "
"of time to read mailing list discussions immediately, so you may have to "
"wait a couple of days before getting a response."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:119
msgid "Write detailed commit messages in the past tense, not present tense."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:121
msgid "Good: \"Fixed Unicode bug in RSS API.\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:122
msgid "Bad: \"Fixes Unicode bug in RSS API.\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:123
msgid "Bad: \"Fixing Unicode bug in RSS API.\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:125
msgid ""
"The commit message should be in lines of 72 chars maximum. There should be a"
" subject line, separated by a blank line and then paragraphs of 72 char "
"lines. The limits are soft. For the subject line, shorter is better. In the "
"body of the commit message more detail is better than less:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:138
msgid ""
"Credit the contributors in the commit message: \"Thanks A for the report and"
" B for review.\" Use git's `Co-Authored-By`_ as appropriate."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:143
msgid ""
"For commits to a branch, prefix the commit message with the branch name. For"
" example: \"[1.4.x] Fixed #xxxxx -- Added support for mind reading.\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:146
msgid ""
"Limit commits to the most granular change that makes sense. This means, use "
"frequent small commits rather than infrequent large commits. For example, if"
" implementing feature X requires a small change to library Y, first commit "
"the change to library Y, then commit feature X in a separate commit. This "
"goes a *long way* in helping everyone follow your changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:152
msgid ""
"Separate bug fixes from feature changes. Bugfixes may need to be backported "
"to the stable branch, according to :ref:`supported-versions-policy`."
msgstr "機能変更からバグ修正を分けてください。バグ修正は :ref:`supported-versions-policy` に基づいて安定ブランチにバックポートする必要があることがあるためです。"

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:155
msgid ""
"If your commit closes a ticket in the Django `ticket tracker`_, begin your "
"commit message with the text \"Fixed #xxxxx\", where \"xxxxx\" is the number"
" of the ticket your commit fixes. Example: \"Fixed #123 -- Added whizbang "
"feature.\". We've rigged Trac so that any commit message in that format will"
" automatically close the referenced ticket and post a comment to it with the"
" full commit message."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:162
msgid "For the curious, we're using a `Trac plugin`_ for this."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:166
msgid ""
"Note that the Trac integration doesn't know anything about pull requests. So"
" if you try to close a pull request with the phrase \"closes #400\" in your "
"commit message, GitHub will close the pull request, but the Trac plugin will"
" also close the same numbered ticket in Trac."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:173
msgid ""
"If your commit references a ticket in the Django `ticket tracker`_ but does "
"*not* close the ticket, include the phrase \"Refs #xxxxx\", where \"xxxxx\" "
"is the number of the ticket your commit references. This will automatically "
"post a comment to the appropriate ticket."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:178
msgid "Write commit messages for backports using this pattern:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:186
msgid "For example:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:194
msgid ""
"There's a `script on the wiki "
"<https://code.djangoproject.com/wiki/CommitterTips#AutomatingBackports>`_ to"
" automate this."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:198
msgid "If the commit fixes a regression, include this in the commit message:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:204
msgid "(use the commit hash where the regression was introduced)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:207
msgid "Reverting commits"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:209
msgid "Nobody's perfect; mistakes will be committed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:211
msgid ""
"But try very hard to ensure that mistakes don't happen. Just because we have"
" a reversion policy doesn't relax your responsibility to aim for the highest"
" quality possible. Really: double-check your work, or have it checked by "
"another committer, **before** you commit it in the first place!"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:216
msgid "When a mistaken commit is discovered, please follow these guidelines:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:218
msgid "If possible, have the original author revert their own commit."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:220
msgid ""
"Don't revert another author's changes without permission from the original "
"author."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:223
msgid ""
"Use git revert -- this will make a reverse commit, but the original commit "
"will still be part of the commit history."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:226
msgid ""
"If the original author can't be reached (within a reasonable amount of time "
"-- a day or so) and the problem is severe -- crashing bug, major test "
"failures, etc. -- then ask for objections on the |django-developers| mailing"
" list then revert if there are none."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:231
msgid ""
"If the problem is small (a feature commit after feature freeze, say), wait "
"it out."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:234
msgid ""
"If there's a disagreement between the committer and the reverter-to-be then "
"try to work it out on the |django-developers| mailing list. If an agreement "
"can't be reached then it should be put to a vote."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:239
msgid ""
"If the commit introduced a confirmed, disclosed security vulnerability then "
"the commit may be reverted immediately without permission from anyone."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:243
msgid ""
"The release branch maintainer may back out commits to the release branch "
"without permission if the commit breaks the release branch."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/committing-code.txt:246
msgid ""
"If you mistakenly push a topic branch to ``django/django``, delete it. For "
"instance, if you did: ``git push upstream feature_antigravity``, do a "
"reverse push: ``git push upstream :feature_antigravity``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:3
msgid "Contributing to Django"
msgstr "Django へのコントリビュート"

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:5
msgid ""
"Django is a community that lives on its volunteers. As it keeps growing, we "
"always need more people to help others. As soon as you learn Django, you can"
" contribute in many ways:"
msgstr "Django はボランティアによって構成される一つのコミュニティです。その成長を続けさせるために、私たちは他者を助けてくださる方々を常に必要としています。Django について学んでいく事で、以下のような多くの方法で貢献していただけます:"

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:9
msgid ""
"Join the `Django forum`_. This forum is a place for discussing the Django "
"framework and applications and projects that use it. This is also a good "
"place to ask and answer any questions related to installing, using, or "
"contributing to Django."
msgstr "`Django forum`_ に参加してください。このフォーラムは Django フレームワークとアプリケーション、そしてそれを使ったプロジェクトについてディスカッションする場です。Django のインストール、活用、コントリビュートする方法について質問・回答するのに絶好の場所でもあります。"

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:14
msgid ""
"Join the |django-users| mailing list and answer questions. This mailing list"
" has a huge audience, and we really want to maintain a friendly and helpful "
"atmosphere. If you're new to the Django community, you should read the "
"`posting guidelines`_."
msgstr "|django-users| メーリングリストに参加して質問に回答して下さい。このメーリングリストは多くの購読者を持ち、私たちは友好的に助け合う雰囲気を大事にしたいと強く願っています。もし Django のコミュニティに慣れていない場合は、 `投稿ガイドライン`_ を読んでください。"

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:19
msgid ""
"Join the `#django IRC channel`_ on Freenode and answer questions. By "
"explaining Django to other users, you're going to learn a lot about the "
"framework yourself."
msgstr "Freenode の `#django IRC チャンネル`_ に参加して質問に回答してください。Django について他のユーザーに説明することで、そのフレームワークについて自身も多くを学べます。"

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:23
msgid ""
"Blog about Django. We syndicate all the Django blogs we know about on the "
"`community page`_; if you'd like to see your blog on that page you can "
"`register it here`_."
msgstr "Django に関するブログを書いてください。私たちは知り得た Django のブログを全て `community page`_ 上にまとめています。もしブログをそのページに表示させたい場合は `こちらから登録してください`_ 。"

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:27
msgid ""
"Contribute to open-source Django projects, write some documentation, or "
"release your own code as an open-source pluggable application. The ecosystem"
" of pluggable applications is a big strength of Django, help us build it!"
msgstr "オープンソースである Django にコントリビュートしたり、ドキュメントを書いたり、自身で書いたコードをプラガブルなオープンソースとして公開してください。Django においてプラガブルなアプリケーションを用いたエコシステムは大きな強みの一つになります、ご支援お願いします！"

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:32
msgid ""
"If you think working *with* Django is fun, wait until you start working *on*"
" it. We're passionate about helping Django users make the jump to "
"contributing members of the community, so there are several ways you can "
"help Django's development:"
msgstr "Django を *用いる* 事を楽しく感じるようになって、しばらくすればそれを *開発する* ようになるでしょう。私たちは Django のユーザーが開発コミュニティにおけるコントリビューターとなる事を熱望しており、 Django の開発を支援する方法をいくつか用意しています:"

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:37
msgid ":doc:`Report bugs <bugs-and-features>` in our `ticket tracker`_."
msgstr "私たちの  `チケットトラッカー`_ で :doc:`バグをレポート<bugs-and-features>` してください。"

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:39
msgid ""
"Join the |django-developers| mailing list and share your ideas for how to "
"improve Django. We're always open to suggestions. You can also interact on "
"the `#django-dev IRC channel`_."
msgstr "|django-developers| メーリングリストに参加し、Djangoをどう改善できるかあなたのアイデアを共有してください。私たちは常に提案にオープンです。また `#django-dev IRC チャンネル`_ でも意見交換ができます。"

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:43
msgid ""
":doc:`Submit patches <writing-code/submitting-patches>` for new and/or fixed"
" behavior. If you're looking for a way to get started contributing to Django"
" read the :doc:`/intro/contributing` tutorial and have a look at the `easy "
"pickings`_ tickets. The :ref:`patch-review-checklist` will also be helpful."
msgstr "新機能もしくは修正のため :doc:`パッチを提出 <writing-code/submitting-patches>` してください。これから初めて Django への貢献を行う方法を探している場合は :doc:`/intro/contributing` 内のチュートリアルを読み `easy pickings`_ がタグされたチケットを参照してください。:ref:`patch-review-checklist`  も参考になります。"

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:49
msgid ""
":doc:`Improve the documentation <writing-documentation>` or :doc:`write unit"
" tests <writing-code/unit-tests>`."
msgstr ":doc:`ドキュメントを発展させる <writing-documentation>` か :doc:`テストを書いて <writing-code/unit-tests>` ください。"

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:52
msgid ""
":doc:`Triage tickets and review patches <triaging-tickets>` created by other"
" users."
msgstr "他のユーザーによって作成された :doc:`チケットの優先度を決めてパッチのレビューを行って <triaging-tickets>` ください。"

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:55
msgid ""
"Really, **ANYONE** can do something to help make Django better and greater!"
msgstr "本当に **どなたにでも** Django をより良い素晴らしい物にするための支援をしていただく事ができます。"

#: ../../../../sources/3.1/docs/internals/contributing/index.txt:57
msgid "Browse the following sections to find out how:"
msgstr "どのように貢献するかについて知るには以下のセクションを閲覧してください:"

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:3
msgid "Localizing Django"
msgstr "Django のローカライズ"

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:5
msgid ""
"Various parts of Django, such as the admin site and validation error "
"messages, are internationalized. This means they display differently "
"depending on each user's language or country. For this, Django uses the same"
" internationalization and localization infrastructure available to Django "
"applications, described in the :doc:`i18n documentation "
"</topics/i18n/index>`."
msgstr "管理者サイトや検証のエラーメッセージなど、Django の各種パーツは国際化されています。つまり、これらのメッセージはユーザーの言語や国によって異なるように表示することができるようになっています。そのため、Django では、Django アプリケーションに共通の国際化・ローカライズのインフラを使用しています。詳しくは :doc:`i18n documentation </topics/i18n/index>` で説明されています。"

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:12
msgid "Translations"
msgstr "翻訳"

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:14
msgid ""
"Translations are contributed by Django users worldwide. The translation work"
" is coordinated at `Transifex`_."
msgstr "翻訳文字列は、世界中の Django ユーザーにより提供されています。翻訳作業は `Transifex`_ で協力して行われています。"

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:17
msgid ""
"If you find an incorrect translation or want to discuss specific "
"translations, go to the `Django project page`_. If you would like to help "
"out with translating or add a language that isn't yet translated, here's "
"what to do:"
msgstr "もし不正確な翻訳を見つけたり、特定の翻訳について他の翻訳者と議論したい場合は、`Django project page`_ を訪問してください。翻訳に協力したり、新しい言語を追加したい場合は、以下の手順に従ってください。"

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:21
msgid ""
"Join the :ref:`Django i18n mailing list <django-i18n-mailing-list>` and "
"introduce yourself."
msgstr ":ref:`Django i18n mailing list <django-i18n-mailing-list>` に参加し、自己紹介をする。"

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:24
msgid "Make sure you read the notes about :ref:`specialties-of-django-i18n`."
msgstr ":ref:`specialties-of-django-i18n` に関するノートを読んで確認する。"

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:26
msgid "Sign up at `Transifex`_ and visit the `Django project page`_."
msgstr "`Transifex`_ にサインアップし、`Django project page`_ を訪問する。"

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:28
msgid ""
"On the `Django project page`_, choose the language you want to work on, "
"**or** -- in case the language doesn't exist yet -- request a new language "
"team by clicking on the \"Request language\" link and selecting the "
"appropriate language."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:33
msgid ""
"Then, click the \"Join this Team\" button to become a member of this team. "
"Every team has at least one coordinator who is responsible to review your "
"membership request. You can also contact the team coordinator to clarify "
"procedural problems and handle the actual translation process."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:38
msgid ""
"Once you are a member of a team choose the translation resource you want to "
"update on the team page. For example the \"core\" resource refers to the "
"translation catalog that contains all non-contrib translations. Each of the "
"contrib apps also have a resource (prefixed with \"contrib\")."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:44
msgid ""
"For more information about how to use Transifex, read the `Transifex User "
"Guide`_."
msgstr "Transifex の使い方に関する詳しい情報については、 `Transifex User Guide`_ を読んでください。"

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:47
msgid ""
"Translations from Transifex are only integrated into the Django repository "
"at the time of a new :term:`feature release <Feature release>`. We try to "
"update them a second time during one of the following :term:`patch release "
"<Patch release>`\\s, but that depends on the translation manager's "
"availability. So don't miss the string freeze period (between the release "
"candidate and the feature release) to take the opportunity to complete and "
"fix the translations for your language!"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:56
msgid "Formats"
msgstr "フォーマット"

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:58
msgid ""
"You can also review ``conf/locale/<locale>/formats.py``. This file describes"
" the date, time and numbers formatting particularities of your locale. See "
":doc:`/topics/i18n/formatting` for details."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:62
msgid ""
"The format files aren't managed by the use of Transifex. To change them, you"
" must :doc:`create a patch<writing-code/submitting-patches>` against the "
"Django source tree, as for any code change:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:66
msgid "Create a diff against the current Git master branch."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:68
msgid ""
"Open a ticket in Django's ticket system, set its ``Component`` field to "
"``Translations``, and attach the patch to it."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:78
#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:256
msgid "Documentation"
msgstr "ドキュメント"

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:80
msgid ""
"There is also an opportunity to translate the documentation, though this is "
"a huge undertaking to complete entirely (you have been warned!). We use the "
"same `Transifex tool <https://www.transifex.com/django/django-docs/>`_. The "
"translations will appear at "
"``https://docs.djangoproject.com/<language_code>/`` when at least the "
"``docs/intro/*`` files are fully translated in your language."
msgstr "また、ドキュメントの翻訳もすることができますが、全てを翻訳しきるのはかなりとても大掛かりな作業です（あなたも気付いていることでしょう！）。我々は同じ `Transifex ツール <https://www.transifex.com/django/django-docs/>`_. を使っています。翻訳した結果は ``docs/intro/*`` ファイルが全てその言語に翻訳された段階で ``https://docs.djangoproject.com/<language_code>/`` に公開されます。"

#: ../../../../sources/3.1/docs/internals/contributing/localizing.txt:86
msgid ""
"Once translations are published, updated versions from Transifex will be "
"irregularly ported to the `django/django-docs-translations "
"<https://github.com/django/django-docs-translations>`_ repository and to the"
" documentation website. Only translations for the latest stable Django "
"release are updated."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:3
msgid "Advice for new contributors"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:5
msgid ""
"New contributor and not sure what to do? Want to help but just don't know "
"how to get started? This is the section for you."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:8
msgid "Basic tools and workflow"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:10
msgid ""
"If you are new to contributing to Django, the :doc:`/intro/contributing` "
"tutorial will give you an introduction to the tools and the workflow."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:14
msgid "First steps"
msgstr "最初のステップ"

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:16
msgid "Start with these steps to discover Django's development process."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:18
msgid "**Triage tickets**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:20
msgid ""
"If an `unreviewed ticket`_ reports a bug, try and reproduce it. If you can "
"reproduce it and it seems valid, make a note that you confirmed the bug and "
"accept the ticket. Make sure the ticket is filed under the correct component"
" area. Consider writing a patch that adds a test for the bug's behavior, "
"even if you don't fix the bug itself. See more at :ref:`how-can-i-help-with-"
"triaging`"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:27
msgid ""
"**Look for tickets that are accepted and review patches to build familiarity"
" with the codebase and the process**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:30
msgid ""
"Mark the appropriate flags if a patch needs docs or tests. Look through the "
"changes a patch makes, and keep an eye out for syntax that is incompatible "
"with older but still supported versions of Python. :doc:`Run the tests "
"</internals/contributing/writing-code/unit-tests>` and make sure they pass. "
"Where possible and relevant, try them out on a database other than SQLite. "
"Leave comments and feedback!"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:37
msgid "**Keep old patches up to date**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:39
msgid ""
"Oftentimes the codebase will change between a patch being submitted and the "
"time it gets reviewed. Make sure it still applies cleanly and functions as "
"expected. Updating a patch is both useful and important! See more on :doc"
":`writing-code/submitting-patches`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:44
msgid "**Write some documentation**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:46
msgid ""
"Django's documentation is great but it can always be improved. Did you find "
"a typo? Do you think that something should be clarified? Go ahead and "
"suggest a documentation patch! See also the guide on :doc:`writing-"
"documentation`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:53
msgid ""
"The `reports page`_ contains links to many useful Trac queries, including "
"several that are useful for triaging tickets and reviewing patches as "
"suggested above."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:59
msgid "**Sign the Contributor License Agreement**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:61
msgid ""
"The code that you write belongs to you or your employer. If your "
"contribution is more than one or two lines of code, you need to sign the "
"`CLA`_. See the `Contributor License Agreement FAQ`_ for a more thorough "
"explanation."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:72
msgid "Guidelines"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:74
msgid ""
"As a newcomer on a large project, it's easy to experience frustration. "
"Here's some advice to make your work on Django more useful and rewarding."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:77
msgid ""
"**Pick a subject area that you care about, that you are familiar with, or "
"that you want to learn about**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:80
msgid ""
"You don't already have to be an expert on the area you want to work on; you "
"become an expert through your ongoing contributions to the code."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:83
msgid "**Analyze tickets' context and history**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:85
msgid ""
"Trac isn't an absolute; the context is just as important as the words. When "
"reading Trac, you need to take into account who says things, and when they "
"were said. Support for an idea two years ago doesn't necessarily mean that "
"the idea will still have support. You also need to pay attention to who "
"*hasn't* spoken -- for example, if an experienced contributor hasn't been "
"recently involved in a discussion, then a ticket may not have the support "
"required to get into Django."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:93
msgid "**Start small**"
msgstr "**小さく始める**"

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:95
msgid ""
"It's easier to get feedback on a little issue than on a big one. See the "
"`easy pickings`_."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:98
msgid ""
"**If you're going to engage in a big task, make sure that your idea has "
"support first**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:101
msgid ""
"This means getting someone else to confirm that a bug is real before you fix"
" the issue, and ensuring that there's consensus on a proposed feature before"
" you go implementing it."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:105
msgid "**Be bold! Leave feedback!**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:107
msgid ""
"Sometimes it can be scary to put your opinion out to the world and say "
"\"this ticket is correct\" or \"this patch needs work\", but it's the only "
"way the project moves forward. The contributions of the broad Django "
"community ultimately have a much greater impact than that of any one person."
" We can't do it without **you**!"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:113
msgid "**Err on the side of caution when marking things Ready For Check-in**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:115
msgid ""
"If you're really not certain if a ticket is ready, don't mark it as such. "
"Leave a comment instead, letting others know your thoughts.  If you're "
"mostly certain, but not completely certain, you might also try asking on IRC"
" to see if someone else can confirm your suspicions."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:120
msgid "**Wait for feedback, and respond to feedback that you receive**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:122
msgid ""
"Focus on one or two tickets, see them through from start to finish, and "
"repeat. The shotgun approach of taking on lots of tickets and letting some "
"fall by the wayside ends up doing more harm than good."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:126
msgid "**Be rigorous**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:128
msgid ""
"When we say \":pep:`8`, and must have docs and tests\", we mean it. If a "
"patch doesn't have docs and tests, there had better be a good reason. "
"Arguments like \"I couldn't find any existing tests of this feature\" don't "
"carry much weight--while it may be true, that means you have the extra-"
"important job of writing the very first tests for that feature, not that you"
" get a pass from writing tests altogether."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:140
msgid "FAQ"
msgstr "FAQ"

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:142
msgid ""
"**This ticket I care about has been ignored for days/weeks/months! What can "
"I do to get it committed?**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:145
msgid ""
"First off, it's not personal. Django is entirely developed by volunteers "
"(except the Django fellow), and sometimes folks just don't have time. The "
"best thing to do is to send a gentle reminder to the |django-developers| "
"mailing list asking for review on the ticket, or to bring it up in the "
"``#django-dev`` IRC channel."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:151
msgid ""
"**I'm sure my ticket is absolutely 100% perfect, can I mark it as RFC "
"myself?**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/new-contributors.txt:154
msgid ""
"Short answer: No. It's always better to get another set of eyes on a ticket."
" If you're having trouble getting that second set of eyes, see question 1, "
"above."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:3
#: ../../../../sources/3.1/docs/internals/organization.txt:91
msgid "Triaging tickets"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:5
msgid ""
"Django uses Trac_ for managing the work on the code base. Trac is a "
"community-tended garden of the bugs people have found and the features "
"people would like to see added. As in any garden, sometimes there are weeds "
"to be pulled and sometimes there are flowers and vegetables that need "
"picking. We need your help to sort out one from the other, and in the end we"
" all benefit together."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:12
msgid ""
"Like all gardens, we can aspire to perfection but in reality there's no such"
" thing. Even in the most pristine garden there are still snails and insects."
" In a community garden there are also helpful people who -- with the best of"
" intentions -- fertilize the weeds and poison the roses. It's the job of the"
" community as a whole to self-manage, keep the problems to a minimum, and "
"educate those coming into the community so that they can become valuable "
"contributing members."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:20
msgid ""
"Similarly, while we aim for Trac to be a perfect representation of the state"
" of Django's progress, we acknowledge that this will not happen. By "
"distributing the load of Trac maintenance to the community, we accept that "
"there will be mistakes. Trac is \"mostly accurate\", and we give allowances "
"for the fact that sometimes it will be wrong. That's okay. We're "
"perfectionists with deadlines."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:26
msgid ""
"We rely on the community to keep participating, keep tickets as accurate as "
"possible, and raise issues for discussion on our mailing lists when there is"
" confusion or disagreement."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:30
msgid ""
"Django is a community project, and every contribution helps. We can't do "
"this without **you**!"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:34
msgid "Triage workflow"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:36
msgid ""
"Unfortunately, not all bug reports and feature requests in the ticket "
"tracker provide all the :doc:`required details<bugs-and-features>`. A number"
" of tickets have patches, but those patches don't meet all the requirements "
"of a :ref:`good patch<patch-style>`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:41
msgid ""
"One way to help out is to *triage* tickets that have been created by other "
"users."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:44
msgid ""
"Most of the workflow is based around the concept of a ticket's :ref:`triage "
"stages <triage-stages>`. Each stage describes where in its lifetime a given "
"ticket is at any time. Along with a handful of flags, this attribute easily "
"tells us what and who each ticket is waiting on."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:49
msgid "Since a picture is worth a thousand words, let's start there:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:56
msgid "We've got two roles in this diagram:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:58
msgid ""
"Committers: people with commit access who are responsible for making the "
"final decision to merge a patch."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:61
msgid ""
"Ticket triagers: anyone in the Django community who chooses to become "
"involved in Django's development process. Our Trac installation is "
"intentionally left open to the public, and anyone can triage tickets. Django"
" is a community project, and we encourage :ref:`triage by the community<how-"
"can-i-help-with-triaging>`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:67
msgid "By way of example, here we see the lifecycle of an average ticket:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:69
msgid ""
"Alice creates a ticket and sends an incomplete pull request (no tests, "
"incorrect implementation)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:72
msgid ""
"Bob reviews the pull request, marks the ticket as \"Accepted\", \"needs "
"tests\", and \"patch needs improvement\", and leaves a comment telling Alice"
" how the patch could be improved."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:76
msgid ""
"Alice updates the pull request, adding tests (but not changing the "
"implementation). She removes the two flags."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:79
msgid ""
"Charlie reviews the pull request and resets the \"patch needs improvement\" "
"flag with another comment about improving the implementation."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:82
msgid ""
"Alice updates the pull request, fixing the implementation. She removes the "
"\"patch needs improvement\" flag."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:85
msgid ""
"Daisy reviews the pull request and marks the ticket as \"Ready for "
"checkin\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:87
msgid "Jacob, a committer, reviews the pull request and merges it."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:89
msgid ""
"Some tickets require much less feedback than this, but then again some "
"tickets require much much more."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:95
msgid "Triage stages"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:97
msgid ""
"Below we describe in more detail the various stages that a ticket may flow "
"through during its lifetime."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:101
msgid "Unreviewed"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:103
msgid ""
"The ticket has not been reviewed by anyone who felt qualified to make a "
"judgment about whether the ticket contained a valid issue, a viable feature,"
" or ought to be closed for any of the various reasons."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:108
msgid "Accepted"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:110
msgid ""
"The big gray area! The absolute meaning of \"accepted\" is that the issue "
"described in the ticket is valid and is in some stage of being worked on. "
"Beyond that there are several considerations:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:114
msgid "**Accepted + No Flags**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:116
msgid ""
"The ticket is valid, but no one has submitted a patch for it yet. Often this"
" means you could safely start writing a patch for it. This is generally more"
" true for the case of accepted bugs than accepted features. A ticket for a "
"bug that has been accepted means that the issue has been verified by at "
"least one triager as a legitimate bug - and should probably be fixed if "
"possible. An accepted new feature may only mean that one triager thought the"
" feature would be good to have, but this alone does not represent a "
"consensus view or imply with any certainty that a patch will be accepted for"
" that feature. Seek more feedback before writing an extensive patch if you "
"are in doubt."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:126
msgid "**Accepted + Has Patch**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:128
msgid ""
"The ticket is waiting for people to review the supplied patch. This means "
"downloading the patch and trying it out, verifying that it contains tests "
"and docs, running the test suite with the included patch, and leaving "
"feedback on the ticket."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:133
msgid "**Accepted + Has Patch + Needs ...**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:135
msgid ""
"This means the ticket has been reviewed, and has been found to need further "
"work. \"Needs tests\" and \"Needs documentation\" are self-explanatory. "
"\"Patch needs improvement\" will generally be accompanied by a comment on "
"the ticket explaining what is needed to improve the code."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:141
msgid "Ready For Checkin"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:143
msgid ""
"The ticket was reviewed by any member of the community other than the person"
" who supplied the patch and found to meet all the requirements for a commit-"
"ready patch. A committer now needs to give the patch a final review prior to"
" being committed. See the :ref:`New contributors' FAQ<new-contributors-faq>`"
" for \"My ticket has been in RFC forever! What should I do?\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:151
msgid "Someday/Maybe"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:153
msgid ""
"This stage isn't shown on the diagram. It's used sparingly to keep track of "
"high-level ideas or long term feature requests."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:156
msgid ""
"These tickets are uncommon and overall less useful since they don't describe"
" concrete actionable issues. They are enhancement requests that we might "
"consider adding someday to the framework if an excellent patch is submitted."
" They are not a high priority."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:162
msgid "Other triage attributes"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:164
msgid ""
"A number of flags, appearing as checkboxes in Trac, can be set on a ticket:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:167
msgid "Has patch"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:169
msgid ""
"This means the ticket has an associated :doc:`patch<writing-code/submitting-"
"patches>`. These will be reviewed to see if the patch is \"good\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:173
msgid ""
"The following three fields (Needs documentation, Needs tests, Patch needs "
"improvement) apply only if a patch has been supplied."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:177
msgid "Needs documentation"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:179
msgid ""
"This flag is used for tickets with patches that need associated "
"documentation. Complete documentation of features is a prerequisite before "
"we can check them into the codebase."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:184
msgid "Needs tests"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:186
msgid ""
"This flags the patch as needing associated unit tests. Again, this is a "
"required part of a valid patch."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:190
msgid "Patch needs improvement"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:192
msgid ""
"This flag means that although the ticket *has* a patch, it's not quite ready"
" for checkin. This could mean the patch no longer applies cleanly, there is "
"a flaw in the implementation, or that the code doesn't meet our standards."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:198
msgid "Easy pickings"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:200
msgid "Tickets that would require small, easy, patches."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:203
msgid "Type"
msgstr "型"

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:205
msgid "Tickets should be categorized by *type* between:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:208
msgid "New Feature"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:208
msgid "For adding something new."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:211
msgid "Bug"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:211
msgid "For when an existing thing is broken or not behaving as expected."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:215
msgid "Cleanup/optimization"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:214
msgid ""
"For when nothing is broken but something could be made cleaner, better, "
"faster, stronger."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:218
msgid "Component"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:220
msgid ""
"Tickets should be classified into *components* indicating which area of the "
"Django codebase they belong to. This makes tickets better organized and "
"easier to find."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:225
msgid "Severity"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:227
msgid ""
"The *severity* attribute is used to identify blockers, that is, issues which"
" should get fixed before releasing the next version of Django. Typically "
"those issues are bugs causing regressions from earlier versions or "
"potentially causing severe data losses. This attribute is quite rarely used "
"and the vast majority of tickets have a severity of \"Normal\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:234
msgid "Version"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:236
msgid ""
"It is possible to use the *version* attribute to indicate in which version "
"the reported bug was identified."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:240
msgid "UI/UX"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:242
msgid ""
"This flag is used for tickets that relate to User Interface and User "
"Experiences questions. For example, this flag would be appropriate for user-"
"facing features in forms or the admin interface."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:247
msgid "Cc"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:249
msgid ""
"You may add your username or email address to this field to be notified when"
" new contributions are made to the ticket."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:253
msgid "Keywords"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:255
msgid ""
"With this field you may label a ticket with multiple keywords. This can be "
"useful, for example, to group several tickets of a same theme. Keywords can "
"either be comma or space separated. Keyword search finds the keyword string "
"anywhere in the keywords. For example, clicking on a ticket with the keyword"
" \"form\" will yield similar tickets tagged with keywords containing strings"
" such as \"formset\", \"modelformset\", and \"ManagementForm\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:265
msgid "Closing Tickets"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:267
msgid ""
"When a ticket has completed its useful lifecycle, it's time for it to be "
"closed. Closing a ticket is a big responsibility, though. You have to be "
"sure that the issue is really resolved, and you need to keep in mind that "
"the reporter of the ticket may not be happy to have their ticket closed "
"(unless it's fixed!). If you're not certain about closing a ticket, leave a "
"comment with your thoughts instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:274
msgid ""
"If you do close a ticket, you should always make sure of the following:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:276
msgid "Be certain that the issue is resolved."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:278
msgid "Leave a comment explaining the decision to close the ticket."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:280
msgid ""
"If there is a way they can improve the ticket to reopen it, let them know."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:282
msgid ""
"If the ticket is a duplicate, reference the original ticket. Also cross-"
"reference the closed ticket by leaving a comment in the original one -- this"
" allows to access more related information about the reported bug or "
"requested feature."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:287
msgid ""
"**Be polite.** No one likes having their ticket closed. It can be "
"frustrating or even discouraging. The best way to avoid turning people off "
"from contributing to Django is to be polite and friendly and to offer "
"suggestions for how they could improve this ticket and other tickets in the "
"future."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:293
msgid "A ticket can be resolved in a number of ways:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:296
msgid "fixed"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:296
msgid "Used once a patch has been rolled into Django and the issue is fixed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:303
msgid "invalid"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:299
msgid ""
"Used if the ticket is found to be incorrect. This means that the issue in "
"the ticket is actually the result of a user error, or describes a problem "
"with something other than Django, or isn't a bug report or feature request "
"at all (for example, some new users submit support queries as tickets)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:312
msgid "wontfix"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:306
msgid ""
"Used when a someone decides that the request isn't appropriate for "
"consideration in Django. Sometimes a ticket is closed as \"wontfix\" with a "
"request for the reporter to start a discussion on the |django-developers| "
"mailing list if they feel differently from the rationale provided by the "
"person who closed the ticket. Other times, a mailing list discussion "
"precedes the decision to close a ticket. Always use the mailing list to get "
"a consensus before reopening tickets closed as \"wontfix\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:317
msgid "duplicate"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:315
msgid ""
"Used when another ticket covers the same issue. By closing duplicate "
"tickets, we keep all the discussion in one place, which helps everyone."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:321
msgid "worksforme"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:320
msgid ""
"Used when the ticket doesn't contain enough detail to replicate the original"
" bug."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:326
msgid "needsinfo"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:324
msgid ""
"Used when the ticket does not contain enough information to replicate the "
"reported issue but is potentially still valid. The ticket should be reopened"
" when more information is supplied."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:328
msgid ""
"If you believe that the ticket was closed in error -- because you're still "
"having the issue, or it's popped up somewhere else, or the triagers have "
"made a mistake -- please reopen the ticket and provide further information. "
"Again, please do not reopen tickets that have been marked as \"wontfix\" and"
" bring the issue to |django-developers| instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:337
msgid "How can I help with triaging?"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:339
msgid ""
"The triage process is primarily driven by community members. Really, "
"**ANYONE** can help."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:342
msgid ""
"To get involved, start by `creating an account on Trac`_. If you have an "
"account but have forgotten your password, you can reset it using the "
"`password reset page`_."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:346
msgid "Then, you can help out by:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:348
msgid ""
"Closing \"Unreviewed\" tickets as \"invalid\", \"worksforme\", or "
"\"duplicate\", or \"wontfix\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:351
msgid ""
"Closing \"Unreviewed\" tickets as \"needsinfo\" when the description is too "
"sparse to be actionable, or when they're feature requests requiring a "
"discussion on |django-developers|."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:355
msgid ""
"Correcting the \"Needs tests\", \"Needs documentation\", or \"Has patch\" "
"flags for tickets where they are incorrectly set."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:358
msgid ""
"Setting the \"`Easy pickings`_\" flag for tickets that are small and "
"relatively straightforward."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:361
msgid "Set the *type* of tickets that are still uncategorized."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:363
msgid ""
"Checking that old tickets are still valid. If a ticket hasn't seen any "
"activity in a long time, it's possible that the problem has been fixed but "
"the ticket hasn't yet been closed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:367
msgid ""
"Identifying trends and themes in the tickets. If there are a lot of bug "
"reports about a particular part of Django, it may indicate we should "
"consider refactoring that part of the code. If a trend is emerging, you "
"should raise it for discussion (referencing the relevant tickets) on "
"|django-developers|."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:373
msgid ""
"Verify if patches submitted by other users are correct. If they are correct "
"and also contain appropriate documentation and tests then move them to the "
"\"Ready for Checkin\" stage. If they are not correct then leave a comment to"
" explain why and set the corresponding flags (\"Patch needs improvement\", "
"\"Needs tests\" etc.)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:381
msgid ""
"The `Reports page`_ contains links to many useful Trac queries, including "
"several that are useful for triaging tickets and reviewing patches as "
"suggested above."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:385
msgid "You can also find more :doc:`new-contributors`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:389
msgid ""
"However, we do ask the following of all general community members working in"
" the ticket database:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:392
msgid ""
"Please **don't** promote your own tickets to \"Ready for checkin\". You may "
"mark other people's tickets which you've reviewed as \"Ready for checkin\", "
"but you should get at minimum one other community member to review a patch "
"that you submit."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:397
msgid ""
"Please **don't** reverse a decision without posting a message to |django-"
"developers| to find consensus."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:400
msgid ""
"If you're unsure if you should be making a change, don't make the change but"
" instead leave a comment with your concerns on the ticket, or post a message"
" to |django-developers|. It's okay to be unsure, but your input is still "
"valuable."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:411
msgid "Bisecting a regression"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:415
msgid ""
"A regression is a bug that's present in some newer version of Django but not"
" in an older one. An extremely helpful piece of information is the commit "
"that introduced the regression. Knowing the commit that caused the change in"
" behavior helps identify if the change was intentional or if it was an "
"inadvertent side-effect. Here's how you can determine this."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:421
msgid ""
"Begin by writing a regression test for Django's test suite for the issue. "
"For example, we'll pretend we're debugging a regression in migrations. After"
" you've written the test and confirmed that it fails on the latest master, "
"put it in a separate file that you can run standalone. For our example, "
"we'll pretend we created ``tests/migrations/test_regression.py``, which can "
"be run with::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:429
msgid ""
"Next, we mark the current point in history as being \"bad\" since the test "
"fails::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:435
msgid ""
"Now, we need to find a point in git history before the regression was "
"introduced (i.e. a point where the test passes). Use something like ``git "
"checkout HEAD~100`` to checkout an earlier revision (100 commits earlier, in"
" this case). Check if the test fails. If so, mark that point as \"bad\" "
"(``git bisect bad``), then checkout an earlier revision and recheck. Once "
"you find a revision where your test passes, mark it as \"good\"::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:446
msgid ""
"Now we're ready for the fun part: using ``git bisect run`` to automate the "
"rest of the process::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:451
msgid ""
"You should see ``git bisect`` use a binary search to automatically checkout "
"revisions between the good and bad commits until it finds the first \"bad\" "
"commit where the test fails."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/triaging-tickets.txt:455
msgid ""
"Now, report your results on the Trac ticket, and please include the "
"regression test as an attachment. When someone writes a fix for the bug, "
"they'll already have your test as a starting point."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:3
msgid "Coding style"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:5
msgid ""
"Please follow these coding standards when writing code for inclusion in "
"Django."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:10
msgid "Python style"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:12
msgid ""
"Please conform to the indentation style dictated in the ``.editorconfig`` "
"file. We recommend using a text editor with `EditorConfig`_ support to avoid"
" indentation and whitespace issues. The Python files use 4 spaces for "
"indentation and the HTML files use 2 spaces."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:17
msgid "Unless otherwise specified, follow :pep:`8`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:19
msgid ""
"Use `flake8`_ to check for problems in this area. Note that our "
"``setup.cfg`` file contains some excluded files (deprecated modules we don't"
" care about cleaning up and some third-party code that Django vendors) as "
"well as some excluded errors that we don't consider as gross violations. "
"Remember that :pep:`8` is only a guide, so respect the style of the "
"surrounding code as a primary goal."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:26
msgid ""
"An exception to :pep:`8` is our rules on line lengths. Don't limit lines of "
"code to 79 characters if it means the code looks significantly uglier or is "
"harder to read. We allow up to 119 characters as this is the width of GitHub"
" code review; anything longer requires horizontal scrolling which makes "
"review more difficult. This check is included when you run ``flake8``. "
"Documentation, comments, and docstrings should be wrapped at 79 characters, "
"even though :pep:`8` suggests 72."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:34
msgid "Use four spaces for indentation."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:36
msgid "Use four space hanging indentation rather than vertical alignment::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:43
msgid "Instead of::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:48
msgid ""
"This makes better use of space and avoids having to realign strings if the "
"length of the first line changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:51
msgid ""
"Use single quotes for strings, or a double quote if the string contains a "
"single quote. Don't waste time doing unrelated refactoring of existing code "
"to conform to this style."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:55
msgid "Avoid use of \"we\" in comments, e.g. \"Loop over\" rather than \"We loop over\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:57
msgid ""
"Use underscores, not camelCase, for variable, function and method names "
"(i.e. ``poll.get_unique_voters()``, not ``poll.getUniqueVoters()``)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:60
msgid ""
"Use ``InitialCaps`` for class names (or for factory functions that return "
"classes)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:63
msgid "In docstrings, follow the style of existing docstrings and :pep:`257`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:65
msgid ""
"In tests, use :meth:`~django.test.SimpleTestCase.assertRaisesMessage` and "
":meth:`~django.test.SimpleTestCase.assertWarnsMessage` instead of "
":meth:`~unittest.TestCase.assertRaises` and "
":meth:`~unittest.TestCase.assertWarns` so you can check the exception or "
"warning message. Use :meth:`~unittest.TestCase.assertRaisesRegex` and "
":meth:`~unittest.TestCase.assertWarnsRegex` only if you need regular "
"expression matching."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:74
msgid ""
"Use :meth:`assertIs(…, True/False)<unittest.TestCase.assertIs>` for testing "
"boolean values, rather than :meth:`~unittest.TestCase.assertTrue` and "
":meth:`~unittest.TestCase.assertFalse`, so you can check the actual boolean "
"value, not the truthiness of the expression."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:79
msgid ""
"In test docstrings, state the expected behavior that each test demonstrates."
" Don't include preambles such as \"Tests that\" or \"Ensures that\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:82
msgid ""
"Reserve ticket references for obscure issues where the ticket has additional"
" details that can't be easily described in docstrings or comments. Include "
"the ticket number at the end of a sentence like this::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:95
msgid "Imports"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:97
msgid ""
"Use `isort <https://github.com/timothycrosley/isort#readme>`_ to automate "
"import sorting using the guidelines below."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:100
msgid "Quick start:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:107
msgid ""
"This runs ``isort`` recursively from your current directory, modifying any "
"files that don't conform to the guidelines. If you need to have imports out "
"of order (to avoid a circular import, for example) use a comment like this::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:113
msgid ""
"Put imports in these groups: future, standard library, third-party "
"libraries, other Django components, local Django component, try/excepts. "
"Sort lines in each group alphabetically by the full module name. Place all "
"``import module`` statements before ``from module import objects`` in each "
"section. Use absolute imports for other Django components and relative "
"imports for local components."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:119
msgid ""
"On each line, alphabetize the items with the upper case items grouped before"
" the lowercase items."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:122
msgid ""
"Break long lines using parentheses and indent continuation lines by 4 "
"spaces. Include a trailing comma after the last import and put the closing "
"parenthesis on its own line."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:126
msgid ""
"Use a single blank line between the last import and any module level code, "
"and use two blank lines above the first function or class."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:129
msgid "For example (comments are for explanatory purposes only):"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:131
msgid "django/contrib/admin/example.py"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:166
msgid "Use convenience imports whenever available. For example, do this::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:170
msgid "instead of::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:175
msgid "Template style"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:177
msgid ""
"In Django template code, put one (and only one) space between the curly "
"brackets and the tag contents."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:180
msgid "Do this:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:186
msgid "Don't do this:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:193
msgid "View style"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:195
msgid ""
"In Django views, the first parameter in a view function should be called "
"``request``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:198
#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:214
#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:229
msgid "Do this::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:203
#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:220
#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:238
msgid "Don't do this::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:209
msgid "Model style"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:211
msgid ""
"Field names should be all lowercase, using underscores instead of camelCase."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:226
msgid ""
"The ``class Meta`` should appear *after* the fields are defined, with a "
"single blank line separating the fields and the class definition."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:246
msgid "Don't do this, either::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:255
msgid ""
"The order of model inner classes and standard methods should be as follows "
"(noting that these are not all required):"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:258
msgid "All database fields"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:259
msgid "Custom manager attributes"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:260
msgid "``class Meta``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:261
msgid "``def __str__()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:262
msgid "``def save()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:263
msgid "``def get_absolute_url()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:264
msgid "Any custom methods"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:266
msgid ""
"If ``choices`` is defined for a given model field, define each choice as a "
"list of tuples, with an all-uppercase name as a class attribute on the "
"model. Example::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:279
msgid "Use of ``django.conf.settings``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:281
msgid ""
"Modules should not in general use settings stored in "
"``django.conf.settings`` at the top level (i.e. evaluated when the module is"
" imported). The explanation for this is as follows:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:285
msgid ""
"Manual configuration of settings (i.e. not relying on the "
":envvar:`DJANGO_SETTINGS_MODULE` environment variable) is allowed and "
"possible as follows::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:293
msgid ""
"However, if any setting is accessed before the ``settings.configure`` line, "
"this will not work. (Internally, ``settings`` is a ``LazyObject`` which "
"configures itself automatically when the settings are accessed if it has not"
" already been configured)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:298
msgid "So, if there is a module containing some code as follows::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:305
msgid ""
"...then importing this module will cause the settings object to be "
"configured. That means that the ability for third parties to import the "
"module at the top level is incompatible with the ability to configure the "
"settings object manually, or makes it very difficult in some circumstances."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:310
msgid ""
"Instead of the above code, a level of laziness or indirection must be used, "
"such as ``django.utils.functional.LazyObject``, "
"``django.utils.functional.lazy()`` or ``lambda``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:315
msgid "Miscellaneous"
msgstr "その他"

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:317
msgid ""
"Mark all strings for internationalization; see the :doc:`i18n documentation "
"</topics/i18n/index>` for details."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:320
msgid ""
"Remove ``import`` statements that are no longer used when you change code. "
"`flake8`_ will identify these imports for you. If an unused import needs to "
"remain for backwards-compatibility, mark the end of with ``# NOQA`` to "
"silence the flake8 warning."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:325
msgid ""
"Systematically remove all trailing whitespaces from your code as those add "
"unnecessary bytes, add visual clutter to the patches and can also "
"occasionally cause unnecessary merge conflicts. Some IDE's can be configured"
" to automatically remove them and most VCS tools can be set to highlight "
"them in diff outputs."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:331
msgid ""
"Please don't put your name in the code you contribute. Our policy is to keep"
" contributors' names in the ``AUTHORS`` file distributed with Django -- not "
"scattered throughout the codebase itself. Feel free to include a change to "
"the ``AUTHORS`` file in your patch if you make more than a single trivial "
"change."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:338
msgid "JavaScript style"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/coding-style.txt:340
msgid ""
"For details about the JavaScript code style used by Django, see "
":doc:`javascript`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/index.txt:3
msgid "Writing code"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/index.txt:5
msgid ""
"So you'd like to write some code to improve Django. Awesome! Browse the "
"following sections to find out how to give your code patches the best "
"chances to be included in Django core:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:3
msgid "JavaScript"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:5
msgid ""
"While most of Django core is Python, the ``admin`` and ``gis`` contrib apps "
"contain JavaScript code."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:8
msgid ""
"Please follow these coding standards when writing JavaScript code for "
"inclusion in Django."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:12
msgid "Code style"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:14
msgid ""
"Please conform to the indentation style dictated in the ``.editorconfig`` "
"file. We recommend using a text editor with `EditorConfig`_ support to avoid"
" indentation and whitespace issues. Most of the JavaScript files use 4 "
"spaces for indentation, but there are some exceptions."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:19
msgid ""
"When naming variables, use ``camelCase`` instead of ``underscore_case``. "
"Different JavaScript files sometimes use a different code style. Please try "
"to conform to the code style of each file."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:23
msgid ""
"Use the `ESLint`_ code linter to check your code for bugs and style errors. "
"ESLint will be run when you run the JavaScript tests. We also recommended "
"installing a ESLint plugin in your text editor."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:27
msgid ""
"Where possible, write code that will work even if the page structure is "
"later changed with JavaScript. For instance, when binding a click handler, "
"use ``$('body').on('click', selector, func)`` instead of "
"``$(selector).click(func)``. This makes it easier for projects to extend "
"Django's default behavior with JavaScript."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:36
#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:229
msgid "JavaScript patches"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:38
msgid ""
"Django's admin system leverages the jQuery framework to increase the "
"capabilities of the admin interface. In conjunction, there is an emphasis on"
" admin JavaScript performance and minimizing overall admin media file size. "
"Serving compressed or \"minified\" versions of JavaScript files is "
"considered best practice in this regard."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:44
msgid ""
"To that end, patches for JavaScript files should include both the original "
"code for future development (e.g. ``foo.js``), and a compressed version for "
"production use (e.g. ``foo.min.js``). Any links to the file in the codebase "
"should point to the compressed version."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:50
msgid "Compressing JavaScript"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:52
msgid ""
"To simplify the process of providing optimized JavaScript code, Django "
"includes a handy Python script which should be used to create a \"minified\""
" version. To run it:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:60
msgid ""
"Behind the scenes, ``compress.py`` is a front-end for Google's `Closure "
"Compiler`_ which is written in Java. The Closure Compiler library is not "
"bundled with Django, but will be installed automatically by ``npm``. The "
"Closure Compiler library requires `Java`_ 7 or higher."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:65
msgid ""
"Please don't forget to run ``compress.py`` and include the ``diff`` of the "
"minified scripts when submitting patches for Django's JavaScript."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:71
msgid "JavaScript tests"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:73
msgid ""
"Django's JavaScript tests can be run in a browser or from the command line. "
"The tests are located in a top level ``js_tests`` directory."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:77
msgid "Writing tests"
msgstr "テストを書く"

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:79
msgid ""
"Django's JavaScript tests use `QUnit`_. Here is an example test module:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:107
msgid ""
"Please consult the QUnit documentation for information on the types of "
"`assertions supported by QUnit <https://api.qunitjs.com/assert/>`_."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:111
msgid "Running tests"
msgstr "テストの実行"

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:113
msgid ""
"The JavaScript tests may be run from a web browser or from the command line."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:116
msgid "Testing from a web browser"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:118
msgid ""
"To run the tests from a web browser, open up ``js_tests/tests.html`` in your"
" browser."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:121
msgid ""
"To measure code coverage when running the tests, you need to view that file "
"over HTTP. To view code coverage:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:124
msgid ""
"Execute ``python -m http.server`` from the root directory (not from inside "
"``js_tests``)."
msgstr "ルートディレクトリで ``python -m http.server`` を実行してみてください。（ ``js_tests`` の中ではなく）"

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:126
msgid "Open http://localhost:8000/js_tests/tests.html in your web browser."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:129
msgid "Testing from the command line"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:131
msgid ""
"To run the tests from the command line, you need to have `Node.js`_ "
"installed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:133
msgid ""
"After installing ``Node.js``, install the JavaScript test dependencies by "
"running the following from the root of your Django checkout:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/javascript.txt:140
msgid "Then run the tests with:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:3
msgid "Submitting patches"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:5
msgid ""
"We're always grateful for patches to Django's code. Indeed, bug reports with"
" associated patches will get fixed *far* more quickly than those without "
"patches."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:10
msgid "Typo fixes and trivial documentation changes"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:12
msgid ""
"If you are fixing a really trivial issue, for example changing a word in the"
" documentation, the preferred way to provide the patch is using GitHub pull "
"requests without a Trac ticket."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:16
msgid ""
"See the :doc:`working-with-git` for more details on how to use pull "
"requests."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:19
msgid "\"Claiming\" tickets"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:21
msgid ""
"In an open-source project with hundreds of contributors around the world, "
"it's important to manage communication efficiently so that work doesn't get "
"duplicated and contributors can be as effective as possible."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:25
msgid ""
"Hence, our policy is for contributors to \"claim\" tickets in order to let "
"other developers know that a particular bug or feature is being worked on."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:28
msgid ""
"If you have identified a contribution you want to make and you're capable of"
" fixing it (as measured by your coding ability, knowledge of Django "
"internals and time availability), claim it by following these steps:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:32
msgid ""
"`Login using your GitHub account`_ or `create an account`_ in our ticket "
"system. If you have an account but have forgotten your password, you can "
"reset it using the `password reset page`_."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:36
msgid ""
"If a ticket for this issue doesn't exist yet, create one in our `ticket "
"tracker`_."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:39
msgid ""
"If a ticket for this issue already exists, make sure nobody else has claimed"
" it. To do this, look at the \"Owned by\" section of the ticket. If it's "
"assigned to \"nobody,\" then it's available to be claimed. Otherwise, "
"somebody else may be working on this ticket. Either find another bug/feature"
" to work on, or contact the developer working on the ticket to offer your "
"help. If a ticket has been assigned for weeks or months without any "
"activity, it's probably safe to reassign it to yourself."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:47
msgid ""
"Log into your account, if you haven't already, by clicking \"GitHub Login\" "
"or \"DjangoProject Login\" in the upper left of the ticket page."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:50
msgid ""
"Claim the ticket by clicking the \"assign to myself\" radio button under "
"\"Action\" near the bottom of the page, then click \"Submit changes.\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:54
msgid ""
"The Django software foundation requests that anyone contributing more than a"
" trivial patch to Django sign and submit a `Contributor License Agreement`_,"
" this ensures that the Django Software Foundation has clear license to all "
"contributions allowing for a clear license for all users."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:65
msgid "Ticket claimers' responsibility"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:67
msgid ""
"Once you've claimed a ticket, you have a responsibility to work on that "
"ticket in a reasonably timely fashion. If you don't have time to work on it,"
" either unclaim it or don't claim it in the first place!"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:71
msgid ""
"If there's no sign of progress on a particular claimed ticket for a week or "
"two, another developer may ask you to relinquish the ticket claim so that "
"it's no longer monopolized and somebody else can claim it."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:75
msgid ""
"If you've claimed a ticket and it's taking a long time (days or weeks) to "
"code, keep everybody updated by posting comments on the ticket. If you don't"
" provide regular updates, and you don't respond to a request for a progress "
"report, your claim on the ticket may be revoked."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:80
msgid "As always, more communication is better than less communication!"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:83
msgid "Which tickets should be claimed?"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:85
msgid "Going through the steps of claiming tickets is overkill in some cases."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:87
msgid ""
"In the case of small changes, such as typos in the documentation or small "
"bugs that will only take a few minutes to fix, you don't need to jump "
"through the hoops of claiming tickets. Submit your patch directly and you're"
" done!"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:91
msgid ""
"It is *always* acceptable, regardless whether someone has claimed it or not,"
" to submit patches to a ticket if you happen to have a patch ready."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:97
msgid "Patch style"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:99
msgid ""
"Make sure that any contribution you do fulfills at least the following "
"requirements:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:102
msgid ""
"The code required to fix a problem or add a feature is an essential part of "
"a patch, but it is not the only part. A good patch should also include a "
":doc:`regression test <unit-tests>` to validate the behavior that has been "
"fixed and to prevent the problem from arising again. Also, if some tickets "
"are relevant to the code that you've written, mention the ticket numbers in "
"some comments in the test so that one can easily trace back the relevant "
"discussions after your patch gets committed, and the tickets get closed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:110
msgid ""
"If the code associated with a patch adds a new feature, or modifies behavior"
" of an existing feature, the patch should also contain documentation."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:114
msgid ""
"When you think your work is ready to be reviewed, send :doc:`a GitHub pull "
"request <working-with-git>`. Please review the patch yourself using our "
":ref:`patch review checklist <patch-review-checklist>` first."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:118
msgid ""
"If you can't send a pull request for some reason, you can also use patches "
"in Trac. When using this style, follow these guidelines."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:121
msgid "Submit patches in the format returned by the ``git diff`` command."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:123
msgid ""
"Attach patches to a ticket in the `ticket tracker`_, using the \"attach "
"file\" button. Please *don't* put the patch in the ticket description or "
"comment unless it's a single line patch."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:127
msgid ""
"Name the patch file with a ``.diff`` extension; this will let the ticket "
"tracker apply correct syntax highlighting, which is quite helpful."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:130
msgid "Regardless of the way you submit your work, follow these steps."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:132
msgid ""
"Make sure your code fulfills the requirements in our :ref:`patch review "
"checklist <patch-review-checklist>`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:135
msgid ""
"Check the \"Has patch\" box on the ticket and make sure the \"Needs "
"documentation\", \"Needs tests\", and \"Patch needs improvement\" boxes "
"aren't checked. This makes the ticket appear in the \"Patches needing "
"review\" queue on the `Development dashboard`_."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:144
msgid "Non-trivial patches"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:146
msgid ""
"A \"non-trivial\" patch is one that is more than a small bug fix. It's a "
"patch that introduces Django functionality and makes some sort of design "
"decision."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:149
msgid ""
"If you provide a non-trivial patch, include evidence that alternatives have "
"been discussed on |django-developers|."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:152
msgid ""
"If you're not sure whether your patch should be considered non-trivial, ask "
"on the ticket for opinions."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:158
#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:284
msgid "Deprecating a feature"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:160
msgid "There are a couple of reasons that code in Django might be deprecated:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:162
msgid ""
"If a feature has been improved or modified in a backwards-incompatible way, "
"the old feature or behavior will be deprecated."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:165
msgid ""
"Sometimes Django will include a backport of a Python library that's not "
"included in a version of Python that Django currently supports. When Django "
"no longer needs to support the older version of Python that doesn't include "
"the library, the library will be deprecated in Django."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:170
msgid ""
"As the :ref:`deprecation policy<internal-release-deprecation-policy>` "
"describes, the first release of Django that deprecates a feature (``A.B``) "
"should raise a ``RemovedInDjangoXXWarning`` (where XX is the Django version "
"where the feature will be removed) when the deprecated feature is invoked. "
"Assuming we have good test coverage, these warnings are converted to errors "
"when :ref:`running the test suite <running-unit-tests>` with warnings "
"enabled: ``python -Wa runtests.py``. Thus, when adding a "
"``RemovedInDjangoXXWarning`` you need to eliminate or silence any warnings "
"generated when running the tests."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:179
msgid ""
"The first step is to remove any use of the deprecated behavior by Django "
"itself. Next you can silence warnings in tests that actually test the "
"deprecated behavior by using the ``ignore_warnings`` decorator, either at "
"the test or class level:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:184
msgid "In a particular test::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:193
msgid "For an entire test case::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:202
msgid "You can also add a test for the deprecation warning::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:211
msgid ""
"Finally, there are a couple of updates to Django's documentation to make:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:213
msgid ""
"If the existing feature is documented, mark it deprecated in documentation "
"using the ``.. deprecated:: A.B`` annotation. Include a short description "
"and a note about the upgrade path if applicable."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:217
msgid ""
"Add a description of the deprecated behavior, and the upgrade path if "
"applicable, to the current release notes (``docs/releases/A.B.txt``) under "
"the \"Features deprecated in A.B\" heading."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:221
msgid ""
"Add an entry in the deprecation timeline "
"(``docs/internals/deprecation.txt``) under the appropriate version "
"describing what code will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:224
msgid ""
"Once you have completed these steps, you are finished with the deprecation. "
"In each :term:`feature release <Feature release>`, all "
"``RemovedInDjangoXXWarning``\\s matching the new version are removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:231
msgid ""
"For information on JavaScript patches, see the :ref:`javascript-patches` "
"documentation."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:237
msgid "Patch review checklist"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:239
msgid ""
"Use this checklist to review a pull request. If you are reviewing a pull "
"request that is not your own and it passes all the criteria below, please "
"set the \"Triage Stage\" on the corresponding Trac ticket to \"Ready for "
"checkin\". If you've left comments for improvement on the pull request, "
"please tick the appropriate flags on the Trac ticket based on the results of"
" your review: \"Patch needs improvement\", \"Needs documentation\", and/or "
"\"Needs tests\". As time and interest permits, committers do final reviews "
"of \"Ready for checkin\" tickets and will either commit the patch or bump it"
" back to \"Accepted\" if further works need to be done. If you're looking to"
" become a committer, doing thorough reviews of patches is a great way to "
"earn trust."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:250
msgid ""
"Looking for a patch to review? Check out the \"Patches needing review\" "
"section of the `Django Development Dashboard "
"<https://dashboard.djangoproject.com/>`_. Looking to get your patch "
"reviewed? Ensure the Trac flags on the ticket are set so that the ticket "
"appears in that queue."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:258
msgid ""
"Does the documentation build without any errors (``make html``, or "
"``make.bat html`` on Windows, from the ``docs`` directory)?"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:260
msgid ""
"Does the documentation follow the writing style guidelines in "
":doc:`/internals/contributing/writing-documentation`?"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:262
msgid "Are there any :ref:`spelling errors <documentation-spelling-check>`?"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:265
msgid "Bugs"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:267
msgid ""
"Is there a proper regression test (the test should fail before the fix is "
"applied)?"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:269
msgid ""
"If it's a bug that :ref:`qualifies for a backport <supported-versions-"
"policy>` to the stable version of Django, is there a release note in "
"``docs/releases/A.B.C.txt``? Bug fixes that will be applied only to the "
"master branch don't need a release note."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:275
msgid "New Features"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:277
msgid "Are there tests to \"exercise\" all of the new code?"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:278
msgid "Is there a release note in ``docs/releases/A.B.txt``?"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:279
msgid ""
"Is there documentation for the feature and is it :ref:`annotated "
"appropriately <documenting-new-features>` with ``.. versionadded:: A.B`` or "
"``.. versionchanged:: A.B``?"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:286
msgid "See the :ref:`deprecating-a-feature` guide."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:289
msgid "All code changes"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:291
msgid ""
"Does the :doc:`coding style </internals/contributing/writing-code/coding-"
"style>` conform to our guidelines? Are there any ``flake8`` errors?"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:294
msgid ""
"If the change is backwards incompatible in any way, is there a note in the "
"release notes (``docs/releases/A.B.txt``)?"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:296
msgid "Is Django's test suite passing?"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:299
msgid "All tickets"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:301
msgid ""
"Is the pull request a single squashed commit with a message that follows our"
" :ref:`commit message format <committing-guidelines>`?"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/submitting-patches.txt:303
msgid ""
"Are you the patch author and a new contributor? Please add yourself to the "
"``AUTHORS`` file and submit a `Contributor License Agreement`_."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:3
msgid "Unit tests"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:5
msgid ""
"Django comes with a test suite of its own, in the ``tests`` directory of the"
" code base. It's our policy to make sure all tests pass at all times."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:8
msgid "We appreciate any and all contributions to the test suite!"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:10
msgid ""
"The Django tests all use the testing infrastructure that ships with Django "
"for testing applications. See :doc:`/topics/testing/overview` for an "
"explanation of how to write new tests."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:17
msgid "Running the unit tests"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:20
msgid "Quickstart"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:22
msgid ""
"First, `fork Django on GitHub <https://github.com/django/django/fork>`__."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:24
msgid ""
"Second, create and activate a virtual environment. If you're not familiar "
"with how to do that, read our :doc:`contributing tutorial "
"</intro/contributing>`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:27
msgid "Next, clone your fork, install some requirements, and run the tests:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:37
msgid ""
"Installing the requirements will likely require some operating system "
"packages that your computer doesn't have installed. You can usually figure "
"out which package to install by doing a Web search for the last line or so "
"of the error message. Try adding your operating system to the search query "
"if needed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:42
msgid ""
"If you have trouble installing the requirements, you can skip that step. See"
" :ref:`running-unit-tests-dependencies` for details on installing the "
"optional test dependencies. If you don't have an optional dependency "
"installed, the tests that require it will be skipped."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:47
msgid ""
"Running the tests requires a Django settings module that defines the "
"databases to use. To help you get started, Django provides and uses a sample"
" settings module that uses the SQLite database. See :ref:`running-unit-"
"tests-settings` to learn how to use a different settings module to run the "
"tests with a different database."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:53
msgid ""
"Having problems? See :ref:`troubleshooting-unit-tests` for some common "
"issues."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:56
msgid "Running tests using ``tox``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:58
msgid ""
"`Tox <https://tox.readthedocs.io/>`_ is a tool for running tests in "
"different virtual environments. Django includes a basic ``tox.ini`` that "
"automates some checks that our build server performs on pull requests. To "
"run the unit tests and other checks (such as :ref:`import sorting <coding-"
"style-imports>`, the :ref:`documentation spelling checker <documentation-"
"spelling-check>`, and :ref:`code formatting <coding-style-python>`), install"
" and run the ``tox`` command from any place in the Django source tree:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:71
msgid ""
"By default, ``tox`` runs the test suite with the bundled test settings file "
"for SQLite, ``flake8``, ``isort``, and the documentation spelling checker. "
"In addition to the system dependencies noted elsewhere in this "
"documentation, the command ``python3`` must be on your path and linked to "
"the appropriate version of Python. A list of default environments can be "
"seen as follows:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:86
msgid "Testing other Python versions and database backends"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:88
msgid ""
"In addition to the default environments, ``tox`` supports running unit tests"
" for other versions of Python and other database backends. Since Django's "
"test suite doesn't bundle a settings file for database backends other than "
"SQLite, however, you must :ref:`create and provide your own test settings "
"<running-unit-tests-settings>`. For example, to run the tests on Python 3.7 "
"using PostgreSQL:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:99
msgid ""
"This command sets up a Python 3.7 virtual environment, installs Django's "
"test suite dependencies (including those for PostgreSQL), and calls "
"``runtests.py`` with the supplied arguments (in this case, "
"``--settings=my_postgres_settings``)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:104
msgid ""
"The remainder of this documentation shows commands for running tests without"
" ``tox``, however, any option passed to ``runtests.py`` can also be passed "
"to ``tox`` by prefixing the argument list with ``--``, as above."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:108
msgid ""
"Tox also respects the :envvar:`DJANGO_SETTINGS_MODULE` environment variable,"
" if set. For example, the following is equivalent to the command above:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:115
msgid "Windows users should use:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:123
msgid "Running the JavaScript tests"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:125
msgid ""
"Django includes a set of :ref:`JavaScript unit tests <javascript-tests>` for"
" functions in certain contrib apps. The JavaScript tests aren't run by "
"default using ``tox`` because they require ``Node.js`` to be installed and "
"aren't necessary for the majority of patches. To run the JavaScript tests "
"using ``tox``:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:135
msgid ""
"This command runs ``npm install`` to ensure test requirements are up to date"
" and then runs ``npm test``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:139
msgid "Running tests using ``django-docker-box``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:141
msgid ""
"`django-docker-box`_ allows you to run the Django's test suite across all "
"supported databases and python versions. See the `django-docker-box`_ "
"project page for installation and usage instructions."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:150
msgid "Using another ``settings`` module"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:152
msgid ""
"The included settings module (``tests/test_sqlite.py``) allows you to run "
"the test suite using SQLite. If you want to run the tests using a different "
"database, you'll need to define your own settings file. Some tests, such as "
"those for ``contrib.postgres``, are specific to a particular database "
"backend and will be skipped if run with a different backend."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:158
msgid ""
"To run the tests with different settings, ensure that the module is on your "
":envvar:`PYTHONPATH` and pass the module with ``--settings``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:161
msgid ""
"The :setting:`DATABASES` setting in any test settings module needs to define"
" two databases:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:164
msgid ""
"A ``default`` database. This database should use the backend that you want "
"to use for primary testing."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:167
msgid ""
"A database with the alias ``other``. The ``other`` database is used to test "
"that queries can be directed to different databases. This database should "
"use the same backend as the ``default``, and it must have a different name."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:171
msgid ""
"If you're using a backend that isn't SQLite, you will need to provide other "
"details for each database:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:174
msgid ""
"The :setting:`USER` option needs to specify an existing user account for the"
" database. That user needs permission to execute ``CREATE DATABASE`` so that"
" the test database can be created."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:178
msgid ""
"The :setting:`PASSWORD` option needs to provide the password for the "
":setting:`USER` that has been specified."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:181
msgid ""
"Test databases get their names by prepending ``test_`` to the value of the "
":setting:`NAME` settings for the databases defined in :setting:`DATABASES`. "
"These test databases are deleted when the tests are finished."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:185
msgid ""
"You will also need to ensure that your database uses UTF-8 as the default "
"character set. If your database server doesn't use UTF-8 as a default "
"charset, you will need to include a value for :setting:`CHARSET "
"<TEST_CHARSET>` in the test settings dictionary for the applicable database."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:193
msgid "Running only some of the tests"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:195
msgid ""
"Django's entire test suite takes a while to run, and running every single "
"test could be redundant if, say, you just added a test to Django that you "
"want to run quickly without running everything else. You can run a subset of"
" the unit tests by appending the names of the test modules to "
"``runtests.py`` on the command line."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:201
msgid ""
"For example, if you'd like to run tests only for generic relations and "
"internationalization, type:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:208
msgid ""
"How do you find out the names of individual tests? Look in ``tests/`` — each"
" directory name there is the name of a test."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:211
msgid ""
"If you want to run only a particular class of tests, you can specify a list "
"of paths to individual test classes. For example, to run the "
"``TranslationTests`` of the ``i18n`` module, type:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:219
msgid ""
"Going beyond that, you can specify an individual test method like this:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:225
msgid ""
"You can run tests starting at a specified top-level module with ``--start-"
"at`` option. For example:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:232
msgid ""
"You can also run tests starting after a specified top-level module with "
"``--start-after`` option. For example:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:239
msgid ""
"Note that the ``--reverse`` option doesn't impact on ``--start-at`` or "
"``--start-after`` options. Moreover these options cannot be used with test "
"labels."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:244
msgid "Running the Selenium tests"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:246
msgid ""
"Some tests require Selenium and a Web browser. To run these tests, you must "
"install the selenium_ package and run the tests with the "
"``--selenium=<BROWSERS>`` option. For example, if you have Firefox and "
"Google Chrome installed:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:255
msgid ""
"See the `selenium.webdriver`_ package for the list of available browsers."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:257
msgid ""
"Specifying ``--selenium`` automatically sets ``--tags=selenium`` to run only"
" the tests that require selenium."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:260
msgid ""
"Some browsers (e.g. Chrome or Firefox) support headless testing, which can "
"be faster and more stable. Add the ``--headless`` option to enable this "
"mode."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:268
msgid "Running all the tests"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:270
msgid ""
"If you want to run the full suite of tests, you'll need to install a number "
"of dependencies:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:273
msgid "argon2-cffi_ 16.1.0+"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:274
msgid "asgiref_ 3.2.10+ (required)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:275
msgid "bcrypt_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:276
msgid "docutils_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:277
msgid "geoip2_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:278
msgid "jinja2_ 2.7+"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:279
msgid "numpy_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:280
msgid "Pillow_ 6.2.0+"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:281
msgid "PyYAML_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:282
msgid "pytz_ (required)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:283
msgid "pywatchman_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:284
msgid "setuptools_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:285
msgid "memcached_, plus a :ref:`supported Python binding <memcached>`"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:286
msgid "gettext_ (:ref:`gettext_on_windows`)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:287
msgid "selenium_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:288
msgid "sqlparse_ 0.2.2+ (required)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:289
msgid "tblib_ 1.5.0+"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:291
msgid ""
"You can find these dependencies in `pip requirements files`_ inside the "
"``tests/requirements`` directory of the Django source tree and install them "
"like so:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:299
msgid ""
"If you encounter an error during the installation, your system might be "
"missing a dependency for one or more of the Python packages. Consult the "
"failing package's documentation or search the Web with the error message "
"that you encounter."
msgstr "もしこのインストールの間にエラーが発生した場合は、システムが Python のパッケージのうちの 1 つ、もしくはそれ以上の依存関係を見失っている可能性があります。失敗したパッケージの資料を調べるか、発生したエラーメッセージを Web で検索してください。"

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:304
msgid ""
"You can also install the database adapter(s) of your choice using "
"``oracle.txt``, ``mysql.txt``, or ``postgres.txt``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:307
msgid ""
"If you want to test the memcached cache backend, you'll also need to define "
"a :setting:`CACHES` setting that points at your memcached instance."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:310
msgid ""
"To run the GeoDjango tests, you will need to :doc:`setup a spatial database "
"and install the Geospatial libraries</ref/contrib/gis/install/index>`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:313
msgid ""
"Each of these dependencies is optional. If you're missing any of them, the "
"associated tests will be skipped."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:316
msgid ""
"To run some of the autoreload tests, you'll need to install the Watchman_ "
"service."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:340
msgid "Code coverage"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:342
msgid ""
"Contributors are encouraged to run coverage on the test suite to identify "
"areas that need additional tests. The coverage tool installation and use is "
"described in :ref:`testing code coverage<topics-testing-code-coverage>`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:346
msgid ""
"Coverage should be run in a single process to obtain accurate statistics. To"
" run coverage on the Django test suite using the standard test settings:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:353
msgid "After running coverage, generate the html report by running:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:359
msgid ""
"When running coverage for the Django tests, the included ``.coveragerc`` "
"settings file  defines ``coverage_html`` as the output directory for the "
"report and also excludes several directories not relevant to the results "
"(test code or external code included in Django)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:367
msgid "Contrib apps"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:369
msgid ""
"Tests for contrib apps can be found in the ``tests/`` directory, typically "
"under ``<app_name>_tests``. For example, tests for ``contrib.auth`` are "
"located in ``tests/auth_tests``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:376
msgid "Troubleshooting"
msgstr "トラブルシューティング"

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:379
msgid "Test suite hangs or shows failures on ``master`` branch"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:381
msgid ""
"Ensure you have the latest point release of a :ref:`supported Python version"
" <faq-python-version-support>`, since there are often bugs in earlier "
"versions that may cause the test suite to fail or hang."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:385
msgid ""
"On **macOS** (High Sierra and newer versions), you might see this message "
"logged, after which the tests hang::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:391
msgid ""
"To avoid this set a ``OBJC_DISABLE_INITIALIZE_FORK_SAFETY`` environment "
"variable, for example::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:396
msgid ""
"Or add ``export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES`` to your shell's "
"startup file (e.g. ``~/.profile``)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:400
msgid "Many test failures with ``UnicodeEncodeError``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:402
msgid ""
"If the ``locales`` package is not installed, some tests will fail with a "
"``UnicodeEncodeError``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:405
msgid "You can resolve this on Debian-based systems, for example, by running:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:412
msgid ""
"You can resolve this for macOS systems by configuring your shell's locale:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:419
msgid ""
"Run the ``locale`` command to confirm the change. Optionally, add those "
"export commands to your shell's startup file (e.g. ``~/.bashrc`` for Bash) "
"to avoid having to retype them."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:424
msgid "Tests that only fail in combination"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:426
msgid ""
"In case a test passes when run in isolation but fails within the whole "
"suite, we have some tools to help analyze the problem."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:429
msgid ""
"The ``--bisect`` option of ``runtests.py`` will run the failing test while "
"halving the test set it is run together with on each iteration, often making"
" it possible to identify a small number of tests that may be related to the "
"failure."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:434
msgid ""
"For example, suppose that the failing test that works on its own is "
"``ModelTest.test_eq``, then using:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:441
msgid ""
"will try to determine a test that interferes with the given one. First, the "
"test is run with the first half of the test suite. If a failure occurs, the "
"first half of the test suite is split in two groups and each group is then "
"run with the specified test. If there is no failure with the first half of "
"the test suite, the second half of the test suite is run with the specified "
"test and split appropriately as described earlier. The process repeats until"
" the set of failing tests is minimized."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:449
msgid ""
"The ``--pair`` option runs the given test alongside every other test from "
"the suite, letting you check if another test has side-effects that cause the"
" failure. So:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:457
msgid "will pair ``test_eq`` with every test label."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:459
msgid ""
"With both ``--bisect`` and ``--pair``, if you already suspect which cases "
"might be responsible for the failure, you may limit tests to be cross-"
"analyzed by :ref:`specifying further test labels <runtests-specifying-"
"labels>` after the first one:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:468
msgid ""
"You can also try running any set of tests in reverse using the ``--reverse``"
" option in order to verify that executing tests in a different order does "
"not cause any trouble:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:477
msgid "Seeing the SQL queries run during a test"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:479
msgid ""
"If you wish to examine the SQL being run in failing tests, you can turn on "
":ref:`SQL logging <django-db-logger>` using the ``--debug-sql`` option. If "
"you combine this with ``--verbosity=2``, all SQL queries will be output:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:488
msgid "Seeing the full traceback of a test failure"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:490
msgid ""
"By default tests are run in parallel with one process per core. When the "
"tests are run in parallel, however, you'll only see a truncated traceback "
"for any test failures. You can adjust this behavior with the ``--parallel`` "
"option:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:498
msgid ""
"You can also use the :envvar:`DJANGO_TEST_PROCESSES` environment variable "
"for this purpose."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:502
msgid "Tips for writing tests"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:507
msgid "Isolating model registration"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:509
msgid ""
"To avoid polluting the global :attr:`~django.apps.apps` registry and prevent"
" unnecessary table creation, models defined in a test method should be bound"
" to a temporary ``Apps`` instance::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:528
msgid ""
"Since this pattern involves a lot of boilerplate, Django provides the "
":func:`~django.test.utils.isolate_apps` decorator. It's used like this::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:542
msgid "Setting ``app_label``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:544
msgid ""
"Models defined in a test method with no explicit "
":attr:`~django.db.models.Options.app_label` are automatically assigned the "
"label of the app in which their test class is located."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:548
msgid ""
"In order to make sure the models defined within the context of "
":func:`~django.test.utils.isolate_apps` instances are correctly installed, "
"you should pass the set of targeted ``app_label`` as arguments:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:552
msgid "tests/app_label/tests.py"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:571
msgid "The decorator can also be applied to classes::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:584
msgid ""
"The temporary ``Apps`` instance used to isolate model registration can be "
"retrieved as an attribute when used as a class decorator by using the "
"``attr_name`` parameter::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/unit-tests.txt:599
msgid ""
"Or as an argument on the test method when used as a method decorator by "
"using the ``kwarg_name`` parameter::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:3
msgid "Working with Git and GitHub"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:5
msgid ""
"This section explains how the community can contribute code to Django via "
"pull requests. If you're interested in how committers handle them, see :doc"
":`../committing-code`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:9
msgid ""
"Below, we are going to show how to create a GitHub pull request containing "
"the changes for Trac ticket #xxxxx. By creating a fully-ready pull request, "
"you will make the reviewer's job easier, meaning that your work is more "
"likely to be merged into Django."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:14
msgid ""
"You could also upload a traditional patch to Trac, but it's less practical "
"for reviews."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:18
msgid "Installing Git"
msgstr "Git のインストール"

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:20
msgid ""
"Django uses `Git`_ for its source control. You can `download <https://git-"
"scm.com/download>`_ Git, but it's often easier to install with your "
"operating system's package manager."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:24
msgid ""
"Django's `Git repository`_ is hosted on `GitHub`_, and it is recommended "
"that you also work using GitHub."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:27
msgid ""
"After installing Git, the first thing you should do is setup your name and "
"email::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:33
msgid ""
"Note that ``user.name`` should be your real name, not your GitHub nick. "
"GitHub should know the email you use in the ``user.email`` field, as this "
"will be used to associate your commits with your GitHub account."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:42
msgid "Setting up local repository"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:44
msgid ""
"When you have created your GitHub account, with the nick \"GitHub_nick\", "
"and `forked Django's repository <https://github.com/django/django/fork>`__, "
"create a local copy of your fork::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:50
msgid ""
"This will create a new directory \"django\", containing a clone of your "
"GitHub repository. The rest of the git commands on this page need to be run "
"within the cloned directory, so switch to it now::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:56
msgid "Your GitHub repository will be called \"origin\" in Git."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:58
msgid ""
"You should also setup ``django/django`` as an \"upstream\" remote (that is, "
"tell git that the reference Django repository was the source of your fork of"
" it)::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:64
msgid "You can add other remotes similarly, for example::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:69
msgid "Working on a ticket"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:71
msgid ""
"When working on a ticket, create a new branch for the work, and base that "
"work on upstream/master::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:76
msgid ""
"The -b flag creates a new branch for you locally. Don't hesitate to create "
"new branches even for the smallest things - that's what they are there for."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:79
msgid ""
"If instead you were working for a fix on the 1.4 branch, you would do::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:83
msgid ""
"Assume the work is carried on the ticket_xxxxx branch. Make some changes and"
" commit them::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:88
msgid ""
"When writing the commit message, follow the :ref:`commit message guidelines "
"<committing-guidelines>` to ease the work of the committer. If you're "
"uncomfortable with English, try at least to describe precisely what the "
"commit does."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:93
msgid ""
"If you need to do additional work on your branch, commit as often as "
"necessary::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:99
msgid "Publishing work"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:101
msgid "You can publish your work on GitHub by running::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:105
msgid ""
"When you go to your GitHub page, you will notice a new branch has been "
"created."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:107
msgid ""
"If you are working on a Trac ticket, you should mention in the ticket that "
"your work is available from branch ticket_xxxxx of your GitHub repo. Include"
" a link to your branch."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:111
msgid ""
"Note that the above branch is called a \"topic branch\" in Git parlance. You"
" are free to rewrite the history of this branch, by using ``git rebase`` for"
" example. Other people shouldn't base their work on such a branch, because "
"their clone would become corrupt when you edit commits."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:116
msgid ""
"There are also \"public branches\". These are branches other people are "
"supposed to fork, so the history of these branches should never change. Good"
" examples of public branches are the ``master`` and ``stable/A.B.x`` "
"branches in the ``django/django`` repository."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:121
msgid ""
"When you think your work is ready to be pulled into Django, you should "
"create a pull request at GitHub. A good pull request means:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:124
msgid ""
"commits with one logical change in each, following the :doc:`coding style "
"<coding-style>`,"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:127
msgid ""
"well-formed messages for each commit: a summary line and then paragraphs "
"wrapped at 72 characters thereafter -- see the :ref:`committing guidelines "
"<committing-guidelines>` for more details,"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:131
msgid ""
"documentation and tests, if needed -- actually tests are always needed, "
"except for documentation changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:134
msgid ""
"The test suite must pass and the documentation must build without warnings."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:136
msgid ""
"Once you have created your pull request, you should add a comment in the "
"related Trac ticket explaining what you've done. In particular, you should "
"note the environment in which you ran the tests, for instance: \"all tests "
"pass under SQLite and MySQL\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:141
msgid ""
"Pull requests at GitHub have only two states: open and closed. The committer"
" who will deal with your pull request has only two options: merge it or "
"close it. For this reason, it isn't useful to make a pull request until the "
"code is ready for merging -- or sufficiently close that a committer will "
"finish it himself."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:148
msgid "Rebasing branches"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:150
msgid ""
"In the example above, you created two commits, the \"Fixed ticket_xxxxx\" "
"commit and \"Added two more tests\" commit."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:153
msgid ""
"We do not want to have the entire history of your working process in your "
"repository. Your commit \"Added two more tests\" would be unhelpful noise. "
"Instead, we would rather only have one commit containing all your work."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:157
msgid ""
"To rework the history of your branch you can squash the commits into one by "
"using interactive rebase::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:162
msgid ""
"The HEAD~2 above is shorthand for two latest commits. The above command will"
" open an editor showing the two commits, prefixed with the word \"pick\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:165
msgid ""
"Change \"pick\" on the second line to \"squash\" instead. This will keep the"
" first commit, and squash the second commit into the first one. Save and "
"quit the editor. A second editor window should open, so you can reword the "
"commit message for the commit now that it includes both your steps."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:170
msgid ""
"You can also use the \"edit\" option in rebase. This way you can change a "
"single commit, for example to fix a typo in a docstring::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:182
msgid ""
"If your topic branch is already published at GitHub, for example if you're "
"making minor changes to take into account a review, you will need to force-"
"push the changes::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:188
msgid ""
"Note that this will rewrite history of ticket_xxxxx - if you check the "
"commit hashes before and after the operation at GitHub you will notice that "
"the commit hashes do not match anymore. This is acceptable, as the branch is"
" a topic branch, and nobody should be basing their work on it."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:194
msgid "After upstream has changed"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:196
msgid ""
"When upstream (``django/django``) has changed, you should rebase your work. "
"To do this, use::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:202
msgid ""
"The work is automatically rebased using the branch you forked on, in the "
"example case using ``upstream/master``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:205
msgid ""
"The rebase command removes all your local commits temporarily, applies the "
"upstream commits, and then applies your local commits again on the work."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:208
msgid ""
"If there are merge conflicts, you will need to resolve them and then use "
"``git rebase --continue``. At any point you can use ``git rebase --abort`` "
"to return to the original state."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:212
msgid "Note that you want to *rebase* on upstream, not *merge* the upstream."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:214
msgid ""
"The reason for this is that by rebasing, your commits will always be *on top"
" of* the upstream's work, not *mixed in with* the changes in the upstream. "
"This way your branch will contain only commits related to its topic, which "
"makes squashing easier."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:220
msgid "After review"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:222
msgid ""
"It is unusual to get any non-trivial amount of code into core without "
"changes requested by reviewers. In this case, it is often a good idea to add"
" the changes as one incremental commit to your work. This allows the "
"reviewer to easily check what changes you have done."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:227
msgid ""
"In this case, do the changes required by the reviewer. Commit as often as "
"necessary. Before publishing the changes, rebase your work. If you added two"
" commits, you would run::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:233
msgid ""
"Squash the second commit into the first. Write a commit message along the "
"lines of::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:241
msgid ""
"Finally, push your work back to your GitHub repository. Since you didn't "
"touch the public commits during the rebase, you should not need to force-"
"push::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:246
msgid "Your pull request should now contain the new commit too."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:248
msgid ""
"Note that the committer is likely to squash the review commit into the "
"previous commit when committing the code."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:252
msgid "Working on a patch"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:254
msgid ""
"One of the ways that developers can contribute to Django is by reviewing "
"patches. Those patches will typically exist as pull requests on GitHub and "
"can be easily integrated into your local repository::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:261
msgid ""
"This will create a new branch and then apply the changes from the pull "
"request to it. At this point you can run the tests or do anything else you "
"need to do to investigate the quality of the patch."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:265
msgid ""
"For more detail on working with pull requests see the :ref:`guidelines for "
"committers <handling-pull-requests>`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:269
msgid "Summary"
msgstr "概要"

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:271
msgid "Work on GitHub if you can."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:272
msgid ""
"Announce your work on the Trac ticket by linking to your GitHub branch."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:273
msgid "When you have something ready, make a pull request."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:274
msgid "Make your pull requests as good as you can."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:275
msgid ""
"When doing fixes to your work, use ``git rebase -i`` to squash the commits."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-code/working-with-git.txt:276
msgid "When upstream has changed, do ``git fetch upstream; git rebase``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:3
msgid "Writing documentation"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:5
msgid ""
"We place a high importance on consistency and readability of documentation. "
"After all, Django was created in a journalism environment! So we treat our "
"documentation like we treat our code: we aim to improve it as often as "
"possible."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:10
msgid "Documentation changes generally come in two forms:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:12
msgid ""
"General improvements: typo corrections, error fixes and better explanations "
"through clearer writing and more examples."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:15
msgid ""
"New features: documentation of features that have been added to the "
"framework since the last release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:18
msgid ""
"This section explains how writers can craft their documentation changes in "
"the most useful and least error-prone ways."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:22
msgid "Getting the raw documentation"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:24
msgid ""
"Though Django's documentation is intended to be read as HTML at "
"https://docs.djangoproject.com/, we edit it as a collection of text files "
"for maximum flexibility. These files live in the top-level ``docs/`` "
"directory of a Django release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:29
msgid ""
"If you'd like to start contributing to our docs, get the development version"
" of Django from the source code repository (see :ref:`installing-"
"development-version`). The development version has the latest-and-greatest "
"documentation, just as it has latest-and-greatest code. We also backport "
"documentation fixes and improvements, at the discretion of the committer, to"
" the last release branch. That's because it's highly advantageous to have "
"the docs for the last release be up-to-date and correct (see :ref"
":`differences-between-doc-versions`)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:39
msgid "Getting started with Sphinx"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:41
msgid ""
"Django's documentation uses the Sphinx__ documentation system, which in turn"
" is based on docutils__. The basic idea is that lightly-formatted plain-text"
" documentation is transformed into HTML, PDF, and any other output format."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:48
msgid "To build the documentation locally, install Sphinx:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:54
msgid "Then from the ``docs`` directory, build the HTML:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:60
msgid ""
"To get started contributing, you'll want to read the :ref:`reStructuredText "
"reference <sphinx:rst-index>`."
msgstr "貢献を開始するにあたり、 :ref:`reStructuredText reference <sphinx:rst-index>` を読みたくなるでしょう。"

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:63
msgid ""
"Your locally-built documentation will be themed differently than the "
"documentation at `docs.djangoproject.com <https://docs.djangoproject.com>`_."
" This is OK! If your changes look good on your local machine, they'll look "
"good on the website."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:69
msgid "How the documentation is organized"
msgstr "ドキュメントの構成"

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:71
msgid "The documentation is organized into several categories:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:73
msgid ""
":doc:`Tutorials </intro/index>` take the reader by the hand through a series"
" of steps to create something."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:76
msgid ""
"The important thing in a tutorial is to help the reader achieve something "
"useful, preferably as early as possible, in order to give them confidence."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:79
msgid ""
"Explain the nature of the problem we're solving, so that the reader "
"understands what we're trying to achieve. Don't feel that you need to begin "
"with explanations of how things work - what matters is what the reader does,"
" not what you explain. It can be helpful to refer back to what you've done "
"and explain afterwards."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:85
msgid ""
":doc:`Topic guides </topics/index>` aim to explain a concept or subject at a"
" fairly high level."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:88
msgid ""
"Link to reference material rather than repeat it. Use examples and don't be "
"reluctant to explain things that seem very basic to you - it might be the "
"explanation someone else needs."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:92
msgid ""
"Providing background context helps a newcomer connect the topic to things "
"that they already know."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:95
msgid ""
":doc:`Reference guides </ref/index>` contain technical reference for APIs. "
"They describe the functioning of Django's internal machinery and instruct in"
" its use."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:99
msgid ""
"Keep reference material tightly focused on the subject. Assume that the "
"reader already understands the basic concepts involved but needs to know or "
"be reminded of how Django does it."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:103
msgid ""
"Reference guides aren't the place for general explanation. If you find "
"yourself explaining basic concepts, you may want to move that material to a "
"topic guide."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:107
msgid ""
":doc:`How-to guides </howto/index>` are recipes that take the reader through"
" steps in key subjects."
msgstr ":doc:`How-to ガイド </howto/index>` は鍵となる主題に関して、いくつかのステップを踏んで説明しているレシピ集です。"

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:110
msgid ""
"What matters most in a how-to guide is what a user wants to achieve. A how-"
"to should always be result-oriented rather than focused on internal details "
"of how Django implements whatever is being discussed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:114
msgid ""
"These guides are more advanced than tutorials and assume some knowledge "
"about how Django works. Assume that the reader has followed the tutorials "
"and don't hesitate to refer the reader back to the appropriate tutorial "
"rather than repeat the same material."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:120
msgid "Writing style"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:122
msgid ""
"When using pronouns in reference to a hypothetical person, such as \"a user "
"with a session cookie\", gender neutral pronouns (they/their/them) should be"
" used. Instead of:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:126
msgid "he or she... use they."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:127
msgid "him or her... use them."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:128
msgid "his or her... use their."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:129
msgid "his or hers... use theirs."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:130
msgid "himself or herself... use themselves."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:132
msgid ""
"Try to avoid using words that minimize the difficulty involved in a task or "
"operation, such as \"easily\", \"simply\", \"just\", \"merely\", "
"\"straightforward\", and so on. People's experience may not match your "
"expectations, and they may become frustrated when they do not find a step as"
" \"straightforward\" or \"simple\" as it is implied to be."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:139
msgid "Commonly used terms"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:141
msgid ""
"Here are some style guidelines on commonly used terms throughout the "
"documentation:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:144
msgid ""
"**Django** -- when referring to the framework, capitalize Django. It is "
"lowercase only in Python code and in the djangoproject.com logo."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:147
msgid "**email** -- no hyphen."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:149
msgid "**MySQL**, **PostgreSQL**, **SQLite**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:151
msgid ""
"**SQL** -- when referring to SQL, the expected pronunciation should be \"Ess"
" Queue Ell\" and not \"sequel\". Thus in a phrase like \"Returns an SQL "
"expression\", \"SQL\" should be preceded by \"an\" and not \"a\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:155
msgid "**Python** -- when referring to the language, capitalize Python."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:157
msgid ""
"**realize**, **customize**, **initialize**, etc. -- use the American \"ize\""
" suffix, not \"ise.\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:160
msgid ""
"**subclass** -- it's a single word without a hyphen, both as a verb "
"(\"subclass that model\") and as a noun (\"create a subclass\")."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:163
msgid ""
"**Web**, **World Wide Web**, **the Web** -- note Web is always capitalized "
"when referring to the World Wide Web."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:166
msgid "**website** -- use one word, without capitalization."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:169
msgid "Django-specific terminology"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:171
msgid "**model** -- it's not capitalized."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:173
msgid "**template** -- it's not capitalized."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:175
msgid ""
"**URLconf** -- use three capitalized letters, with no space before \"conf.\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:178
msgid "**view** -- it's not capitalized."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:181
msgid "Guidelines for reStructuredText files"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:183
msgid ""
"These guidelines regulate the format of our reST (reStructuredText) "
"documentation:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:186
msgid "In section titles, capitalize only initial words and proper nouns."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:188
msgid ""
"Wrap the documentation at 80 characters wide, unless a code example is "
"significantly less readable when split over two lines, or for another good "
"reason."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:192
msgid ""
"The main thing to keep in mind as you write and edit docs is that the more "
"semantic markup you can add the better. So::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:197
msgid "Isn't nearly as helpful as::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:201
msgid ""
"This is because Sphinx will generate proper links for the latter, which "
"greatly helps readers."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:204
msgid ""
"You can prefix the target with a ``~`` (that's a tilde) to get only the "
"\"last bit\" of that path. So ``:mod:`~django.contrib.auth``` will display a"
" link with the title \"auth\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:208
msgid ""
"Use :mod:`~sphinx.ext.intersphinx` to reference Python's and Sphinx' "
"documentation."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:211
msgid ""
"Add ``.. code-block:: <lang>`` to literal blocks so that they get "
"highlighted. Prefer relying on automatic highlighting using ``::`` (two "
"colons). This has the benefit that if the code contains some invalid syntax,"
" it won't be highlighted. Adding ``.. code-block:: python``, for example, "
"will force highlighting despite invalid syntax."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:217
msgid ""
"To improve readability, use ``.. admonition:: Descriptive title`` rather "
"than ``.. note::``. Use these boxes sparingly."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:220
msgid "Use these heading styles::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:238
msgid ""
"Use :rst:role:`:rfc:<rfc>` to reference RFC and try to link to the relevant "
"section if possible. For example, use ``:rfc:`2324#section-2.3.2``` or "
"``:rfc:`Custom link text <2324#section-2.3.2>```."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:242
msgid ""
"Use :rst:role:`:pep:<pep>` to reference a Python Enhancement Proposal (PEP) "
"and try to link to the relevant section if possible. For example, use "
"``:pep:`20#easter-egg``` or ``:pep:`Easter Egg <20#easter-egg>```."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:246
msgid ""
"Use :rst:role:`:mimetype:<mimetype>` to refer to a MIME Type unless the "
"value is quoted for a code example."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:249
msgid ""
"Use :rst:role:`:envvar:<envvar>` to refer to an environment variable. You "
"may also need to define a reference to the documentation for that "
"environment variable using :rst:dir:`.. envvar:: <envvar>`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:254
msgid "Django-specific markup"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:256
msgid ""
"Besides :ref:`Sphinx's built-in markup <sphinx:rst-index>`, Django's docs "
"define some extra description units:"
msgstr ":ref:`Sphinx's built-in markup <sphinx:rst-index>` 以外にも、Djangoドキュメントではいくつかの追加拡張を利用しています："

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:259
msgid "Settings::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:263
msgid "To link to a setting, use ``:setting:`INSTALLED_APPS```."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:265
msgid "Template tags::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:269
msgid "To link, use ``:ttag:`regroup```."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:271
msgid "Template filters::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:275
msgid "To link, use ``:tfilter:`linebreaksbr```."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:277
msgid "Field lookups (i.e. ``Foo.objects.filter(bar__exact=whatever)``)::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:281
msgid "To link, use ``:lookup:`exact```."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:283
msgid "``django-admin`` commands::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:287
msgid "To link, use ``:djadmin:`migrate```."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:289
msgid "``django-admin`` command-line options::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:293
msgid ""
"To link, use ``:option:`command_name --traceback``` (or omit "
"``command_name`` for the options shared by all commands like "
"``--verbosity``)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:296
msgid "Links to Trac tickets (typically reserved for patch release notes)::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:300
msgid ""
"Django's documentation uses a custom ``console`` directive for documenting "
"command-line examples involving ``django-admin``, ``manage.py``, ``python``,"
" etc.). In the HTML documentation, it renders a two-tab UI, with one tab "
"showing a Unix-style command prompt and a second tab showing a Windows "
"prompt."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:305
msgid "For example, you can replace this fragment::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:313
msgid "with this one::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:321
msgid "Notice two things:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:323
msgid ""
"You usually will replace occurrences of the ``.. code-block:: console`` "
"directive."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:325
msgid ""
"You don't need to change the actual content of the code example. You still "
"write it assuming a Unix-y environment (i.e. a ``'$'`` prompt symbol, "
"``'/'`` as filesystem path components separator, etc.)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:329
msgid ""
"The example above will render a code example block with two tabs. The first "
"one will show:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:336
msgid ""
"(No changes from what ``.. code-block:: console`` would have rendered)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:338
msgid "The second one will show:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:347
msgid "Documenting new features"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:349
msgid "Our policy for new features is:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:351
msgid ""
"All documentation of new features should be written in a way that clearly "
"designates the features are only available in the Django development "
"version. Assume documentation readers are using the latest release, not the "
"development version."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:356
msgid ""
"Our preferred way for marking new features is by prefacing the features' "
"documentation with: \"``.. versionadded:: X.Y``\", followed by a mandatory "
"blank line and an optional description (indented)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:360
msgid ""
"General improvements, or other changes to the APIs that should be emphasized"
" should use the \"``.. versionchanged:: X.Y``\" directive (with the same "
"format as the ``versionadded`` mentioned above."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:364
msgid ""
"These ``versionadded`` and ``versionchanged`` blocks should be \"self-"
"contained.\" In other words, since we only keep these annotations around for"
" two releases, it's nice to be able to remove the annotation and its "
"contents without having to reflow, reindent, or edit the surrounding text. "
"For example, instead of putting the entire description of a new or changed "
"feature in a block, do something like this::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:385
msgid ""
"Put the changed annotation notes at the bottom of a section, not the top."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:387
msgid ""
"Also, avoid referring to a specific version of Django outside a "
"``versionadded`` or ``versionchanged`` block. Even inside a block, it's "
"often redundant to do so as these annotations render as \"New in Django "
"A.B:\" and \"Changed in Django A.B\", respectively."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:392
msgid ""
"If a function, attribute, etc. is added, it's also okay to use a "
"``versionadded`` annotation like this::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:401
msgid ""
"We can remove the ``.. versionadded:: A.B`` annotation without any "
"indentation changes when the time comes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:405
msgid "Minimizing images"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:407
msgid ""
"Optimize image compression where possible. For PNG files, use OptiPNG and "
"AdvanceCOMP's ``advpng``:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:416
msgid ""
"This is based on OptiPNG version 0.7.5. Older versions may complain about "
"the ``--strip all`` option being lossy."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:420
msgid "An example"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:422
msgid ""
"For a quick example of how it all fits together, consider this hypothetical "
"example:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:425
msgid ""
"First, the ``ref/settings.txt`` document could have an overall layout like "
"this:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:450
msgid ""
"Next, the ``topics/settings.txt`` document could contain something like "
"this:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:462
msgid ""
"We use the Sphinx :rst:role:`doc` cross reference element when we want to "
"link to another document as a whole and the :rst:role:`ref` element when we "
"want to link to an arbitrary location in a document."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:466
msgid "Next, notice how the settings are annotated:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:487
msgid ""
"This marks up the following header as the \"canonical\" target for the "
"setting ``ADMINS``. This means any time I talk about ``ADMINS``, I can "
"reference it using ``:setting:`ADMINS```."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:491
msgid "That's basically how everything fits together."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:496
msgid "Spelling check"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:498
msgid ""
"Before you commit your docs, it's a good idea to run the spelling checker. "
"You'll need to install `sphinxcontrib-spelling <https://pypi.org/project"
"/sphinxcontrib-spelling/>`_ first. Then from the ``docs`` directory, run "
"``make spelling``. Wrong words (if any) along with the file and line number "
"where they occur will be saved to ``_build/spelling/output.txt``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:505
msgid ""
"If you encounter false-positives (error output that actually is correct), do"
" one of the following:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:508
msgid "Surround inline code or brand/technology names with grave accents (`)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:509
msgid "Find synonyms that the spell checker recognizes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:510
msgid ""
"If, and only if, you are sure the word you are using is correct - add it to "
"``docs/spelling_wordlist`` (please keep the list in alphabetical order)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:514
msgid "Translating documentation"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:516
msgid ""
"See :ref:`Localizing the Django documentation <translating-documentation>` "
"if you'd like to help translate the documentation into another language."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:522
msgid "``django-admin`` man page"
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:524
msgid ""
"Sphinx can generate a manual page for the :doc:`django-admin </ref/django-"
"admin>` command. This is configured in ``docs/conf.py``. Unlike other "
"documentation output, this man page should be included in the Django "
"repository and the releases as ``docs/man/django-admin.1``. There isn't a "
"need to update this file when updating the documentation, as it's updated "
"once as part of the release process."
msgstr ""

#: ../../../../sources/3.1/docs/internals/contributing/writing-documentation.txt:531
msgid ""
"To generate an updated version of the man page, run ``make man`` in the "
"``docs`` directory. The new man page will be written in ``docs/_build/man"
"/django-admin.1``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:3
msgid "Django Deprecation Timeline"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:5
msgid ""
"This document outlines when various pieces of Django will be removed or "
"altered in a backward incompatible way, following their deprecation, as per "
"the :ref:`deprecation policy <internal-release-deprecation-policy>`. More "
"details about each item can often be found in the release notes of two "
"versions prior."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:13
msgid "4.0"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:15
msgid ""
"See the :ref:`Django 3.0 release notes <deprecated-features-3.0>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:18
msgid ""
"``django.utils.http.urlquote()``, ``urlquote_plus()``, ``urlunquote()``, and"
" ``urlunquote_plus()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:21
msgid ""
"``django.utils.encoding.force_text()`` and ``smart_text()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:23
msgid ""
"``django.utils.translation.ugettext()``, ``ugettext_lazy()``, "
"``ugettext_noop()``, ``ungettext()``, and ``ungettext_lazy()`` will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:27
msgid ""
"``django.views.i18n.set_language()`` will no longer set the user language in"
" ``request.session`` (key "
"``django.utils.translation.LANGUAGE_SESSION_KEY``)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:30
msgid ""
"``alias=None`` will be required in the signature of "
"``django.db.models.Expression.get_group_by_cols()`` subclasses."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:33
msgid "``django.utils.text.unescape_entities()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:35
msgid "``django.utils.http.is_safe_url()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:37
msgid ""
"See the :ref:`Django 3.1 release notes <deprecated-features-3.1>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:40
msgid "The ``PASSWORD_RESET_TIMEOUT_DAYS`` setting will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:42
msgid ""
"The undocumented usage of the :lookup:`isnull` lookup with non-boolean "
"values as the right-hand side will no longer be allowed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:45
msgid ""
"The ``django.db.models.query_utils.InvalidQuery`` exception class will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:48
msgid "The ``django-admin.py`` entry point will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:50
msgid "The ``HttpRequest.is_ajax()`` method will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:52
msgid ""
"Support for the pre-Django 3.1 encoding format of cookies values used by "
"``django.contrib.messages.storage.cookie.CookieStorage`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:55
msgid ""
"Support for the pre-Django 3.1 password reset tokens in the admin site (that"
" use the SHA-1 hashing algorithm) will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:58
msgid ""
"Support for the pre-Django 3.1 encoding format of sessions will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:60
msgid ""
"Support for the pre-Django 3.1 ``django.core.signing.Signer`` signatures "
"(encoded with the SHA-1 algorithm) will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:63
msgid ""
"Support for the pre-Django 3.1 ``django.core.signing.dumps()`` signatures "
"(encoded with the SHA-1 algorithm) in ``django.core.signing.loads()`` will "
"be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:67
msgid ""
"Support for the pre-Django 3.1 user sessions (that use the SHA-1 algorithm) "
"will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:70
msgid ""
"The ``get_request`` argument for "
"``django.utils.deprecation.MiddlewareMixin.__init__()`` will be required and"
" won't accept ``None``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:74
msgid ""
"The ``providing_args`` argument for ``django.dispatch.Signal`` will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:77
msgid ""
"The ``length`` argument for ``django.utils.crypto.get_random_string()`` will"
" be required."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:80
msgid "The ``list`` message for ``ModelMultipleChoiceField`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:82
msgid ""
"Support for passing raw column aliases to ``QuerySet.order_by()`` will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:85
msgid ""
"The model ``NullBooleanField`` will be removed. A stub field will remain for"
" compatibility with historical migrations."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:88
msgid "``django.conf.urls.url()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:90
msgid ""
"The model ``django.contrib.postgres.fields.JSONField`` will be removed. A "
"stub field will remain for compatibility with historical migrations."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:93
msgid ""
"``django.contrib.postgres.forms.JSONField``, "
"``django.contrib.postgres.fields.jsonb.KeyTransform``, and "
"``django.contrib.postgres.fields.jsonb.KeyTextTransform`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:97
msgid ""
"The ``{% ifequal %}`` and ``{% ifnotequal %}`` template tags will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:99
msgid ""
"The ``DEFAULT_HASHING_ALGORITHM`` transitional setting will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:104
msgid "3.1"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:106
msgid ""
"See the :ref:`Django 2.2 release notes <deprecated-features-2.2>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:109
msgid "``django.utils.timezone.FixedOffset`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:111
msgid "``django.core.paginator.QuerySetPaginator`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:113
msgid ""
"A model's ``Meta.ordering`` will no longer affect ``GROUP BY`` queries."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:115
msgid ""
"``django.contrib.postgres.fields.FloatRangeField`` and "
"``django.contrib.postgres.forms.FloatRangeField`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:118
msgid "The ``FILE_CHARSET`` setting will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:120
msgid ""
"``django.contrib.staticfiles.storage.CachedStaticFilesStorage`` will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:123
msgid ""
"``RemoteUserBackend.configure_user()`` will require ``request`` as the first"
" positional argument."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:126
msgid ""
"Support for ``SimpleTestCase.allow_database_queries`` and "
"``TransactionTestCase.multi_db`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:132
msgid "3.0"
msgstr "3.0"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:134
msgid ""
"See the :ref:`Django 2.0 release notes<deprecated-features-2.0>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:137
msgid "The ``django.db.backends.postgresql_psycopg2`` module will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:139
msgid "``django.shortcuts.render_to_response()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:141
msgid "The ``DEFAULT_CONTENT_TYPE`` setting will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:143
msgid "``HttpRequest.xreadlines()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:145
msgid ""
"Support for the ``context`` argument of ``Field.from_db_value()`` and "
"``Expression.convert_value()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:148
msgid ""
"The ``field_name`` keyword argument of ``QuerySet.earliest()`` and "
"``latest()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:151
msgid ""
"See the :ref:`Django 2.1 release notes <deprecated-features-2.1>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:154
msgid "``django.contrib.gis.db.models.functions.ForceRHR`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:156
msgid "``django.utils.http.cookie_date()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:158
msgid ""
"The ``staticfiles`` and ``admin_static`` template tag libraries will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:161
msgid "``django.contrib.staticfiles.templatetags.static()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:163
msgid ""
"The shim to allow ``InlineModelAdmin.has_add_permission()`` to be defined "
"without an ``obj`` argument will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:169
msgid "2.1"
msgstr "2.1"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:171
msgid ""
"See the :ref:`Django 1.11 release notes<deprecated-features-1.11>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:174
msgid ""
"``contrib.auth.views.login()``, ``logout()``, ``password_change()``, "
"``password_change_done()``, ``password_reset()``, ``password_reset_done()``,"
" ``password_reset_confirm()``, and ``password_reset_complete()`` will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:179
msgid ""
"The ``extra_context`` parameter of "
"``contrib.auth.views.logout_then_login()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:182
msgid "``django.test.runner.setup_databases()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:184
msgid "``django.utils.translation.string_concat()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:186
msgid ""
"``django.core.cache.backends.memcached.PyLibMCCache`` will no longer support"
" passing ``pylibmc`` behavior settings as top-level attributes of "
"``OPTIONS``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:189
msgid ""
"The ``host`` parameter of ``django.utils.http.is_safe_url()`` will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:192
msgid ""
"Silencing of exceptions raised while rendering the ``{% include %}`` "
"template tag will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:195
msgid "``DatabaseIntrospection.get_indexes()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:197
msgid ""
"The ``authenticate()`` method of authentication backends will require "
"``request`` as the first positional argument."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:200
msgid "The ``django.db.models.permalink()`` decorator will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:202
msgid ""
"The ``USE_ETAGS`` setting will be removed. ``CommonMiddleware`` and "
"``django.utils.cache.patch_response_headers()`` will no longer set ETags."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:205
msgid "The ``Model._meta.has_auto_field`` attribute will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:207
msgid ""
"``url()``'s support for inline flags in regular expression groups (``(?i)``,"
" ``(?L)``, ``(?m)``, ``(?s)``, and ``(?u)``) will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:210
msgid ""
"Support for ``Widget.render()`` methods without the ``renderer`` argument "
"will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:216
msgid "2.0"
msgstr "2.0"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:218
msgid ""
"See the :ref:`Django 1.9 release notes<deprecated-features-1.9>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:221
msgid ""
"The ``weak`` argument to ``django.dispatch.signals.Signal.disconnect()`` "
"will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:224
msgid ""
"``django.db.backends.base.BaseDatabaseOperations.check_aggregate_support()``"
" will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:227
msgid "The ``django.forms.extras`` package will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:229
msgid "The ``assignment_tag`` helper will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:231
msgid ""
"The ``host`` argument to ``assertsRedirects`` will be removed. The "
"compatibility layer which allows absolute URLs to be considered equal to "
"relative ones when the path is identical will also be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:235
msgid "``Field.rel`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:237
msgid "``Field.remote_field.to`` attribute will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:239
msgid ""
"The ``on_delete`` argument for ``ForeignKey`` and ``OneToOneField``  will be"
" required."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:242
msgid "``django.db.models.fields.add_lazy_relation()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:244
msgid ""
"When time zone support is enabled, database backends that don't support time"
" zones won't convert aware datetimes to naive values in UTC anymore when "
"such values are passed as parameters to SQL queries executed outside of the "
"ORM, e.g. with ``cursor.execute()``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:249
msgid ""
"The ``django.contrib.auth.tests.utils.skipIfCustomUser()`` decorator will be"
" removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:252
msgid "The ``GeoManager`` and ``GeoQuerySet`` classes will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:254
msgid "The ``django.contrib.gis.geoip`` module will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:256
msgid ""
"The ``supports_recursion`` check for template loaders will be removed from:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:258
msgid "``django.template.engine.Engine.find_template()``"
msgstr "``django.template.engine.Engine.find_template()``"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:259
msgid "``django.template.loader_tags.ExtendsNode.find_template()``"
msgstr "``django.template.loader_tags.ExtendsNode.find_template()``"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:260
msgid "``django.template.loaders.base.Loader.supports_recursion()``"
msgstr "``django.template.loaders.base.Loader.supports_recursion()``"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:261
msgid "``django.template.loaders.cached.Loader.supports_recursion()``"
msgstr "``django.template.loaders.cached.Loader.supports_recursion()``"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:263
msgid ""
"The ``load_template()`` and ``load_template_sources()`` template loader "
"methods will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:266
msgid "The ``template_dirs`` argument for template loaders will be removed:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:268
msgid "``django.template.loaders.base.Loader.get_template()``"
msgstr "``django.template.loaders.base.Loader.get_template()``"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:269
msgid "``django.template.loaders.cached.Loader.cache_key()``"
msgstr "``django.template.loaders.cached.Loader.cache_key()``"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:270
msgid "``django.template.loaders.cached.Loader.get_template()``"
msgstr "``django.template.loaders.cached.Loader.get_template()``"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:271
msgid "``django.template.loaders.cached.Loader.get_template_sources()``"
msgstr "``django.template.loaders.cached.Loader.get_template_sources()``"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:272
msgid "``django.template.loaders.filesystem.Loader.get_template_sources()``"
msgstr "``django.template.loaders.filesystem.Loader.get_template_sources()``"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:274
msgid ""
"The ``django.template.loaders.base.Loader.__call__()`` method will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:277
msgid ""
"Support for custom error views with a single positional parameter will be "
"dropped."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:280
msgid ""
"The ``mime_type`` attribute of ``django.utils.feedgenerator.Atom1Feed`` and "
"``django.utils.feedgenerator.RssFeed`` will be removed in favor of "
"``content_type``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:284
msgid ""
"The ``app_name`` argument to ``django.conf.urls.include()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:287
msgid ""
"Support for passing a 3-tuple as the first argument to ``include()`` will be"
" removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:290
msgid ""
"Support for setting a URL instance namespace without an application "
"namespace will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:293
msgid ""
"``Field._get_val_from_obj()`` will be removed in favor of "
"``Field.value_from_object()``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:296
msgid "``django.template.loaders.eggs.Loader`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:298
msgid ""
"The ``current_app`` parameter to the ``contrib.auth`` views will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:300
msgid ""
"The ``callable_obj`` keyword argument to "
"``SimpleTestCase.assertRaisesMessage()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:303
msgid ""
"Support for the ``allow_tags`` attribute on ``ModelAdmin`` methods will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:306
msgid ""
"The ``enclosure`` keyword argument to ``SyndicationFeed.add_item()`` will be"
" removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:309
msgid ""
"The ``django.template.loader.LoaderOrigin`` and "
"``django.template.base.StringOrigin`` aliases for "
"``django.template.base.Origin`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:313
msgid ""
"See the :ref:`Django 1.10 release notes <deprecated-features-1.10>` for more"
" details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:316
msgid "The ``makemigrations --exit`` option will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:318
msgid ""
"Support for direct assignment to a reverse foreign key or many-to-many "
"relation will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:321
msgid ""
"The ``get_srid()`` and ``set_srid()`` methods of "
"``django.contrib.gis.geos.GEOSGeometry`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:324
msgid ""
"The ``get_x()``, ``set_x()``, ``get_y()``, ``set_y()``, ``get_z()``, and "
"``set_z()`` methods of ``django.contrib.gis.geos.Point`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:327
msgid ""
"The ``get_coords()`` and ``set_coords()`` methods of "
"``django.contrib.gis.geos.Point`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:330
msgid ""
"The ``cascaded_union`` property of ``django.contrib.gis.geos.MultiPolygon`` "
"will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:333
msgid "``django.utils.functional.allow_lazy()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:335
msgid "The ``shell --plain`` option will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:337
msgid "The ``django.core.urlresolvers`` module will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:339
msgid ""
"The model ``CommaSeparatedIntegerField`` will be removed. A stub field will "
"remain for compatibility with historical migrations."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:342
msgid "Support for the template ``Context.has_key()`` method will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:344
msgid ""
"Support for the ``django.core.files.storage.Storage.accessed_time()``, "
"``created_time()``, and ``modified_time()`` methods will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:347
msgid ""
"Support for query lookups using the model name when "
"``Meta.default_related_name`` is set will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:350
msgid ""
"The ``__search`` query lookup and the "
"``DatabaseOperations.fulltext_search_sql()`` method will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:353
msgid ""
"The shim for supporting custom related manager classes without a "
"``_apply_rel_filters()`` method will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:356
msgid ""
"Using ``User.is_authenticated()`` and ``User.is_anonymous()`` as methods "
"will no longer be supported."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:359
msgid ""
"The private attribute ``virtual_fields`` of ``Model._meta`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:361
msgid ""
"The private keyword arguments ``virtual_only`` in "
"``Field.contribute_to_class()`` and ``virtual`` in "
"``Model._meta.add_field()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:365
msgid ""
"The ``javascript_catalog()`` and ``json_catalog()`` views will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:367
msgid ""
"The ``django.contrib.gis.utils.precision_wkt()`` function will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:369
msgid ""
"In multi-table inheritance, implicit promotion of a ``OneToOneField`` to a "
"``parent_link`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:372
msgid "Support for ``Widget._format_value()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:374
msgid ""
"``FileField`` methods ``get_directory_name()`` and ``get_filename()`` will "
"be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:377
msgid ""
"The ``mark_for_escaping()`` function and the classes it uses: "
"``EscapeData``, ``EscapeBytes``, ``EscapeText``, ``EscapeString``, and "
"``EscapeUnicode`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:381
msgid ""
"The ``escape`` filter will change to use "
"``django.utils.html.conditional_escape()``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:384
msgid "``Manager.use_for_related_fields`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:386
msgid ""
"Model ``Manager`` inheritance will follow MRO inheritance rules and the "
"``Meta.manager_inheritance_from_future`` to opt-in to this behavior will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:390
msgid ""
"Support for old-style middleware using ``settings.MIDDLEWARE_CLASSES`` will "
"be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:396
msgid "1.10"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:398
msgid ""
"See the :ref:`Django 1.8 release notes<deprecated-features-1.8>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:401
msgid ""
"Support for calling a ``SQLCompiler`` directly as an alias for calling its "
"``quote_name_unless_alias`` method will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:404
msgid ""
"``cycle`` and ``firstof`` template tags will be removed from the ``future`` "
"template tag library (used during the 1.6/1.7 deprecation period)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:407
msgid "``django.conf.urls.patterns()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:409
msgid ""
"Support for the ``prefix`` argument to "
"``django.conf.urls.i18n.i18n_patterns()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:412
msgid "``SimpleTestCase.urls`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:414
msgid ""
"Using an incorrect count of unpacked values in the ``for`` template tag will"
" raise an exception rather than fail silently."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:417
msgid ""
"The ability to reverse URLs using a dotted Python path will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:419
msgid ""
"The ability to use a dotted Python path for the ``LOGIN_URL`` and "
"``LOGIN_REDIRECT_URL`` settings will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:422
msgid ""
"Support for :py:mod:`optparse` will be dropped for custom management "
"commands (replaced by :py:mod:`argparse`)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:425
msgid ""
"The class ``django.core.management.NoArgsCommand`` will be removed. Use "
":class:`~django.core.management.BaseCommand` instead, which takes no "
"arguments by default."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:429
msgid "``django.core.context_processors`` module will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:431
msgid "``django.db.models.sql.aggregates`` module will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:433
msgid ""
"``django.contrib.gis.db.models.sql.aggregates`` module will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:435
msgid ""
"The following methods and properties of ``django.db.sql.query.Query`` will "
"be removed:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:438
msgid "Properties: ``aggregates`` and ``aggregate_select``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:439
msgid ""
"Methods: ``add_aggregate``, ``set_aggregate_mask``, and "
"``append_aggregate_mask``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:442
msgid "``django.template.resolve_variable`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:444
msgid ""
"The following private APIs will be removed from "
":class:`django.db.models.options.Options` (``Model._meta``):"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:447
msgid "``get_field_by_name()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:448
msgid "``get_all_field_names()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:449
msgid "``get_fields_with_model()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:450
msgid "``get_concrete_fields_with_model()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:451
msgid "``get_m2m_with_model()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:452
msgid "``get_all_related_objects()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:453
msgid "``get_all_related_objects_with_model()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:454
msgid "``get_all_related_many_to_many_objects()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:455
msgid "``get_all_related_m2m_objects_with_model()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:457
msgid ""
"The ``error_message`` argument of ``django.forms.RegexField`` will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:459
msgid "The ``unordered_list`` filter will no longer support old style lists."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:461
msgid "Support for string ``view`` arguments to ``url()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:463
msgid ""
"The backward compatible shim  to rename ``django.forms.Form._has_changed()``"
" to ``has_changed()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:466
msgid "The ``removetags`` template filter will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:468
msgid ""
"The ``remove_tags()`` and ``strip_entities()`` functions in "
"``django.utils.html`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:471
msgid ""
"The ``is_admin_site`` argument to "
"``django.contrib.auth.views.password_reset()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:474
msgid "``django.db.models.field.subclassing.SubfieldBase`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:476
msgid ""
"``django.utils.checksums`` will be removed; its functionality is included in"
" ``django-localflavor`` 1.1+."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:479
msgid ""
"The ``original_content_type_id`` attribute on "
"``django.contrib.admin.helpers.InlineAdminForm`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:482
msgid ""
"The backwards compatibility shim to allow ``FormMixin.get_form()`` to be "
"defined with no default value for its ``form_class`` argument will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:485
msgid "The following settings will be removed:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:487
msgid "``ALLOWED_INCLUDE_ROOTS``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:488
msgid "``TEMPLATE_CONTEXT_PROCESSORS``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:489
msgid "``TEMPLATE_DEBUG``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:490
msgid "``TEMPLATE_DIRS``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:491
msgid "``TEMPLATE_LOADERS``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:492
msgid "``TEMPLATE_STRING_IF_INVALID``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:494
msgid ""
"The backwards compatibility alias ``django.template.loader.BaseLoader`` will"
" be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:497
msgid ""
"Django template objects returned by "
":func:`~django.template.loader.get_template` and "
":func:`~django.template.loader.select_template` won't accept a "
":class:`~django.template.Context` in their "
":meth:`~django.template.backends.base.Template.render()` method anymore."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:503
msgid ""
":doc:`Template response APIs </ref/template-response>` will enforce the use "
"of :class:`dict` and backend-dependent template objects instead of "
":class:`~django.template.Context` and :class:`~django.template.Template` "
"respectively."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:508
msgid ""
"The ``current_app`` parameter for the following function and classes will be"
" removed:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:511
#: ../../../../sources/3.1/docs/internals/deprecation.txt:519
#: ../../../../sources/3.1/docs/internals/deprecation.txt:527
msgid "``django.shortcuts.render()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:512
msgid "``django.template.Context()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:513
msgid "``django.template.RequestContext()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:514
msgid "``django.template.response.TemplateResponse()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:516
msgid ""
"The ``dictionary`` and ``context_instance`` parameters for the following "
"functions will be removed:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:520
#: ../../../../sources/3.1/docs/internals/deprecation.txt:528
msgid "``django.shortcuts.render_to_response()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:521
msgid "``django.template.loader.render_to_string()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:523
msgid "The ``dirs`` parameter for the following functions will be removed:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:525
msgid "``django.template.loader.get_template()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:526
msgid "``django.template.loader.select_template()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:530
msgid ""
"Session verification will be enabled regardless of whether or not "
"``'django.contrib.auth.middleware.SessionAuthenticationMiddleware'`` is in "
"``MIDDLEWARE_CLASSES``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:534
msgid "Private attribute ``django.db.models.Field.related`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:536
msgid ""
"The ``--list`` option of the ``migrate`` management command will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:538
msgid "The ``ssi`` template tag will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:540
msgid ""
"Support for the ``=`` comparison operator in the ``if`` template tag will be"
" removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:543
msgid ""
"The backwards compatibility shims to allow ``Storage.get_available_name()`` "
"and ``Storage.save()`` to be defined without a ``max_length`` argument will "
"be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:547
msgid ""
"Support for the legacy ``%(<foo>)s`` syntax in "
"``ModelFormMixin.success_url`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:550
msgid ""
"``GeoQuerySet`` aggregate methods ``collect()``, ``extent()``, "
"``extent3d()``, ``make_line()``, and ``unionagg()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:553
msgid ""
"Ability to specify ``ContentType.name`` when creating a content type "
"instance will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:556
msgid ""
"Support for the old signature of ``allow_migrate`` will be removed. It "
"changed from ``allow_migrate(self, db, model)`` to ``allow_migrate(self, db,"
" app_label, model_name=None, **hints)``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:560
msgid ""
"Support for the syntax of ``{% cycle %}`` that uses comma-separated "
"arguments will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:563
msgid ""
"The warning that :class:`~django.core.signing.Signer` issues when given an "
"invalid separator will become an exception."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:569
msgid "1.9"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:571
msgid ""
"See the :ref:`Django 1.7 release notes<deprecated-features-1.7>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:574
msgid "``django.utils.dictconfig`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:576
msgid "``django.utils.importlib`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:578
msgid "``django.utils.tzinfo`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:580
msgid "``django.utils.unittest`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:582
msgid "The ``syncdb`` command will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:584
msgid ""
"``django.db.models.signals.pre_syncdb`` and "
"``django.db.models.signals.post_syncdb`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:587
msgid ""
"``allow_syncdb`` on database routers will no longer automatically become "
"``allow_migrate``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:590
msgid ""
"Automatic syncing of apps without migrations will be removed. Migrations "
"will become compulsory for all apps unless you pass the ``--run-syncdb`` "
"option to ``migrate``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:594
msgid ""
"The SQL management commands for apps without migrations, ``sql``, "
"``sqlall``, ``sqlclear``, ``sqldropindexes``, and ``sqlindexes``, will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:597
msgid ""
"Support for automatic loading of ``initial_data`` fixtures and initial SQL "
"data will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:600
msgid ""
"All models will need to be defined inside an installed application or "
"declare an explicit :attr:`~django.db.models.Options.app_label`. "
"Furthermore, it won't be possible to import them before their application is"
" loaded. In particular, it won't be possible to import models inside the "
"root package of their application."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:606
msgid ""
"The model and form ``IPAddressField`` will be removed. A stub field will "
"remain for compatibility with historical migrations."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:609
msgid "``AppCommand.handle_app()`` will no longer be supported."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:611
msgid ""
"``RequestSite`` and ``get_current_site()`` will no longer be importable from"
" ``django.contrib.sites.models``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:614
msgid ""
"FastCGI support via the ``runfcgi`` management command will be removed. "
"Please deploy your project using WSGI."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:617
msgid ""
"``django.utils.datastructures.SortedDict`` will be removed. Use "
":class:`collections.OrderedDict` from the Python standard library instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:620
msgid "``ModelAdmin.declared_fieldsets`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:622
msgid ""
"Instances of ``util.py`` in the Django codebase have been renamed to "
"``utils.py`` in an effort to unify all util and utils references. The "
"modules that provided backwards compatibility will be removed:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:626
msgid "``django.contrib.admin.util``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:627
msgid "``django.contrib.gis.db.backends.util``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:628
msgid "``django.db.backends.util``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:629
msgid "``django.forms.util``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:631
msgid "``ModelAdmin.get_formsets`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:633
msgid ""
"The backward compatibility shim introduced to rename the "
"``BaseMemcachedCache._get_memcache_timeout()`` method to "
"``get_backend_timeout()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:637
msgid ""
"The ``--natural`` and ``-n`` options for :djadmin:`dumpdata` will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:639
msgid ""
"The ``use_natural_keys`` argument for ``serializers.serialize()`` will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:642
msgid ""
"Private API ``django.forms.forms.get_declared_fields()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:644
msgid ""
"The ability to use a ``SplitDateTimeWidget`` with ``DateTimeField`` will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:647
msgid "The ``WSGIRequest.REQUEST`` property will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:649
msgid "The class ``django.utils.datastructures.MergeDict`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:651
msgid ""
"The ``zh-cn`` and ``zh-tw`` language codes will be removed and have been "
"replaced by the ``zh-hans`` and ``zh-hant`` language code respectively."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:654
msgid "The internal ``django.utils.functional.memoize`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:656
msgid ""
"``django.core.cache.get_cache`` will be removed. Add suitable entries to "
":setting:`CACHES` and use :data:`django.core.cache.caches` instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:659
msgid "``django.db.models.loading`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:661
msgid "Passing callable arguments to querysets will no longer be possible."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:663
msgid ""
"``BaseCommand.requires_model_validation`` will be removed in favor of "
"``requires_system_checks``. Admin validators will be replaced by admin "
"checks."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:667
msgid ""
"The ``ModelAdmin.validator_class`` and ``default_validator_class`` "
"attributes will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:670
msgid "``ModelAdmin.validate()`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:672
msgid ""
"``django.db.backends.DatabaseValidation.validate_field`` will be removed in "
"favor of the ``check_field`` method."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:675
msgid "The ``validate`` management command will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:677
msgid ""
"``django.utils.module_loading.import_by_path`` will be removed in favor of "
"``django.utils.module_loading.import_string``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:680
msgid ""
"``ssi`` and ``url`` template tags will be removed from the ``future`` "
"template tag library (used during the 1.3/1.4 deprecation period)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:683
msgid "``django.utils.text.javascript_quote`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:685
msgid ""
"Database test settings as independent entries in the database settings, "
"prefixed by ``TEST_``, will no longer be supported."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:688
msgid ""
"The ``cache_choices`` option to :class:`~django.forms.ModelChoiceField` and "
":class:`~django.forms.ModelMultipleChoiceField` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:691
msgid ""
"The default value of the :attr:`RedirectView.permanent "
"<django.views.generic.base.RedirectView.permanent>` attribute will change "
"from ``True`` to ``False``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:695
msgid ""
"``django.contrib.sitemaps.FlatPageSitemap`` will be removed in favor of "
"``django.contrib.flatpages.sitemaps.FlatPageSitemap``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:698
msgid "Private API ``django.test.utils.TestTemplateLoader`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:700
msgid "The ``django.contrib.contenttypes.generic`` module will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:702
msgid ""
"Private APIs ``django.db.models.sql.where.WhereNode.make_atom()`` and "
"``django.db.models.sql.where.Constraint`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:708
msgid "1.8"
msgstr "1.8"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:710
msgid ""
"See the :ref:`Django 1.6 release notes<deprecated-features-1.6>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:713
msgid "``django.contrib.comments`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:715
msgid "The following transaction management APIs will be removed:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:717
msgid "``TransactionMiddleware``,"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:718
msgid ""
"the decorators and context managers ``autocommit``, ``commit_on_success``, "
"and ``commit_manually``, defined in ``django.db.transaction``,"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:720
msgid ""
"the functions ``commit_unless_managed`` and ``rollback_unless_managed``, "
"also defined in ``django.db.transaction``,"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:722
msgid "the ``TRANSACTIONS_MANAGED`` setting."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:724
msgid ""
"The :ttag:`cycle` and :ttag:`firstof` template tags will auto-escape their "
"arguments. In 1.6 and 1.7, this behavior is provided by the version of these"
" tags in the ``future`` template tag library."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:728
msgid ""
"The ``SEND_BROKEN_LINK_EMAILS`` setting will be removed. Add the "
":class:`django.middleware.common.BrokenLinkEmailsMiddleware` middleware to "
"your ``MIDDLEWARE_CLASSES`` setting instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:732
msgid ""
"``django.middleware.doc.XViewMiddleware`` will be removed. Use "
"``django.contrib.admindocs.middleware.XViewMiddleware`` instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:735
msgid "``Model._meta.module_name`` was renamed to ``model_name``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:737
msgid ""
"Remove the backward compatible shims introduced to rename ``get_query_set`` "
"and similar queryset methods. This affects the following classes: "
"``BaseModelAdmin``, ``ChangeList``, ``BaseCommentNode``, "
"``GenericForeignKey``, ``Manager``, ``SingleRelatedObjectDescriptor`` and "
"``ReverseSingleRelatedObjectDescriptor``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:743
msgid ""
"Remove the backward compatible shims introduced to rename the attributes "
"``ChangeList.root_query_set`` and ``ChangeList.query_set``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:746
msgid ""
"``django.views.defaults.shortcut`` will be removed, as part of the goal of "
"removing all ``django.contrib`` references from the core Django codebase. "
"Instead use ``django.contrib.contenttypes.views.shortcut``. "
"``django.conf.urls.shortcut`` will also be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:752
msgid ""
"Support for the Python Imaging Library (PIL) module will be removed, as it "
"no longer appears to be actively maintained & does not work on Python 3."
msgstr "Python Imaging Library (PIL) モジュールのサポートは将来削除されます。なぜなら、活発にメンテナンスされておらず、 Python 3 でも動かないためです。"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:755
msgid "The following private APIs will be removed:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:757
msgid "``django.db.backend``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:758
msgid "``django.db.close_connection()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:759
msgid "``django.db.backends.creation.BaseDatabaseCreation.set_autocommit()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:760
msgid "``django.db.transaction.is_managed()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:761
msgid "``django.db.transaction.managed()``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:763
msgid ""
"``django.forms.widgets.RadioInput`` will be removed in favor of "
"``django.forms.widgets.RadioChoiceInput``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:766
msgid ""
"The module ``django.test.simple`` and the class "
"``django.test.simple.DjangoTestSuiteRunner`` will be removed. Instead use "
"``django.test.runner.DiscoverRunner``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:770
msgid ""
"The module ``django.test._doctest`` will be removed. Instead use the doctest"
" module from the Python standard library."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:773
msgid "The ``CACHE_MIDDLEWARE_ANONYMOUS_ONLY`` setting will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:775
msgid ""
"Usage of the hard-coded *Hold down \"Control\", or \"Command\" on a Mac, to "
"select more than one.* string to override or append to user-provided "
"``help_text`` in forms for ManyToMany model fields will not be performed by "
"Django anymore either at the model or forms layer."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:780
msgid ""
"The ``Model._meta.get_(add|change|delete)_permission`` methods will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:783
msgid ""
"The session key ``django_language`` will no longer be read for backwards "
"compatibility."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:786
msgid ""
"Geographic Sitemaps will be removed "
"(``django.contrib.gis.sitemaps.views.index`` and "
"``django.contrib.gis.sitemaps.views.sitemap``)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:790
msgid ""
"``django.utils.html.fix_ampersands``, the ``fix_ampersands`` template filter"
" and ``django.utils.html.clean_html`` will be removed following an "
"accelerated deprecation."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:796
msgid "1.7"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:798
msgid ""
"See the :ref:`Django 1.5 release notes<deprecated-features-1.5>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:801
msgid ""
"The module ``django.utils.simplejson`` will be removed. The standard library"
" provides :mod:`json` which should be used instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:804
msgid ""
"The function ``django.utils.itercompat.product`` will be removed. The Python"
" builtin version should be used instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:807
msgid ""
"Auto-correction of INSTALLED_APPS and TEMPLATE_DIRS settings when they are "
"specified as a plain string instead of a tuple will be removed and raise an "
"exception."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:811
msgid ""
"The ``mimetype`` argument to the ``__init__`` methods of "
":class:`~django.http.HttpResponse`, "
":class:`~django.template.response.SimpleTemplateResponse`, and "
":class:`~django.template.response.TemplateResponse`, will be removed. "
"``content_type`` should be used instead. This also applies to the "
"``render_to_response()`` shortcut and the sitemap views, "
":func:`~django.contrib.sitemaps.views.index` and "
":func:`~django.contrib.sitemaps.views.sitemap`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:820
msgid ""
"When :class:`~django.http.HttpResponse` is instantiated with an iterator, or"
" when :attr:`~django.http.HttpResponse.content` is set to an iterator, that "
"iterator will be immediately consumed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:824
msgid ""
"The ``AUTH_PROFILE_MODULE`` setting, and the ``get_profile()`` method on the"
" User model, will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:827
msgid ""
"The ``cleanup`` management command will be removed. It's replaced by "
"``clearsessions``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:830
msgid "The ``daily_cleanup.py`` script will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:832
msgid ""
"The ``depth`` keyword argument will be removed from "
":meth:`~django.db.models.query.QuerySet.select_related`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:835
msgid ""
"The undocumented ``get_warnings_state()``/``restore_warnings_state()`` "
"functions from :mod:`django.test.utils` and the ``save_warnings_state()``/ "
"``restore_warnings_state()`` :ref:`django.test.*TestCase <django-testcase-"
"subclasses>` methods are deprecated. Use the "
":class:`warnings.catch_warnings` context manager available starting with "
"Python 2.6 instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:842
msgid ""
"The undocumented ``check_for_test_cookie`` method in "
":class:`~django.contrib.auth.forms.AuthenticationForm` will be removed "
"following an accelerated deprecation. Users subclassing this form should "
"remove calls to this method, and instead ensure that their auth related "
"views are CSRF protected, which ensures that cookies are enabled."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:848
msgid ""
"The version of ``django.contrib.auth.views.password_reset_confirm()`` that "
"supports base36 encoded user IDs "
"(``django.contrib.auth.views.password_reset_confirm_uidb36``) will be "
"removed. If your site has been running Django 1.6 for more than "
":setting:`PASSWORD_RESET_TIMEOUT_DAYS`, this change will have no effect. If "
"not, then any password reset links generated before you upgrade to Django "
"1.7 won't work after the upgrade."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:856
msgid "The ``django.utils.encoding.StrAndUnicode`` mix-in will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:861
msgid "1.6"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:863
msgid ""
"See the :ref:`Django 1.4 release notes<deprecated-features-1.4>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:866
msgid "``django.contrib.databrowse`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:868
msgid ""
"``django.contrib.localflavor`` will be removed following an accelerated "
"deprecation."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:871
msgid ""
"``django.contrib.markup`` will be removed following an accelerated "
"deprecation."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:874
msgid ""
"The compatibility modules ``django.utils.copycompat`` and "
"``django.utils.hashcompat`` as well as the functions "
"``django.utils.itercompat.all`` and ``django.utils.itercompat.any`` will be "
"removed. The Python builtin versions should be used instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:879
msgid ""
"The ``csrf_response_exempt`` and ``csrf_view_exempt`` decorators will be "
"removed. Since 1.4 ``csrf_response_exempt`` has been a no-op (it returns the"
" same function), and ``csrf_view_exempt`` has been a synonym for "
"``django.views.decorators.csrf.csrf_exempt``, which should be used to "
"replace it."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:885
msgid ""
"The ``django.core.cache.backends.memcached.CacheClass`` backend was split "
"into two in Django 1.3 in order to introduce support for PyLibMC. The "
"historical ``CacheClass`` will be removed in favor of "
"``django.core.cache.backends.memcached.MemcachedCache``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:890
msgid ""
"The UK-prefixed objects of ``django.contrib.localflavor.uk`` will only be "
"accessible through their GB-prefixed names (GB is the correct ISO 3166 code "
"for United Kingdom)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:894
msgid ""
"The ``IGNORABLE_404_STARTS`` and ``IGNORABLE_404_ENDS`` settings have been "
"superseded by :setting:`IGNORABLE_404_URLS` in the 1.4 release. They will be"
" removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:898
msgid ""
"The form wizard has been refactored to use class-based views with pluggable "
"backends in 1.4. The previous implementation will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:901
msgid ""
"Legacy ways of calling :func:`~django.views.decorators.cache.cache_page` "
"will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:904
msgid ""
"The backward-compatibility shim to automatically add a debug-false filter to"
" the ``'mail_admins'`` logging handler will be removed. The "
":setting:`LOGGING` setting should include this filter explicitly if it is "
"desired."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:909
msgid ""
"The builtin truncation functions ``django.utils.text.truncate_words()`` and "
"``django.utils.text.truncate_html_words()`` will be removed in favor of the "
"``django.utils.text.Truncator`` class."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:913
msgid ""
"The ``django.contrib.gis.geoip.GeoIP`` class was moved to "
"``django.contrib.gis.geoip`` in 1.4 -- the shortcut in "
"``django.contrib.gis.utils`` will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:917
msgid ""
"``django.conf.urls.defaults`` will be removed. The functions ``include()``, "
"``patterns()``, and ``url()``, plus :data:`~django.conf.urls.handler404` and"
" :data:`~django.conf.urls.handler500` are now available through "
"``django.conf.urls``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:922
msgid ""
"The functions ``setup_environ()`` and ``execute_manager()`` will be removed "
"from :mod:`django.core.management`. This also means that the old (pre-1.4) "
"style of :file:`manage.py` file will no longer work."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:926
msgid ""
"Setting the ``is_safe`` and ``needs_autoescape`` flags as attributes of "
"template filter functions will no longer be supported."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:929
msgid ""
"The attribute ``HttpRequest.raw_post_data`` was renamed to "
"``HttpRequest.body`` in 1.4. The backward compatibility will be removed -- "
"``HttpRequest.raw_post_data`` will no longer work."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:933
msgid ""
"The value for the ``post_url_continue`` parameter in "
"``ModelAdmin.response_add()`` will have to be either ``None`` (to redirect "
"to the newly created object's edit page) or a pre-formatted url. String "
"formats, such as the previous default ``'../%s/'``, will not be accepted any"
" more."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:942
msgid "1.5"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:944
msgid ""
"See the :ref:`Django 1.3 release notes<deprecated-features-1.3>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:947
msgid ""
"Starting Django without a :setting:`SECRET_KEY` will result in an exception "
"rather than a ``DeprecationWarning``. (This is accelerated from the usual "
"deprecation path; see the :doc:`Django 1.4 release notes</releases/1.4>`.)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:951
msgid ""
"The ``mod_python`` request handler will be removed. The ``mod_wsgi`` handler"
" should be used instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:954
msgid ""
"The ``template`` attribute on ``django.test.client.Response`` objects "
"returned by the :ref:`test client <test-client>` will be removed. The "
":attr:`~django.test.Response.templates` attribute should be used instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:959
msgid ""
"The ``django.test.simple.DjangoTestRunner`` will be removed. Instead use a "
"``unittest``-native class. The features of the "
"``django.test.simple.DjangoTestRunner`` (including fail-fast and Ctrl-C test"
" termination) can be provided by :class:`unittest.TextTestRunner`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:964
msgid ""
"The undocumented function ``django.contrib.formtools.utils.security_hash`` "
"will be removed, instead use ``django.contrib.formtools.utils.form_hmac``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:968
msgid ""
"The function-based generic view modules will be removed in favor of their "
"class-based equivalents, outlined :doc:`here </topics/class-based-"
"views/index>`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:972
msgid ""
"The ``django.core.servers.basehttp.AdminMediaHandler`` will be removed.  In "
"its place use ``django.contrib.staticfiles.handlers.StaticFilesHandler``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:976
msgid ""
"The template tags library ``adminmedia`` and the template tag ``{% "
"admin_media_prefix %}`` will be removed in favor of the generic static files"
" handling. (This is faster than the usual deprecation path; see the "
":doc:`Django 1.4 release notes</releases/1.4>`.)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:981
msgid ""
"The ``url`` and ``ssi`` template tags will be modified so that the first "
"argument to each tag is a template variable, not an implied string. In 1.4, "
"this behavior is provided by a version of the tag in the ``future`` template"
" tag library."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:986
msgid "The ``reset`` and ``sqlreset`` management commands will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:988
msgid ""
"Authentication backends will need to support an inactive user being passed "
"to all methods dealing with permissions. The ``supports_inactive_user`` "
"attribute will no longer be checked and can be removed from custom backends."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:993
msgid ""
":meth:`~django.contrib.gis.geos.GEOSGeometry.transform` will raise a "
":class:`~django.contrib.gis.geos.GEOSException` when called on a geometry "
"with no SRID value."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:997
msgid ""
"``django.http.CompatCookie`` will be removed in favor of "
"``django.http.SimpleCookie``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1000
msgid ""
"``django.core.context_processors.PermWrapper`` and "
"``django.core.context_processors.PermLookupDict`` will be removed in favor "
"of the corresponding ``django.contrib.auth.context_processors.PermWrapper`` "
"and ``django.contrib.auth.context_processors.PermLookupDict``, respectively."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1006
msgid ""
"The :setting:`MEDIA_URL` or :setting:`STATIC_URL` settings will be required "
"to end with a trailing slash to ensure there is a consistent way to combine "
"paths in templates."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1010
msgid ""
"``django.db.models.fields.URLField.verify_exists`` will be removed. The "
"feature was deprecated in 1.3.1 due to intractable security and performance "
"issues and will follow a slightly accelerated deprecation timeframe."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1015
msgid ""
"Translations located under the so-called *project path* will be ignored "
"during the translation building process performed at runtime. The "
":setting:`LOCALE_PATHS` setting can be used for the same task by including "
"the filesystem path to a ``locale`` directory containing non-app-specific "
"translations in its value."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1021
msgid ""
"The Markup contrib app will no longer support versions of Python-Markdown "
"library earlier than 2.1. An accelerated timeline was used as this was a "
"security related deprecation."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1025
msgid ""
"The ``CACHE_BACKEND`` setting will be removed. The cache backend(s) should "
"be specified in the :setting:`CACHES` setting."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1031
msgid "1.4"
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1033
msgid ""
"See the :ref:`Django 1.2 release notes<deprecated-features-1.2>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1036
msgid ""
"``CsrfResponseMiddleware`` and ``CsrfMiddleware`` will be removed.  Use the "
"``{% csrf_token %}`` template tag inside forms to enable CSRF protection. "
"``CsrfViewMiddleware`` remains and is enabled by default."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1040
msgid ""
"The old imports for CSRF functionality (``django.contrib.csrf.*``), which "
"moved to core in 1.2, will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1043
msgid ""
"The ``django.contrib.gis.db.backend`` module will be removed in favor of the"
" specific backends."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1046
msgid ""
"``SMTPConnection`` will be removed in favor of a generic Email backend API."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1048
msgid ""
"The many to many SQL generation functions on the database backends will be "
"removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1051
msgid ""
"The ability to use the ``DATABASE_*`` family of top-level settings to define"
" database connections will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1054
msgid ""
"The ability to use shorthand notation to specify a database backend (i.e., "
"``sqlite3`` instead of ``django.db.backends.sqlite3``) will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1058
msgid ""
"The ``get_db_prep_save``, ``get_db_prep_value`` and ``get_db_prep_lookup`` "
"methods will have to support multiple databases."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1061
msgid ""
"The ``Message`` model (in ``django.contrib.auth``), its related manager in "
"the ``User`` model (``user.message_set``), and the associated methods "
"(``user.message_set.create()`` and ``user.get_and_delete_messages()``), will"
" be removed.  The :doc:`messages framework </ref/contrib/messages>` should "
"be used instead. The related ``messages`` variable returned by the auth "
"context processor will also be removed. Note that this means that the admin "
"application will depend on the messages context processor."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1071
msgid ""
"Authentication backends will need to support the ``obj`` parameter for "
"permission checking. The ``supports_object_permissions`` attribute will no "
"longer be checked and can be removed from custom backends."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1075
msgid ""
"Authentication backends will need to support the ``AnonymousUser`` class "
"being passed to all methods dealing with permissions.  The "
"``supports_anonymous_user`` variable will no longer be checked and can be "
"removed from custom backends."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1080
msgid ""
"The ability to specify a callable template loader rather than a ``Loader`` "
"class will be removed, as will the ``load_template_source`` functions that "
"are included with the built in template loaders for backwards compatibility."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1085
msgid ""
"``django.utils.translation.get_date_formats()`` and "
"``django.utils.translation.get_partial_date_formats()``. These functions "
"will be removed; use the locale-aware ``django.utils.formats.get_format()`` "
"to get the appropriate formats."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1090
msgid ""
"In ``django.forms.fields``, the constants: ``DEFAULT_DATE_INPUT_FORMATS``, "
"``DEFAULT_TIME_INPUT_FORMATS`` and ``DEFAULT_DATETIME_INPUT_FORMATS`` will "
"be removed. Use ``django.utils.formats.get_format()`` to get the appropriate"
" formats."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1096
msgid ""
"The ability to use a function-based test runner will be removed, along with "
"the ``django.test.simple.run_tests()`` test runner."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1099
msgid ""
"The ``views.feed()`` view and ``feeds.Feed`` class in "
"``django.contrib.syndication`` will be removed. The class-based view "
"``views.Feed`` should be used instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1103
msgid ""
"``django.core.context_processors.auth``.  This release will remove the old "
"method in favor of the new method in "
"``django.contrib.auth.context_processors.auth``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1107
msgid ""
"The ``postgresql`` database backend will be removed, use the "
"``postgresql_psycopg2`` backend instead."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1110
msgid ""
"The ``no`` language code will be removed and has been replaced by the ``nb``"
" language code."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1113
msgid ""
"Authentication backends will need to define the boolean attribute "
"``supports_inactive_user`` until version 1.5 when it will be assumed that "
"all backends will handle inactive users."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1117
msgid ""
"``django.db.models.fields.XMLField`` will be removed. This was deprecated as"
" part of the 1.3 release. An accelerated deprecation schedule has been used "
"because the field hasn't performed any role beyond that of a simple "
"``TextField`` since the removal of ``oldforms``. All uses of ``XMLField`` "
"can be replaced with ``TextField``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1123
msgid ""
"The undocumented ``mixin`` parameter to the ``open()`` method of "
"``django.core.files.storage.Storage`` (and subclasses) will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1129
msgid "1.3"
msgstr "1.3"

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1131
msgid ""
"See the :ref:`Django 1.1 release notes<deprecated-features-1.1>` for more "
"details on these changes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1134
msgid ""
"``AdminSite.root()``.  This method of hooking up the admin URLs will be "
"removed in favor of including ``admin.site.urls``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/deprecation.txt:1137
msgid ""
"Authentication backends need to define the boolean attributes "
"``supports_object_permissions`` and ``supports_anonymous_user`` until "
"version 1.4, at which point it will be assumed that all backends will "
"support these options."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:3
msgid "The Django source code repository"
msgstr "Djangoソースコードレポジトリ"

#: ../../../../sources/3.1/docs/internals/git.txt:5
msgid ""
"When deploying a Django application into a real production environment, you "
"will almost always want to use `an official packaged release of Django`_."
msgstr "Djangoアプリケーションを本番環境にデプロイするときは、`公式パッケージのDjangoリリース`_ をほぼ常に使いたくなるでしょう。"

#: ../../../../sources/3.1/docs/internals/git.txt:8
msgid ""
"However, if you'd like to try out in-development code from an upcoming "
"release or contribute to the development of Django, you'll need to obtain a "
"clone of Django's source code repository."
msgstr "しかし、次期リリースの開発中のコードを試したり、Djangoの開発に貢献したい場合は、Djangoのソースコードリポジトリのクローンを入手する必要があります。"

#: ../../../../sources/3.1/docs/internals/git.txt:12
msgid ""
"This document covers the way the code repository is laid out and how to work"
" with and find things in it."
msgstr "このドキュメントはコードレポジトリの構成とそこでの作業方法と調査方法について説明しています。"

#: ../../../../sources/3.1/docs/internals/git.txt:18
msgid "High-level overview"
msgstr "大局的な概要"

#: ../../../../sources/3.1/docs/internals/git.txt:20
msgid ""
"The Django source code repository uses `Git`_ to track changes to the code "
"over time, so you'll need a copy of the Git client (a program called "
"``git``) on your computer, and you'll want to familiarize yourself with the "
"basics of how Git works."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:25
msgid ""
"Git's website offers downloads for various operating systems. The site also "
"contains vast amounts of `documentation`_."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:28
msgid ""
"The Django Git repository is located online at `github.com/django/django "
"<https://github.com/django/django>`_. It contains the full source code for "
"all Django releases, which you can browse online."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:32
msgid "The Git repository includes several `branches`_:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:34
msgid ""
"``master`` contains the main in-development code which will become the next "
"packaged release of Django. This is where most development activity is "
"focused."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:38
msgid ""
"``stable/A.B.x`` are the branches where release preparation work happens. "
"They are also used for bugfix and security releases which occur as necessary"
" after the initial release of a feature version."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:42
msgid ""
"The Git repository also contains `tags`_. These are the exact revisions from"
" which packaged Django releases were produced, since version 1.0."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:45
msgid ""
"A number of tags also exist under the ``archive/`` prefix for :ref:`archived"
" work<archived-feature-development-work>`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:48
msgid ""
"The source code for the `Djangoproject.com "
"<https://www.djangoproject.com/>`_ website can be found at "
"`github.com/django/djangoproject.com "
"<https://github.com/django/djangoproject.com>`_."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:58
msgid "The master branch"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:60
msgid ""
"If you'd like to try out the in-development code for the next release of "
"Django, or if you'd like to contribute to Django by fixing bugs or "
"developing new features, you'll want to get the code from the master branch."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:64
msgid ""
"Note that this will get *all* of Django: in addition to the top-level "
"``django`` module containing Python code, you'll also get a copy of Django's"
" documentation, test suite, packaging scripts and other miscellaneous bits. "
"Django's code will be present in your clone as a directory named ``django``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:70
msgid ""
"To try out the in-development code with your own applications, place the "
"directory containing your clone on your Python import path. Then ``import`` "
"statements which look for Django will find the ``django`` module within your"
" clone."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:75
msgid ""
"If you're going to be working on Django's code (say, to fix a bug or develop"
" a new feature), you can probably stop reading here and move over to "
":doc:`the documentation for contributing to Django "
"</internals/contributing/index>`, which covers things like the preferred "
"coding style and how to generate and submit a patch."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:82
msgid "Stable branches"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:84
msgid ""
"Django uses branches to prepare for releases of Django. Each major release "
"series has its own stable branch."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:87
msgid ""
"These branches can be found in the repository as ``stable/A.B.x`` branches "
"and will be created right after the first alpha is tagged."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:90
msgid ""
"For example, immediately after *Django 1.5 alpha 1* was tagged, the branch "
"``stable/1.5.x`` was created and all further work on preparing the code for "
"the final 1.5 release was done there."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:94
msgid ""
"These branches also provide bugfix and security support as described in :ref"
":`supported-versions-policy`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:97
msgid ""
"For example, after the release of Django 1.5, the branch ``stable/1.5.x`` "
"receives only fixes for security and critical stability bugs, which are "
"eventually released as Django 1.5.1 and so on, ``stable/1.4.x`` receives "
"only security and data loss fixes, and ``stable/1.3.x`` no longer receives "
"any updates."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:103
#: ../../../../sources/3.1/docs/internals/git.txt:134
msgid "Historical information"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:105
msgid ""
"This policy for handling ``stable/A.B.x`` branches was adopted starting with"
" the Django 1.5 release cycle."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:108
msgid ""
"Previously, these branches weren't created until right after the releases "
"and the stabilization work occurred on the main repository branch. Thus, no "
"new feature development work for the next release of Django could be "
"committed until the final release happened."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:113
msgid ""
"For example, shortly after the release of Django 1.3 the branch "
"``stable/1.3.x`` was created. Official support for that release has expired,"
" and so it no longer receives direct maintenance from the Django project. "
"However, that and all other similarly named branches continue to exist, and "
"interested community members have occasionally used them to provide "
"unofficial support for old Django releases."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:121
msgid "Tags"
msgstr "タグ"

#: ../../../../sources/3.1/docs/internals/git.txt:123
msgid "Each Django release is tagged and signed by the releaser."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:125
msgid "The tags can be found on GitHub's `tags`_ page."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:132
msgid "Archived feature-development work"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:136
msgid ""
"Since Django moved to Git in 2012, anyone can clone the repository and "
"create their own branches, alleviating the need for official branches in the"
" source code repository."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:140
msgid ""
"The following section is mostly useful if you're exploring the repository's "
"history, for example if you're trying to understand how some features were "
"designed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:144
msgid ""
"Feature-development branches tend by their nature to be temporary. Some "
"produce successful features which are merged back into Django's master to "
"become part of an official release, but others do not; in either case, there"
" comes a time when the branch is no longer being actively worked on by any "
"developer. At this point the branch is considered closed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:150
msgid ""
"Django used to be maintained with the Subversion revision control system, "
"that has no standard way of indicating this. As a workaround, branches of "
"Django which are closed and no longer maintained were moved into ``attic``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:154
msgid ""
"A number of tags exist under the ``archive/`` prefix to maintain a reference"
" to this and other work of historical interest."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:157
msgid ""
"The following tags under the ``archive/attic/`` prefix reference the tip of "
"branches whose code eventually became part of Django itself:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:160
msgid ""
"``boulder-oracle-sprint``: Added support for Oracle databases to Django's "
"object-relational mapper. This has been part of Django since the 1.0 "
"release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:164
msgid ""
"``gis``: Added support for geographic/spatial queries to Django's object-"
"relational mapper. This has been part of Django since the 1.0 release, as "
"the bundled application ``django.contrib.gis``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:168
msgid ""
"``i18n``: Added :doc:`internationalization support </topics/i18n/index>` to "
"Django. This has been part of Django since the 0.90 release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:171
msgid ""
"``magic-removal``: A major refactoring of both the internals and public APIs"
" of Django's object-relational mapper. This has been part of Django since "
"the 0.95 release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:175
msgid ""
"``multi-auth``: A refactoring of :doc:`Django's bundled authentication "
"framework </topics/auth/index>` which added support for :ref:`authentication"
" backends <authentication-backends>`. This has been part of Django since the"
" 0.95 release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:180
msgid ""
"``new-admin``: A refactoring of :doc:`Django's bundled administrative "
"application </ref/contrib/admin/index>`. This became part of Django as of "
"the 0.91 release, but was superseded by another refactoring (see next "
"listing) prior to the Django 1.0 release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:185
msgid ""
"``newforms-admin``: The second refactoring of Django's bundled "
"administrative application. This became part of Django as of the 1.0 "
"release, and is the basis of the current incarnation of "
"``django.contrib.admin``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:190
msgid ""
"``queryset-refactor``: A refactoring of the internals of Django's object-"
"relational mapper. This became part of Django as of the 1.0 release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:194
msgid ""
"``unicode``: A refactoring of Django's internals to consistently use "
"Unicode-based strings in most places within Django and Django applications. "
"This became part of Django as of the 1.0 release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:198
msgid ""
"Additionally, the following tags under the ``archive/attic/`` prefix "
"reference the tips of branches that were closed, but whose code was never "
"merged into Django, and the features they aimed to implement were never "
"finished:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:202
msgid "``full-history``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:204
msgid "``generic-auth``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:206
msgid "``multiple-db-support``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:208
msgid "``per-object-permissions``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:210
msgid "``schema-evolution``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:212
msgid "``schema-evolution-ng``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:214
msgid "``search-api``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:216
msgid "``sqlalchemy``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/git.txt:218
msgid ""
"Finally, under the ``archive/`` prefix, the repository contains "
"``soc20XX/<project>`` tags referencing the tip of branches that were used by"
" students who worked on Django during the 2009 and 2010 Google Summer of "
"Code programs."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:3
msgid "How is Django Formed?"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:7
msgid "This document explains how to release Django."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:9
msgid ""
"**Please, keep these instructions up-to-date if you make changes!** The "
"point here is to be descriptive, not prescriptive, so feel free to "
"streamline or otherwise make changes, but **update this document "
"accordingly!**"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:14
msgid "Overview"
msgstr "オーバービュー"

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:16
msgid "There are three types of releases that you might need to make:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:18
msgid ""
"Security releases: disclosing and fixing a vulnerability. This'll generally "
"involve two or three simultaneous releases -- e.g. 1.5.x, 1.6.x, and, "
"depending on timing, perhaps a 1.7 alpha/beta/rc."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:22
msgid ""
"Regular version releases: either a final release (e.g. 1.5) or a bugfix "
"update (e.g. 1.5.1)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:25
msgid "Pre-releases: e.g. 1.6 alpha, beta, or rc."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:27
msgid "The short version of the steps involved is:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:29
msgid ""
"If this is a security release, pre-notify the security distribution list one"
" week before the actual release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:32
msgid ""
"Proofread the release notes, looking for organization and writing errors. "
"Draft a blog post and email announcement."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:35
msgid "Update version numbers and create the release package(s)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:37
msgid "Upload the package(s) to the ``djangoproject.com`` server."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:39
msgid "Upload the new version(s) to PyPI."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:41
msgid "Declare the new version in the admin on ``djangoproject.com``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:43
msgid "Post the blog entry and send out the email announcements."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:45
msgid "Update version numbers post-release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:47
msgid "There are a lot of details, so please read on."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:50
msgid "Prerequisites"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:52
msgid "You'll need a few things before getting started:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:54
msgid ""
"A GPG key. If the key you want to use is not your default signing key, "
"you'll need to add ``-u you@example.com`` to every GPG signing command "
"below, where ``you@example.com`` is the email address associated with the "
"key you want to use."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:59
msgid "An install of some required Python packages::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:63
msgid ""
"Access to Django's record on PyPI. Create a file with your credentials:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:65
msgid "~/.pypirc"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:72
msgid "Access to the ``djangoproject.com`` server to upload files."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:74
msgid "Access to the admin on ``djangoproject.com`` as a \"Site maintainer\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:76
msgid "Access to post to ``django-announce``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:78
msgid ""
"If this is a security release, access to the pre-notification distribution "
"list."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:81
msgid ""
"If this is your first release, you'll need to coordinate with another "
"releaser to get all these things lined up."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:85
msgid "Pre-release tasks"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:87
msgid ""
"A few items need to be taken care of before even beginning the release "
"process. This stuff starts about a week before the release; most of it can "
"be done any time leading up to the actual release:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:91
msgid ""
"If this is a security release, send out pre-notification **one week** before"
" the release. The template for that email and a list of the recipients are "
"in the private ``django-security`` GitHub wiki. BCC the pre-notification "
"recipients. Sign the email with the key you'll use for the release and "
"include `CVE IDs <https://cveform.mitre.org/>`_ (requested with Vendor: "
"djangoproject, Product: django) and patches for each issue being fixed. "
"Also, :ref:`notify django-announce <security-disclosure>` of the upcoming "
"security release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:100
msgid ""
"As the release approaches, watch Trac to make sure no release blockers are "
"left for the upcoming release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:103
msgid ""
"Check with the other committers to make sure they don't have any uncommitted"
" changes for the release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:106
msgid ""
"Proofread the release notes, including looking at the online version to "
"catch any broken links or reST errors, and make sure the release notes "
"contain the correct date."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:110
msgid ""
"Double-check that the release notes mention deprecation timelines for any "
"APIs noted as deprecated, and that they mention any changes in Python "
"version support."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:114
msgid ""
"Double-check that the release notes index has a link to the notes for the "
"new release; this will be in ``docs/releases/index.txt``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:117
msgid ""
"If this is a feature release, ensure translations from Transifex have been "
"integrated. This is typically done by a separate translation's manager "
"rather than the releaser, but here are the steps. Provided you have an "
"account on Transifex::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:124
msgid ""
"and then commit the changed/added files (both .po and .mo). Sometimes there "
"are validation errors which need to be debugged, so avoid doing this task "
"immediately before a release is needed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:128
msgid ":ref:`Update the django-admin manual page <django-admin-manpage>`::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:135
msgid "and then commit the changed man page."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:137
msgid ""
"If this is the alpha release of a new series, create a new stable branch "
"from master. For example, when releasing Django 3.1::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:143
msgid ""
"If this is the \"dot zero\" release of a new series, create a new branch "
"from the current stable branch in the `django-docs-translations "
"<https://github.com/django/django-docs-translations>`_ repository. For "
"example, when releasing Django 2.2::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:152
msgid "Preparing for release"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:154
msgid ""
"Write the announcement blog post for the release. You can enter it into the "
"admin at any time and mark it as inactive. Here are a few examples: `example"
" security release announcement`__, `example regular release announcement`__,"
" `example pre-release announcement`__."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:164
msgid "Actually rolling the release"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:166
msgid "OK, this is the fun part, where we actually push out a release!"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:168
msgid ""
"Check `Jenkins`__ is green for the version(s) you're putting out. You "
"probably shouldn't issue a release until it's green."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:173
msgid ""
"A release always begins from a release branch, so you should make sure "
"you're on a stable branch and up-to-date. For example::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:179
msgid ""
"If this is a security release, merge the appropriate patches from ``django-"
"security``. Rebase these patches as necessary to make each one a plain "
"commit on the release branch rather than a merge commit. To ensure this, "
"merge them with the ``--ff-only`` flag; for example::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:187
msgid ""
"(This assumes ``security/1.5.x`` is a branch in the ``django-security`` repo"
" containing the necessary security patches for the next release in the 1.5 "
"series.)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:191
msgid ""
"If git refuses to merge with ``--ff-only``, switch to the security-patch "
"branch and rebase it on the branch you are about to merge it into (``git "
"checkout security/1.5.x; git rebase stable/1.5.x``) and then switch back and"
" do the merge. Make sure the commit message for each security fix explains "
"that the commit is a security fix and that an announcement will follow "
"(:commit:`example security commit "
"<bf39978a53f117ca02e9a0c78b76664a41a54745>`)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:198
msgid ""
"For a feature release, remove the ``UNDER DEVELOPMENT`` header at the top of"
" the release notes and add the release date on the next line. For a patch "
"release, replace ``*Under Development*`` with the release date. Make this "
"change on all branches where the release notes for a particular version are "
"located."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:204
msgid ""
"Update the version number in ``django/__init__.py`` for the release. Please "
"see `notes on setting the VERSION tuple`_ below for details on ``VERSION``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:208
msgid ""
"If this is a pre-release package, update the \"Development Status\" trove "
"classifier in ``setup.cfg`` to reflect this. Otherwise, make sure the "
"classifier is set to ``Development Status :: 5 - Production/Stable``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:212
msgid "Tag the release using ``git tag``. For example::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:216
msgid "You can check your work by running ``git tag --verify <tag>``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:218
msgid "Push your work, including the tag: ``git push --tags``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:220
msgid ""
"Make sure you have an absolutely clean tree by running ``git clean -dfx``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:222
msgid ""
"Run ``make -f extras/Makefile`` to generate the release packages. This will "
"create the release packages in a ``dist/`` directory."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:225
msgid "Generate the hashes of the release packages::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:232
msgid ""
"Create a \"checksums\" file, ``Django-<<VERSION>>.checksum.txt`` containing "
"the hashes and release information. Start with this template and insert the "
"correct version, date, GPG key ID (from ``gpg --list-keys --keyid-format "
"LONG``), release URL, and checksums:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:283
msgid ""
"Sign the checksum file (``gpg --clearsign --digest-algo SHA256 "
"Django-<version>.checksum.txt``). This generates a signed document, "
"``Django-<version>.checksum.txt.asc`` which you can then verify using ``gpg "
"--verify Django-<version>.checksum.txt.asc``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:288
msgid ""
"If you're issuing multiple releases, repeat these steps for each release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:291
msgid "Making the release(s) available to the public"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:293
msgid "Now you're ready to actually put the release out there. To do this:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:295
msgid ""
"Upload the release package(s) to the djangoproject server, replacing A.B. "
"with the appropriate version number, e.g. 1.5 for a 1.5.x release::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:300
msgid ""
"If this is the alpha release of a new series, you will need to create the "
"directory A.B."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:303
msgid "Upload the checksum file(s)::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:307
msgid ""
"Test that the release packages install correctly using ``easy_install`` and "
"``pip``. Here's one method::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:326
msgid ""
"This just tests that the tarballs are available (i.e. redirects are up) and "
"that they install correctly, but it'll catch silly mistakes."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:329
msgid ""
"Ask a few people on IRC to verify the checksums by visiting the checksums "
"file (e.g. https://www.djangoproject.com/m/pgp/Django-1.5b1.checksum.txt) "
"and following the instructions in it. For bonus points, they can also unpack"
" the downloaded release tarball and verify that its contents appear to be "
"correct (proper version numbers, no stray ``.pyc`` or other undesirable "
"files)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:336
msgid ""
"Upload the release packages to PyPI (for pre-releases, only upload the wheel"
" file)::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:341
msgid ""
"Go to the `Add release page in the admin`__, enter the new release number "
"exactly as it appears in the name of the tarball (Django-<version>.tar.gz). "
"So for example enter \"1.5.1\" or \"1.4c2\", etc. If the release is part of "
"an LTS branch, mark it so."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:348
msgid ""
"If this is the alpha release of a new series, also create a Release object "
"for the *final* release, ensuring that the *Release date* field is blank, "
"thus marking it as *unreleased*. For example, when creating the Release "
"object for ``3.1a1``, also create ``3.1`` with the Release date field blank."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:353
msgid "Make the blog post announcing the release live."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:355
msgid ""
"For a new version release (e.g. 1.5, 1.6), update the default stable version"
" of the docs by flipping the ``is_default`` flag to ``True`` on the "
"appropriate ``DocumentRelease`` object in the ``docs.djangoproject.com`` "
"database (this will automatically flip it to ``False`` for all others); you "
"can do this using the site's admin."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:361
msgid ""
"Create new ``DocumentRelease`` objects for each language that has an entry "
"for the previous release. Update djangoproject.com's `robots.docs.txt`__ "
"file by copying entries from ``manage_translations.py robots_txt`` from the "
"current stable branch in the ``django-docs-translations`` repository. For "
"example, when releasing Django 2.2::"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:373
msgid ""
"Post the release announcement to the |django-announce|, |django-developers|,"
" and |django-users| mailing lists. This should include a link to the "
"announcement blog post."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:377
msgid ""
"If this is a security release, send a separate email to oss-"
"security@lists.openwall.com. Provide a descriptive subject, for example, "
"\"Django\" plus the issue title from the release notes (including CVE ID). "
"The message body should include the vulnerability details, for example, the "
"announcement blog post text. Include a link to the announcement blog post."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:383
msgid ""
"Add a link to the blog post in the topic of the ``#django`` IRC channel: "
"``/msg chanserv TOPIC #django new topic goes here``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:387
msgid "Post-release"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:389
msgid "You're almost done! All that's left to do now is:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:391
msgid ""
"Update the ``VERSION`` tuple in ``django/__init__.py`` again, incrementing "
"to whatever the next expected release will be. For example, after releasing "
"1.5.1, update ``VERSION`` to ``VERSION = (1, 5, 2, 'alpha', 0)``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:396
msgid ""
"Add the release in `Trac's versions list`_ if necessary (and make it the "
"default by changing the ``default_version`` setting in the "
"code.djangoproject.com's `trac.ini`__, if it's a final release). The new X.Y"
" version should be added after the alpha release and the default version "
"should be updated after \"dot zero\" release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:404
msgid ""
"If this was a security release, update :doc:`/releases/security` with "
"details of the issues addressed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:410
msgid "New stable branch tasks"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:412
msgid ""
"There are several items to do in the time following the creation of a new "
"stable branch (often following an alpha release). Some of these tasks don't "
"need to be done by the releaser."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:416
msgid ""
"Create a new ``DocumentRelease`` object in the ``docs.djangoproject.com`` "
"database for the new version's docs, and update the "
"``docs/fixtures/doc_releases.json`` JSON fixture, so people without access "
"to the production DB can still run an up-to-date copy of the docs site."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:421
msgid ""
"Create a stub release note for the new feature version. Use the stub from "
"the previous feature release version or copy the contents from the previous "
"feature version and delete most of the contents leaving only the headings."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:425
msgid ""
"Increase the default PBKDF2 iterations in "
"``django.contrib.auth.hashers.PBKDF2PasswordHasher`` by about 20% (pick a "
"round number). Run the tests, and update the 3 failing hasher tests with the"
" new values. Make sure this gets noted in the release notes (see the 1.8 "
"release notes for an example)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:431
msgid ""
"Remove features that have reached the end of their deprecation cycle. Each "
"removal should be done in a separate commit for clarity. In the commit "
"message, add a \"refs #XXXX\" to the original ticket where the deprecation "
"began if possible."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:436
msgid ""
"Remove ``.. versionadded::``, ``.. versionadded::``, and ``.. deprecated::``"
" annotations in the documentation from two releases ago. For example, in "
"Django 1.9, notes for 1.7 will be removed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:440
msgid ""
"Add the new branch to `Read the Docs "
"<https://readthedocs.org/projects/django/>`_. Since the automatically "
"generated version names (\"stable-A.B.x\") differ from the version names "
"used in Read the Docs (\"A.B.x\"), `create a ticket "
"<https://github.com/rtfd/readthedocs.org/issues/5537>`_ requesting the new "
"version."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:448
msgid "Notes on setting the VERSION tuple"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:450
msgid ""
"Django's version reporting is controlled by the ``VERSION`` tuple in "
"``django/__init__.py``. This is a five-element tuple, whose elements are:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:454
msgid "Major version."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:455
msgid "Minor version."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:456
msgid "Micro version."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:457
msgid "Status -- can be one of \"alpha\", \"beta\", \"rc\" or \"final\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:458
msgid ""
"Series number, for alpha/beta/RC packages which run in sequence (allowing, "
"for example, \"beta 1\", \"beta 2\", etc.)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:461
msgid ""
"For a final release, the status is always \"final\" and the series number is"
" always 0. A series number of 0 with an \"alpha\" status will be reported as"
" \"pre-alpha\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:465
msgid "Some examples:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:467
msgid "``(1, 2, 1, 'final', 0)`` → \"1.2.1\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:469
msgid "``(1, 3, 0, 'alpha', 0)`` → \"1.3 pre-alpha\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/howto-release-django.txt:471
msgid "``(1, 3, 0, 'beta', 2)`` → \"1.3 beta 2\""
msgstr ""

#: ../../../../sources/3.1/docs/internals/index.txt:3
msgid "Django internals"
msgstr ""

#: ../../../../sources/3.1/docs/internals/index.txt:5
msgid ""
"Documentation for people hacking on Django itself. This is the place to go "
"if you'd like to help improve Django or learn about how Django is managed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:3
msgid "Mailing lists"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:13
msgid ""
"Django has several official mailing lists on Google Groups that are open to "
"anyone."
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:19
msgid "``django-users``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:21
msgid ""
"This is the right place if you are looking to ask any question regarding the"
" installation, usage, or debugging of Django."
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:26
msgid ""
"If it's the first time you send an email to this list, your email must be "
"accepted first so don't worry if :ref:`your message does not appear "
"<message-does-not-appear-on-django-users>` instantly."
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:30
msgid "`django-users mailing archive`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:31
msgid "`django-users subscription email address`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:32
msgid "`django-users posting email`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:41
msgid "``django-core-mentorship``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:43
msgid ""
"The Django Core Mentorship list is intended to provide a welcoming "
"introductory environment for community members interested in contributing to"
" the Django Project."
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:47
msgid "`django-core-mentorship mailing archive`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:48
msgid "`django-core-mentorship subscription email address`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:49
msgid "`django-core-mentorship posting email`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:58
msgid "``django-developers``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:60
msgid ""
"The discussion about the development of Django itself takes place here."
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:62
msgid ""
"Before asking a question about how to contribute, read "
":doc:`/internals/contributing/index`. Many frequently asked questions are "
"answered there."
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:68
msgid ""
"Please make use of :ref:`django-users mailing list <django-users-mailing-"
"list>` if you want to ask for tech support, doing so in this list is "
"inappropriate."
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:72
msgid "`django-developers mailing archive`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:73
msgid "`django-developers subscription email address`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:74
msgid "`django-developers posting email`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:83
msgid "``django-i18n``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:85
msgid ""
"This is the place to discuss the internationalization and localization of "
"Django's components."
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:88
msgid "`django-i18n mailing archive`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:89
msgid "`django-i18n subscription email address`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:90
msgid "`django-i18n posting email`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:99
msgid "``django-announce``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:101
msgid ""
"A (very) low-traffic list for announcing :ref:`upcoming security releases "
"<security-disclosure>`, new releases of Django, and security advisories."
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:104
msgid "`django-announce mailing archive`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:105
msgid "`django-announce subscription email address`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:106
msgid "`django-announce posting email`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:115
msgid "``django-updates``"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:117
msgid ""
"All the ticket updates are mailed automatically to this list, which is "
"tracked by developers and interested community members."
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:120
msgid "`django-updates mailing archive`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:121
msgid "`django-updates subscription email address`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/mailing-lists.txt:122
msgid "`django-updates posting email`_"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:3
msgid "Organization of the Django Project"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:6
msgid "Principles"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:8
msgid ""
"The Django Project is managed by a team of volunteers pursuing three goals:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:10
msgid "Driving the development of the Django Web Framework,"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:11
msgid "Fostering the ecosystem of Django-related software,"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:12
msgid ""
"Leading the Django community in accordance with the values described in the "
"`Django Code of Conduct`_."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:15
msgid ""
"The Django Project isn't a legal entity. The `Django Software Foundation`_, "
"a non-profit organization, handles financial and legal matters related to "
"the Django Project. Other than that, the Django Software Foundation lets the"
" Django Project manage the development of the Django framework, its "
"ecosystem and its community."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:24
msgid ""
"The Django core team makes the decisions, nominates its new members, and "
"elects its technical board. While it holds decision power in theory, it aims"
" at using it as rarely as possible in practice. Rough consensus should be "
"the norm and formal voting an exception."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:32
msgid "Core team"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:35
#: ../../../../sources/3.1/docs/internals/organization.txt:133
msgid "Role"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:37
msgid ""
"The core team is the group of trusted volunteers who manage the Django "
"Project. They assume many roles required to achieve the project's goals, "
"especially those that require a high level of trust. They make the decisions"
" that shape the future of the project."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:42
msgid ""
"Core team members are expected to act as role models for the community and "
"custodians of the project, on behalf of the community and all those who rely"
" on Django."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:46
msgid ""
"They will intervene, where necessary, in online discussions or at official "
"Django events on the rare occasions that a situation arises that requires "
"intervention."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:50
msgid ""
"They have authority over the Django Project infrastructure, including the "
"Django Project website itself, the Django GitHub organization and "
"repositories, the Trac bug tracker, the mailing lists, IRC channels, etc."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:55
#: ../../../../sources/3.1/docs/internals/organization.txt:140
msgid "Prerogatives"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:57
msgid ""
"Core team members may participate in formal votes, typically to nominate new"
" team members and to elect the technical board."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:60
msgid ""
"Some contributions don't require commit access. Depending on the reasons why"
" a contributor joins the team, they may or may not have commit permissions "
"to the Django code repository."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:64
msgid ""
"However, should the need arise, any team member may ask for commit access by"
" writing to the core team's mailing list. Access will be granted unless the "
"person withdraws their request or the technical board vetoes the proposal."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:68
msgid ""
"Core team members who have commit access are referred to as \"committers\" "
"or \"core developers\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:71
msgid ""
"Other permissions, such as access to the servers, are granted to those who "
"need them through the same process."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:75
#: ../../../../sources/3.1/docs/internals/organization.txt:162
msgid "Membership"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:77
msgid ""
"`Django team members <https://www.djangoproject.com/foundation/teams/>`_ "
"demonstrate:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:80
msgid "a good grasp of the philosophy of the Django Project"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:81
msgid "a solid track record of being constructive and helpful"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:82
msgid "significant contributions to the project's goals, in any form"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:83
msgid "willingness to dedicate some time to improving Django"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:85
msgid ""
"As the project matures, contributions go way beyond code. Here's an "
"incomplete list of areas where contributions may be considered for joining "
"the core team, in no particular order:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:89
msgid "Working on community management and outreach"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:90
msgid "Providing support on the mailing-lists and on IRC"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:92
msgid "Writing patches (code, docs, or tests)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:93
msgid "Reviewing patches (code, docs, or tests)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:94
msgid "Participating in design decisions"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:95
msgid "Providing expertise in a particular domain (security, i18n, etc.)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:96
msgid "Managing the continuous integration infrastructure"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:97
msgid "Managing the servers (website, tracker, documentation, etc.)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:98
msgid ""
"Maintaining related projects (djangoproject.com site, ex-contrib apps, etc.)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:99
msgid "Creating visual designs"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:101
msgid "Very few areas are reserved to core team members:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:103
msgid "Reviewing security reports"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:104
msgid "Merging patches (code, docs, or tests)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:105
msgid "Packaging releases"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:107
msgid ""
"Core team membership acknowledges sustained and valuable efforts that align "
"well with the philosophy and the goals of the Django Project."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:110
msgid ""
"It is granted by a four fifths majority of votes cast in a core team vote "
"and no veto by the technical board."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:113
msgid ""
"Core team members are always looking for promising contributors, teaching "
"them how the project is managed, and submitting their names to the core "
"team's vote when they're ready. If you would like to join the core team, you"
" can contact a core team member privately or ask for guidance on the "
":ref:`Django Core Mentorship mailing-list <django-core-mentorship-mailing-"
"list>`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:119
msgid ""
"There's no time limit on core team membership. However, in order to provide "
"the general public with a reasonable idea of how many people maintain "
"Django, core team members who have stopped contributing are encouraged to "
"declare themselves as \"past team members\". Those who haven't made any non-"
"trivial contribution in two years may be asked to move themselves to this "
"category, and moved there if they don't respond. Past team members lose "
"their privileges such as voting rights and commit access."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:130
msgid "Technical board"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:135
msgid ""
"The technical board is a group of experienced and active committers who "
"steer technical choices. Their main concern is to maintain the quality and "
"stability of the Django Web Framework."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:142
msgid "The technical board holds two prerogatives:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:144
msgid ""
"Making major technical decisions when no consensus is found otherwise. This "
"happens on the |django-developers| mailing-list."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:146
msgid ""
"Veto a grant of commit access or remove commit access. This happens on the "
"``django-core`` mailing-list."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:149
msgid ""
"In both cases, the technical board is a last resort. In these matters, it "
"fulfills a similar function to the former Benevolent Dictators For Life."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:152
msgid ""
"When the board wants to exercise one of these prerogatives, it must hold a "
"private, simple majority vote on the resolution. The quorum is the full "
"committee — each member must cast a vote or abstain explicitly. Then the "
"board communicates the result, and if possible the reasons, on the "
"appropriate mailing-list. There's no appeal for such decisions."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:158
msgid ""
"In addition, at its discretion, the technical board may act in an advisory "
"capacity on non-technical decisions."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:164
msgid ""
"`The technical board`_ is an elected group of five committers. They're "
"expected to be experienced but there's no formal seniority requirement."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:167
msgid ""
"A new board is elected after each feature release of Django. The election "
"process is managed by a returns officer nominated by the outgoing technical "
"board. The election process works as follows:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:171
msgid ""
"Candidates advertise their application for the technical board to the team."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:173
msgid ""
"They must be committers already. There's no term limit for technical board "
"members."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:176
msgid ""
"Each team member can vote for zero to five people among the candidates. "
"Candidates are ranked by the total number of votes they received."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:179
msgid "In case of a tie, the person who joined the core team earlier wins."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:181
msgid ""
"Both the application and the voting period last between one and two weeks, "
"at the outgoing board's discretion."
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:187
msgid "Changing the organization"
msgstr ""

#: ../../../../sources/3.1/docs/internals/organization.txt:189
msgid ""
"Changes to this document require a four fifths majority of votes cast in a "
"core team vote and no veto by the technical board."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:3
msgid "Django's release process"
msgstr "Django のリリースプロセス"

#: ../../../../sources/3.1/docs/internals/release-process.txt:8
msgid "Official releases"
msgstr "公式リリース"

#: ../../../../sources/3.1/docs/internals/release-process.txt:10
msgid "Since version 1.0, Django's release numbering works as follows:"
msgstr "バージョン 1.0 以降から、Django のリリース番号は以下の規則に従って付けられています。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:12
msgid "Versions are numbered in the form ``A.B`` or ``A.B.C``."
msgstr "バージョン番号は、``A.B`` または ``A.B.C`` の形式で表される。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:14
msgid ""
"``A.B`` is the *feature release* version number. Each version will be mostly"
" backwards compatible with the previous release. Exceptions to this rule "
"will be listed in the release notes."
msgstr "``A.B`` は *フィーチャーリリース* 版の番号です。大抵の場合、それぞれのバージョンで、前回のリリースとの後方互換性が保たれます。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:18
msgid ""
"``C`` is the *patch release* version number, which is incremented for bugfix"
" and security releases. These releases will be 100% backwards-compatible "
"with the previous patch release. The only exception is when a security or "
"data loss issue can't be fixed without breaking backwards-compatibility. If "
"this happens, the release notes will provide detailed upgrade instructions."
msgstr "``C`` は、*パッチリリース* のバージョン番号で、バグフィックスとセキュリティリリースが追加されるたびに数字が1つ増えます。このリリースでは、前回のパッチリリースに対して 100% の後方互換性が保証されています。唯一の例外は、セキュリティやデータの喪失の問題によって、後方互換性を修正するために後方互換性を破らざるをえない場合のみです。このようなことが起こった場合には、パッチリリースが出された場合には、リリースノート内に更新の詳細な手順が書かれます。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:24
msgid ""
"Before a new feature release, we'll make alpha, beta, and release candidate "
"releases. These are of the form ``A.B alpha/beta/rc N``, which means the "
"``Nth`` alpha/beta/release candidate of version ``A.B``."
msgstr "新しいフィーチャーリリースの前に、アルファ、ベータ、およびリリース候補版が作られます。これらのリリースのバージョン番号は ``A.B alpha/beta/rc N`` の形式で表され、バージョン ``A.B`` の ``N番目の`` アルファ/ベータ/リリース候補版であることを意味します。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:28
msgid ""
"In git, each Django release will have a tag indicating its version number, "
"signed with the Django release key. Additionally, each release series has "
"its own branch, called ``stable/A.B.x``, and bugfix/security releases will "
"be issued from those branches."
msgstr "git では、それぞれの Django リリースに対して、Django のリリースキーでサインされた、バージョン番号を指すタグが付与されています。さらに、一連のリリースはそれぞれ自分のブランチを持ち、``stable/A.B.x`` と呼ばれ、バグフィックスやセキュリティのリリースは、このブランチから作られます。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:33
msgid ""
"For more information about how the Django project issues new releases for "
"security purposes, please see :doc:`our security policies <security>`."
msgstr "Django プロジェクトでセキュリティ対策の新しいリリースを公開する方法について詳しく知りたければ、:doc:`Django のセキュリティポリシー <security>` を読んでください。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:37
msgid "Feature release"
msgstr "フィーチャーリリース"

#: ../../../../sources/3.1/docs/internals/release-process.txt:39
msgid ""
"Feature releases (A.B, A.B+1, etc.) will happen roughly every eight months "
"-- see `release process`_ for details. These releases will contain new "
"features, improvements to existing features, and such."
msgstr "フィーチャーリリース (A.B、A.B+1 など) は、だいたい8ヶ月ごとに公開されます。詳しくは `release process`_ を読んでください。このリリースには、新機能や既存の機能への改良などが含まれます。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:42
msgid "Patch release"
msgstr "パッチリリース"

#: ../../../../sources/3.1/docs/internals/release-process.txt:44
msgid ""
"Patch releases (A.B.C, A.B.C+1, etc.) will be issued as needed, to fix bugs "
"and/or security issues."
msgstr "パッチリリース (A.B.C、A.B.C+1 など) は必要に応じて公開されます。このリリースでは、バグフィックスやセキュリティ問題へのパッチが含まれます。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:47
msgid ""
"These releases will be 100% compatible with the associated feature release, "
"unless this is impossible for security reasons or to prevent data loss. So "
"the answer to \"should I upgrade to the latest patch release?\" will always "
"be \"yes.\""
msgstr "このリリースでは、セキュリティ問題の解決やデータの損失を避けられない例外的な場合を除いて、対応するフィーチャーリリースとの 100% 後方互換性が保証されています。そのため、「最新のパッチリリースは更新するべきでしょうか？」という質問に対する答えは、常に「はい」です。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:51
msgid "Long-term support release"
msgstr "長期サポートリリース"

#: ../../../../sources/3.1/docs/internals/release-process.txt:53
msgid ""
"Certain feature releases will be designated as long-term support (LTS) "
"releases. These releases will get security and data loss fixes applied for a"
" guaranteed period of time, typically three years."
msgstr "特定のフィーチャーリリースは、長期サポート (long-term support; LTS) リリースに指定されます。このリリースは、通常3年間の保証期間内であれば、セキュリティ問題とデータ損失問題へのパッチが適用されることになっています。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:57
msgid ""
"See `the download page`_ for the releases that have been designated for "
"long-term support."
msgstr "長期保証に指定されたリリースを確認するには、`the download page`_ を見てください。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:65
msgid "Release cadence"
msgstr "リリース周期"

#: ../../../../sources/3.1/docs/internals/release-process.txt:67
msgid ""
"Starting with Django 2.0, version numbers will use a loose form of `semantic"
" versioning <https://semver.org/>`_ such that each version following an LTS "
"will bump to the next \"dot zero\" version. For example: 2.0, 2.1, 2.2 "
"(LTS), 3.0, 3.1, 3.2 (LTS), etc."
msgstr "Django 2.0 から、緩い形で `セマンティックバージョニング <https://semver.org/>`_ を採用します。LTSの次のバージョンは必ず、\".0\" に上げられます。例えば 2.0, 2.1, 2.2 (LTS), 3.0, 3.1, 3.2 (LTS), という具合です。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:72
msgid ""
"SemVer makes it easier to see at a glance how compatible releases are with "
"each other. It also helps to anticipate when compatibility shims will be "
"removed. It's not a pure form of SemVer as each feature release will "
"continue to have a few documented backwards incompatibilities where a "
"deprecation path isn't possible or not worth the cost. Also, deprecations "
"started in an LTS release (X.2) will be dropped in a non-dot-zero release "
"(Y.1) to accommodate our policy of keeping deprecation shims for at least "
"two feature releases. Read on to the next section for an example."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:84
msgid "Deprecation policy"
msgstr "非推奨のポリシー"

#: ../../../../sources/3.1/docs/internals/release-process.txt:86
msgid ""
"A feature release may deprecate certain features from previous releases. If "
"a feature is deprecated in feature release A.x, it will continue to work in "
"all A.x versions (for all versions of x) but raise warnings. Deprecated "
"features will be removed in the B.0 release, or B.1 for features deprecated "
"in the last A.x feature release to ensure deprecations are done over at "
"least 2 feature releases."
msgstr "新しいフィーチャーリリースでは、過去のリリースにある特定の機能が非推奨になることがあります。過去のフィーチャーリリース A.x のある機能が新しいフィーチャーリリースで非推奨になった場合、すべての A.x のバージョン (x の全バージョンに対して) では、それまで通りに機能し続けますが、警告が出るようになります。非推奨になった機能は、バージョン B.0 のリリースで削除されます。ただし、機能の非推奨が A.x の最後のフィーチャーリリースで行われた場合に限り、最低でも2つのフィーチャーリリースで非推奨期間が続いた後に、バージョン B.1  のリリースで削除されます。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:93
msgid ""
"So, for example, if we decided to start the deprecation of a function in "
"Django 4.2:"
msgstr "したがって、たとえば、Django 4.2 である機能を非推奨にすることを決定した場合、その機能は次のような過程をたどることになります。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:96
msgid ""
"Django 4.2 will contain a backwards-compatible replica of the function which"
" will raise a ``RemovedInDjango51Warning``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:99
msgid ""
"Django 5.0 (the version that follows 4.2) will still contain the backwards-"
"compatible replica."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:102
msgid "Django 5.1 will remove the feature outright."
msgstr "Django 5.1 では、この機能が完全に除外されます。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:104
msgid ""
"The warnings are silent by default. You can turn on display of these "
"warnings with the ``python -Wd`` option."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:107
msgid "A more generic example:"
msgstr "より一般的な例では、次のようになります。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:109
msgid "X.0"
msgstr "X.0"

#: ../../../../sources/3.1/docs/internals/release-process.txt:110
msgid "X.1"
msgstr " X.1"

#: ../../../../sources/3.1/docs/internals/release-process.txt:111
msgid "X.2 LTS"
msgstr "X.2 LTS"

#: ../../../../sources/3.1/docs/internals/release-process.txt:112
msgid "Y.0: Drop deprecation shims added in X.0 and X.1."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:113
msgid "Y.1: Drop deprecation shims added in X.2."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:114
msgid ""
"Y.2 LTS: No deprecation shims dropped (while Y.0 is no longer supported, "
"third-party apps need to maintain compatibility back to X.2 LTS to ease LTS "
"to LTS upgrades)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:117
msgid "Z.0: Drop deprecation shims added in Y.0 and Y.1."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:119
msgid "See also the :ref:`deprecating-a-feature` guide."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:124
#: ../../../../sources/3.1/docs/internals/security.txt:44
msgid "Supported versions"
msgstr "サポートバージョン"

#: ../../../../sources/3.1/docs/internals/release-process.txt:126
msgid ""
"At any moment in time, Django's developer team will support a set of "
"releases to varying levels. See `the supported versions section "
"<https://www.djangoproject.com/download/#supported-versions>`_ of the "
"download page for the current state of support for each version."
msgstr "Django の開発チームは、常時さまざまなレベルでリリースセットへのサポートを提供しています。詳しくは、ダウンロードページの `サポートバージョンのセクション <https://www.djangoproject.com/download/#supported-versions>`_ にある、各バージョンに対する現在のサポート状況のリストを見てください。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:131
msgid ""
"The current development master will get new features and bug fixes requiring"
" non-trivial refactoring."
msgstr "現在の開発マスターでは、新機能とある程度のリファクタリングが必要なバグフィックスが含まれたバージョンが取得できます。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:134
msgid ""
"Patches applied to the master branch must also be applied to the last "
"feature release branch, to be released in the next patch release of that "
"feature series, when they fix critical problems:"
msgstr "マスターブランチに対して適用されるパッチは、最後のフィーチャーリリースのブランチにも必ず同時に適用されます。もしその修正が以下に挙げるような致命的な問題を修正していた場合は、その一連のフィーチャーリリースの次のパッチリリースとして必ずリリースされます。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:138
msgid "Security issues."
msgstr "セキュリティ上の問題。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:140
msgid "Data loss bugs."
msgstr "データ損失のバグ。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:142
msgid "Crashing bugs."
msgstr "クラッシュのバグ。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:144
msgid "Major functionality bugs in new features of the latest stable release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:146
msgid ""
"Regressions from older versions of Django introduced in the current release "
"series."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:149
msgid ""
"The rule of thumb is that fixes will be backported to the last feature "
"release for bugs that would have prevented a release in the first place "
"(release blockers)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:153
msgid ""
"Security fixes and data loss bugs will be applied to the current master, the"
" last two feature release branches, and any other supported long-term "
"support release branches."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:157
msgid ""
"Documentation fixes generally will be more freely backported to the last "
"release branch. That's because it's highly advantageous to have the docs for"
" the last release be up-to-date and correct, and the risk of introducing "
"regressions is much less of a concern."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:162
msgid ""
"As a concrete example, consider a moment in time halfway between the release"
" of Django 5.1 and 5.2. At this point in time:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:165
msgid ""
"Features will be added to development master, to be released as Django 5.2."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:167
msgid ""
"Critical bug fixes will be applied to the ``stable/5.1.x`` branch, and "
"released as 5.1.1, 5.1.2, etc."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:170
msgid ""
"Security fixes and bug fixes for data loss issues will be applied to "
"``master`` and to the ``stable/5.1.x``, ``stable/5.0.x``, and "
"``stable/4.2.x`` (LTS) branches. They will trigger the release of ``5.1.1``,"
" ``5.0.5``, ``4.2.8``, etc."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:175
msgid ""
"Documentation fixes will be applied to master, and, if easily backported, to"
" the latest stable branch, ``5.1.x``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:181
msgid "Release process"
msgstr "リリースプロセス"

#: ../../../../sources/3.1/docs/internals/release-process.txt:183
msgid ""
"Django uses a time-based release schedule, with feature releases every eight"
" months or so."
msgstr "Django は期間に基づいたスケジュールを採用しています。フィーチャーリリースは約8ヶ月ごとにリリースされます。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:186
msgid ""
"After each feature release, the release manager will announce a timeline for"
" the next feature release."
msgstr "それぞれのフィーチャーリリースの公開後、リリースマネージャは次のフィーチャーリリースのスケジュールを告知します。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:190
msgid "Release cycle"
msgstr "リリースサイクル"

#: ../../../../sources/3.1/docs/internals/release-process.txt:192
msgid "Each release cycle consists of three parts:"
msgstr "それぞれのリリースサイクルは、以下の3つのパートからなります。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:195
msgid "Phase one: feature proposal"
msgstr "フェーズ1: 機能の提案"

#: ../../../../sources/3.1/docs/internals/release-process.txt:197
msgid ""
"The first phase of the release process will include figuring out what major "
"features to include in the next version. This should include a good deal of "
"preliminary work on those features -- working code trumps grand design."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:201
msgid ""
"Major features for an upcoming release will be added to the wiki roadmap "
"page, e.g. https://code.djangoproject.com/wiki/Version1.11Roadmap."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:205
msgid "Phase two: development"
msgstr "フェーズ2: 開発"

#: ../../../../sources/3.1/docs/internals/release-process.txt:207
msgid ""
"The second part of the release schedule is the \"heads-down\" working "
"period. Using the roadmap produced at the end of phase one, we'll all work "
"very hard to get everything on it done."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:211
msgid ""
"At the end of phase two, any unfinished features will be postponed until the"
" next release."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:214
msgid ""
"Phase two will culminate with an alpha release. At this point, the "
"``stable/A.B.x`` branch will be forked from ``master``."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:218
msgid "Phase three: bugfixes"
msgstr "フェーズ3: バグフィックス"

#: ../../../../sources/3.1/docs/internals/release-process.txt:220
msgid ""
"The last part of a release cycle is spent fixing bugs -- no new features "
"will be accepted during this time. We'll try to release a beta release one "
"month after the alpha and a release candidate one month after the beta."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:224
msgid ""
"The release candidate marks the string freeze, and it happens at least two "
"weeks before the final release. After this point, new translatable strings "
"must not be added."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:228
msgid ""
"During this phase, committers will be more and more conservative with "
"backports, to avoid introducing regressions. After the release candidate, "
"only release blockers and documentation fixes should be backported."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:232
msgid ""
"In parallel to this phase, ``master`` can receive new features, to be "
"released in the ``A.B+1`` cycle."
msgstr ""

#: ../../../../sources/3.1/docs/internals/release-process.txt:236
msgid "Bug-fix releases"
msgstr "バグフィックスリリース"

#: ../../../../sources/3.1/docs/internals/release-process.txt:238
msgid ""
"After a feature release (e.g. A.B), the previous release will go into bugfix"
" mode."
msgstr "フィーチャーリリース (たとえば、A.B) の後、最新のリリースはバグフィックスモードに移行します。"

#: ../../../../sources/3.1/docs/internals/release-process.txt:241
msgid ""
"The branch for the previous feature release (e.g. ``stable/A.B-1.x``) will "
"include bugfixes. Critical bugs fixed on master must *also* be fixed on the "
"bugfix branch; this means that commits need to cleanly separate bug fixes "
"from feature additions. The developer who commits a fix to master will be "
"responsible for also applying the fix to the current bugfix branch."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:3
msgid "Django's security policies"
msgstr "Django のセキュリティポリシー"

#: ../../../../sources/3.1/docs/internals/security.txt:5
msgid ""
"Django's development team is strongly committed to responsible reporting and"
" disclosure of security-related issues. As such, we've adopted and follow a "
"set of policies which conform to that ideal and are geared toward allowing "
"us to deliver timely security updates to the official distribution of "
"Django, as well as to third-party distributions."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:15
msgid "Reporting security issues"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:17
msgid ""
"**Short version: please report security issues by emailing "
"security@djangoproject.com**."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:20
msgid ""
"Most normal bugs in Django are reported to `our public Trac instance`_, but "
"due to the sensitive nature of security issues, we ask that they **not** be "
"publicly reported in this fashion."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:24
msgid ""
"Instead, if you believe you've found something in Django which has security "
"implications, please send a description of the issue via email to "
"``security@djangoproject.com``. Mail sent to that address reaches the "
"`security team <https://www.djangoproject.com/foundation/teams/#security-"
"team>`_."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:29
msgid ""
"Once you've submitted an issue via email, you should receive an "
"acknowledgment from a member of the security team within 48 hours, and "
"depending on the action to be taken, you may receive further followup "
"emails."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:33
msgid "Sending encrypted reports"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:35
msgid ""
"If you want to send an encrypted email (*optional*), the public key ID for "
"``security@djangoproject.com`` is ``0xfcb84b8d1d17f80b``, and this public "
"key is available from most commonly-used keyservers."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:46
msgid ""
"At any given time, the Django team provides official security support for "
"several versions of Django:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:49
msgid ""
"The `master development branch`_, hosted on GitHub, which will become the "
"next major release of Django, receives security support. Security issues "
"that only affect the master development branch and not any stable released "
"versions are fixed in public without going through the :ref:`disclosure "
"process <security-disclosure>`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:55
msgid ""
"The two most recent Django release series receive security support. For "
"example, during the development cycle leading to the release of Django 1.5, "
"support will be provided for Django 1.4 and Django 1.3. Upon the release of "
"Django 1.5, Django 1.3's security support will end."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:61
msgid ""
":term:`Long-term support release`\\s will receive security updates for a "
"specified period."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:64
msgid ""
"When new releases are issued for security reasons, the accompanying notice "
"will include a list of affected versions. This list is comprised solely of "
"*supported* versions of Django: older versions may also be affected, but we "
"do not investigate to determine that, and will not issue patches or new "
"releases for those versions."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:75
msgid "How Django discloses security issues"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:77
msgid ""
"Our process for taking a security issue from private discussion to public "
"disclosure involves multiple steps."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:80
msgid ""
"Approximately one week before public disclosure, we send two notifications:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:82
msgid ""
"First, we notify |django-announce| of the date and approximate time of the "
"upcoming security release, as well as the severity of the issues. This is to"
" aid organizations that need to ensure they have staff available to handle "
"triaging our announcement and upgrade Django as needed. Severity levels are:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:87
msgid "**High**:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:89
msgid "Remote code execution"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:90
msgid "SQL injection"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:92
msgid "**Moderate**:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:94
msgid "Cross site scripting (XSS)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:95
msgid "Cross site request forgery (CSRF)"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:96
msgid "Denial-of-service attacks"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:97
msgid "Broken authentication"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:99
msgid "**Low**:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:101
msgid "Sensitive data exposure"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:102
msgid "Broken session management"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:103
msgid "Unvalidated redirects/forwards"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:104
msgid "Issues requiring an uncommon configuration option"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:106
msgid ""
"Second, we notify a list of :ref:`people and organizations <security-"
"notifications>`, primarily composed of operating-system vendors and other "
"distributors of Django. This email is signed with the PGP key of someone "
"from `Django's release team`_ and consists of:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:111
msgid "A full description of the issue and the affected versions of Django."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:113
msgid "The steps we will be taking to remedy the issue."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:115
msgid "The patch(es), if any, that will be applied to Django."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:117
msgid ""
"The date on which the Django team will apply these patches, issue new "
"releases and publicly disclose the issue."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:120
msgid "On the day of disclosure, we will take the following steps:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:122
msgid "Apply the relevant patch(es) to Django's codebase."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:124
msgid ""
"Issue the relevant release(s), by placing new packages on `the Python "
"Package Index`_ and on the Django website, and tagging the new release(s) in"
" Django's git repository."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:128
msgid ""
"Post a public entry on `the official Django development blog`_, describing "
"the issue and its resolution in detail, pointing to the relevant patches and"
" new releases, and crediting the reporter of the issue (if the reporter "
"wishes to be publicly identified)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:133
msgid ""
"Post a notice to the |django-announce| and oss-security@lists.openwall.com "
"mailing lists that links to the blog post."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:139
msgid ""
"If a reported issue is believed to be particularly time-sensitive -- due to "
"a known exploit in the wild, for example -- the time between advance "
"notification and public disclosure may be shortened considerably."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:144
msgid ""
"Additionally, if we have reason to believe that an issue reported to us "
"affects other frameworks or tools in the Python/web ecosystem, we may "
"privately contact and discuss those issues with the appropriate maintainers,"
" and coordinate our own disclosure and resolution with theirs."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:150
msgid ""
"The Django team also maintains an :doc:`archive of security issues disclosed"
" in Django</releases/security>`."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:158
msgid "Who receives advance notification"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:160
msgid ""
"The full list of people and organizations who receive advance notification "
"of security issues is not and will not be made public."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:163
msgid ""
"We also aim to keep this list as small as effectively possible, in order to "
"better manage the flow of confidential information prior to disclosure. As "
"such, our notification list is *not* simply a list of users of Django, and "
"being a user of Django is not sufficient reason to be placed on the "
"notification list."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:169
msgid ""
"In broad terms, recipients of security notifications fall into three groups:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:172
msgid ""
"Operating-system vendors and other distributors of Django who provide a "
"suitably-generic (i.e., *not* an individual's personal email address) "
"contact address for reporting issues with their Django package, or for "
"general security reporting. In either case, such addresses **must not** "
"forward to public mailing lists or bug trackers. Addresses which forward to "
"the private email of an individual maintainer or security-response contact "
"are acceptable, although private security trackers or security-response "
"groups are strongly preferred."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:182
msgid ""
"On a case-by-case basis, individual package maintainers who have "
"demonstrated a commitment to responding to and responsibly acting on these "
"notifications."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:186
msgid ""
"On a case-by-case basis, other entities who, in the judgment of the Django "
"development team, need to be made aware of a pending security issue. "
"Typically, membership in this group will consist of some of the largest "
"and/or most likely to be severely impacted known users or distributors of "
"Django, and will require a demonstrated ability to responsibly receive, keep"
" confidential and act on these notifications."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:194
msgid "Security audit and scanning entities"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:196
msgid ""
"As a policy, we do not add these types of entities to the notification list."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:200
msgid "Requesting notifications"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:202
msgid ""
"If you believe that you, or an organization you are authorized to represent,"
" fall into one of the groups listed above, you can ask to be added to "
"Django's notification list by emailing ``security@djangoproject.com``. "
"Please use the subject line \"Security notification request\"."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:208
msgid "Your request **must** include the following information:"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:210
msgid ""
"Your full, real name and the name of the organization you represent, if "
"applicable, as well as your role within that organization."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:213
msgid ""
"A detailed explanation of how you or your organization fit at least one set "
"of criteria listed above."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:216
msgid ""
"A detailed explanation of why you are requesting security notifications. "
"Again, please keep in mind that this is *not* simply a list for users of "
"Django, and the overwhelming majority of users should subscribe to |django-"
"announce| to receive advanced notice of when a security release will happen,"
" without the details of the issues, rather than request detailed "
"notifications."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:223
msgid ""
"The email address you would like to have added to our notification list."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:226
msgid ""
"An explanation of who will be receiving/reviewing mail sent to that address,"
" as well as information regarding any automated actions that will be taken "
"(i.e., filing of a confidential issue in a bug tracker)."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:231
msgid ""
"For individuals, the ID of a public key associated with your address which "
"can be used to verify email received from you and encrypt email sent to you,"
" as needed."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:235
msgid ""
"Once submitted, your request will be considered by the Django development "
"team; you will receive a reply notifying you of the result of your request "
"within 30 days."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:239
msgid ""
"Please also bear in mind that for any individual or organization, receiving "
"security notifications is a privilege granted at the sole discretion of the "
"Django development team, and that this privilege can be revoked at any time,"
" with or without explanation."
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:244
msgid "Provide all required information"
msgstr ""

#: ../../../../sources/3.1/docs/internals/security.txt:246
msgid ""
"A failure to provide the required information in your initial contact will "
"count against you when making the decision on whether or not to approve your"
" request."
msgstr ""
